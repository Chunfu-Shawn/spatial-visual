{"ast":null,"code":"import { parse } from './txml.mjs';\nimport through2 from 'through2';\n\nfunction transformStream(offset, parseOptions) {\n  if (!parseOptions) parseOptions = {};\n\n  if (typeof offset === 'string') {\n    offset = offset.length;\n  }\n\n  var position = offset || 0;\n  var data = '';\n  const stream = through2({\n    readableObjectMode: true\n  }, function (chunk, enc, callback) {\n    data += chunk;\n    var lastPos = 0;\n\n    do {\n      position = data.indexOf('<', position) + 1;\n\n      if (!position) {\n        position = lastPos;\n        return callback();\n      }\n\n      if (data[position] === '/') {\n        position = position + 1;\n        lastPos = position;\n        continue;\n      }\n\n      if (data[position] === '!' && data[position + 1] === '-' && data[position + 2] === '-') {\n        const commentEnd = data.indexOf('-->', position + 3);\n\n        if (commentEnd === -1) {\n          data = data.slice(lastPos);\n          position = 0;\n          return callback();\n        }\n\n        if (parseOptions.keepComments) {\n          this.push(data.substring(position - 1, commentEnd + 3));\n        }\n\n        position = commentEnd + 1;\n        lastPos = commentEnd;\n        continue;\n      }\n\n      var res = parse(data, { ...parseOptions,\n        pos: position - 1,\n        parseNode: true,\n        setPos: true\n      });\n      position = res.pos; //console.log(res, res.pos)\n\n      if (position > data.length - 1 || position < lastPos) {\n        data = data.slice(lastPos);\n        position = 0;\n        return callback();\n      } else {\n        this.push(res);\n        lastPos = position;\n      }\n    } while (1);\n  });\n  return stream;\n}\n\nexport { transformStream };","map":{"version":3,"sources":["/Users/chunfu/IdeaProjects/spatial-visual/node_modules/txml/txml/dist/transformStream.mjs"],"names":["parse","through2","transformStream","offset","parseOptions","length","position","data","stream","readableObjectMode","chunk","enc","callback","lastPos","indexOf","commentEnd","slice","keepComments","push","substring","res","pos","parseNode","setPos"],"mappings":"AAAA,SAASA,KAAT,QAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,SAASC,eAAT,CAAyBC,MAAzB,EAAiCC,YAAjC,EAA+C;AAC3C,MAAG,CAACA,YAAJ,EAAkBA,YAAY,GAAG,EAAf;;AAClB,MAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC5BA,IAAAA,MAAM,GAAGA,MAAM,CAACE,MAAhB;AACH;;AAED,MAAIC,QAAQ,GAAGH,MAAM,IAAI,CAAzB;AACA,MAAII,IAAI,GAAG,EAAX;AACA,QAAMC,MAAM,GAAGP,QAAQ,CAAC;AAAEQ,IAAAA,kBAAkB,EAAE;AAAtB,GAAD,EAA+B,UAAUC,KAAV,EAAiBC,GAAjB,EAAsBC,QAAtB,EAAgC;AAClFL,IAAAA,IAAI,IAAIG,KAAR;AACA,QAAIG,OAAO,GAAG,CAAd;;AACA,OAAG;AACCP,MAAAA,QAAQ,GAAGC,IAAI,CAACO,OAAL,CAAa,GAAb,EAAkBR,QAAlB,IAA8B,CAAzC;;AAEA,UAAI,CAACA,QAAL,EAAe;AACXA,QAAAA,QAAQ,GAAGO,OAAX;AACA,eAAOD,QAAQ,EAAf;AAA+B;;AACnC,UAAIL,IAAI,CAACD,QAAD,CAAJ,KAAmB,GAAvB,EAA4B;AACxBA,QAAAA,QAAQ,GAAGA,QAAQ,GAAG,CAAtB;AACAO,QAAAA,OAAO,GAAGP,QAAV;AACA;AACH;;AACD,UAAIC,IAAI,CAACD,QAAD,CAAJ,KAAmB,GAAnB,IAA0BC,IAAI,CAACD,QAAQ,GAAG,CAAZ,CAAJ,KAAuB,GAAjD,IAAwDC,IAAI,CAACD,QAAQ,GAAG,CAAZ,CAAJ,KAAuB,GAAnF,EAAwF;AACpF,cAAMS,UAAU,GAAGR,IAAI,CAACO,OAAL,CAAa,KAAb,EAAoBR,QAAQ,GAAG,CAA/B,CAAnB;;AACA,YAAIS,UAAU,KAAK,CAAC,CAApB,EAAuB;AACnBR,UAAAA,IAAI,GAAGA,IAAI,CAACS,KAAL,CAAWH,OAAX,CAAP;AACAP,UAAAA,QAAQ,GAAG,CAAX;AACA,iBAAOM,QAAQ,EAAf;AAAmC;;AAEvC,YAAGR,YAAY,CAACa,YAAhB,EAA6B;AACzB,eAAKC,IAAL,CAAUX,IAAI,CAACY,SAAL,CAAeb,QAAQ,GAAC,CAAxB,EAA2BS,UAAU,GAAC,CAAtC,CAAV;AACH;;AAEDT,QAAAA,QAAQ,GAAGS,UAAU,GAAG,CAAxB;AACAF,QAAAA,OAAO,GAAGE,UAAV;AACA;AACH;;AAED,UAAIK,GAAG,GAAGpB,KAAK,CAACO,IAAD,EAAO,EAAC,GAAGH,YAAJ;AAAkBiB,QAAAA,GAAG,EAAEf,QAAQ,GAAG,CAAlC;AAAqCgB,QAAAA,SAAS,EAAE,IAAhD;AAAsDC,QAAAA,MAAM,EAAE;AAA9D,OAAP,CAAf;AACAjB,MAAAA,QAAQ,GAAGc,GAAG,CAACC,GAAf,CA5BD,CA6BC;;AACA,UAAIf,QAAQ,GAAIC,IAAI,CAACF,MAAL,GAAc,CAA1B,IAAgCC,QAAQ,GAAGO,OAA/C,EAAwD;AACpDN,QAAAA,IAAI,GAAGA,IAAI,CAACS,KAAL,CAAWH,OAAX,CAAP;AACAP,QAAAA,QAAQ,GAAG,CAAX;AACA,eAAOM,QAAQ,EAAf;AAA+B,OAHnC,MAGyC;AACrC,aAAKM,IAAL,CAAUE,GAAV;AACAP,QAAAA,OAAO,GAAGP,QAAV;AACH;AACJ,KArCD,QAqCS,CArCT;AAsCH,GAzCsB,CAAvB;AA2CA,SAAOE,MAAP;AACH;;AAED,SAASN,eAAT","sourcesContent":["import { parse } from './txml.mjs';\nimport through2 from 'through2';\n\nfunction transformStream(offset, parseOptions) {\n    if(!parseOptions) parseOptions = {};\n    if (typeof offset === 'string') {\n        offset = offset.length;\n    }\n\n    var position = offset || 0;\n    var data = '';\n    const stream = through2({ readableObjectMode: true }, function (chunk, enc, callback) {\n        data += chunk;\n        var lastPos = 0;\n        do {\n            position = data.indexOf('<', position) + 1;\n            \n            if (!position) {\n                position = lastPos;\n                return callback();            }\n            if (data[position] === '/') {\n                position = position + 1;\n                lastPos = position;\n                continue;\n            }\n            if (data[position] === '!' && data[position + 1] === '-' && data[position + 2] === '-') {\n                const commentEnd = data.indexOf('-->', position + 3);\n                if (commentEnd === -1) {\n                    data = data.slice(lastPos);\n                    position = 0;\n                    return callback();                }\n\n                if(parseOptions.keepComments){\n                    this.push(data.substring(position-1, commentEnd+3));\n                }\n\n                position = commentEnd + 1;\n                lastPos = commentEnd;\n                continue;\n            }\n\n            var res = parse(data, {...parseOptions, pos: position - 1, parseNode: true, setPos: true });\n            position = res.pos;\n            //console.log(res, res.pos)\n            if (position > (data.length - 1) || position < lastPos) {\n                data = data.slice(lastPos);\n                position = 0;\n                return callback();            } else {\n                this.push(res);\n                lastPos = position;\n            }\n        } while (1);\n    });\n\n    return stream;\n}\n\nexport { transformStream };\n"]},"metadata":{},"sourceType":"module"}