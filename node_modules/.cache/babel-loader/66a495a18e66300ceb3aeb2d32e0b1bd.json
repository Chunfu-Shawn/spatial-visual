{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/chunfu/IdeaProjects/spatial-visual/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport { stringValue } from 'vega-util';\nimport { FACET_CHANNELS } from '../../channel';\nimport { SELECTION_ID } from '../../selection';\nimport { vals } from '../../util';\nimport { isFacetModel } from '../model';\nimport interval from './interval';\nimport multi from './multi';\nimport single from './single';\nexport var STORE = '_store';\nexport var TUPLE = '_tuple';\nexport var MODIFY = '_modify';\nexport var SELECTION_DOMAIN = '_selection_domain_';\nexport var VL_SELECTION_RESOLVE = 'vlSelectionResolve';\nvar compilers = {\n  single: single,\n  multi: multi,\n  interval: interval\n};\nexport function forEachSelection(model, cb) {\n  var selections = model.component.selection;\n\n  if (selections) {\n    var _iterator = _createForOfIteratorHelper(vals(selections)),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var sel = _step.value;\n        var success = cb(sel, compilers[sel.type]);\n        if (success === true) break;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n}\n\nfunction getFacetModel(model) {\n  var parent = model.parent;\n\n  while (parent) {\n    if (isFacetModel(parent)) {\n      break;\n    }\n\n    parent = parent.parent;\n  }\n\n  return parent;\n}\n\nexport function unitName(model) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    escape: true\n  },\n      escape = _ref.escape;\n\n  var name = escape ? stringValue(model.name) : model.name;\n  var facetModel = getFacetModel(model);\n\n  if (facetModel) {\n    var facet = facetModel.facet;\n\n    var _iterator2 = _createForOfIteratorHelper(FACET_CHANNELS),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var channel = _step2.value;\n\n        if (facet[channel]) {\n          name += \" + '__facet_\".concat(channel, \"_' + (facet[\").concat(stringValue(facetModel.vgField(channel)), \"])\");\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  return name;\n}\nexport function requiresSelectionId(model) {\n  var identifier = false;\n  forEachSelection(model, function (selCmpt) {\n    identifier = identifier || selCmpt.project.items.some(function (proj) {\n      return proj.field === SELECTION_ID;\n    });\n  });\n  return identifier;\n}","map":{"version":3,"sources":["../../../../src/compile/selection/index.ts"],"names":[],"mappings":";AACA,SAAQ,WAAR,QAA0B,WAA1B;AACA,SAAQ,cAAR,QAA6B,eAA7B;AACA,SAOE,YAPF,QAQO,iBARP;AASA,SAAc,IAAd,QAAyB,YAAzB;AAGA,SAAQ,YAAR,QAAkC,UAAlC;AAEA,OAAO,QAAP,MAAqB,YAArB;AACA,OAAO,KAAP,MAAkB,SAAlB;AACA,OAAO,MAAP,MAAmB,UAAnB;AAGA,OAAO,IAAM,KAAK,GAAG,QAAd;AACP,OAAO,IAAM,KAAK,GAAG,QAAd;AACP,OAAO,IAAM,MAAM,GAAG,SAAf;AACP,OAAO,IAAM,gBAAgB,GAAG,oBAAzB;AACP,OAAO,IAAM,oBAAoB,GAAG,oBAA7B;AAqCP,IAAM,SAAS,GAA4B;AAAC,EAAA,MAAM,EAAN,MAAD;AAAS,EAAA,KAAK,EAAL,KAAT;AAAgB,EAAA,QAAQ,EAAR;AAAhB,CAA3C;AAEA,OAAM,SAAU,gBAAV,CACJ,KADI,EAEJ,EAFI,EAE+E;AAEnF,MAAM,UAAU,GAAG,KAAK,CAAC,SAAN,CAAgB,SAAnC;;AACA,MAAI,UAAJ,EAAgB;AAAA,+CACI,IAAI,CAAC,UAAD,CADR;AAAA;;AAAA;AACd,0DAAoC;AAAA,YAAzB,GAAyB;AAClC,YAAM,OAAO,GAAG,EAAE,CAAC,GAAD,EAAM,SAAS,CAAC,GAAG,CAAC,IAAL,CAAf,CAAlB;AACA,YAAI,OAAO,KAAK,IAAhB,EAAsB;AACvB;AAJa;AAAA;AAAA;AAAA;AAAA;AAKf;AACF;;AAED,SAAS,aAAT,CAAuB,KAAvB,EAAmC;AACjC,MAAI,MAAM,GAAG,KAAK,CAAC,MAAnB;;AACA,SAAO,MAAP,EAAe;AACb,QAAI,YAAY,CAAC,MAAD,CAAhB,EAA0B;AACxB;AACD;;AACD,IAAA,MAAM,GAAG,MAAM,CAAC,MAAhB;AACD;;AAED,SAAO,MAAP;AACD;;AAED,OAAM,SAAU,QAAV,CAAmB,KAAnB,EAA0D;AAAA,iFAAd;AAAC,IAAA,MAAM,EAAE;AAAT,GAAc;AAAA,MAAxB,MAAwB,QAAxB,MAAwB;;AAC9D,MAAI,IAAI,GAAG,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,IAAP,CAAd,GAA6B,KAAK,CAAC,IAApD;AACA,MAAM,UAAU,GAAG,aAAa,CAAC,KAAD,CAAhC;;AACA,MAAI,UAAJ,EAAgB;AACd,QAAO,KAAP,GAAgB,UAAhB,CAAO,KAAP;;AADc,gDAEQ,cAFR;AAAA;;AAAA;AAEd,6DAAsC;AAAA,YAA3B,OAA2B;;AACpC,YAAI,KAAK,CAAC,OAAD,CAAT,EAAoB;AAClB,UAAA,IAAI,0BAAmB,OAAnB,yBAAyC,WAAW,CAAC,UAAU,CAAC,OAAX,CAAmB,OAAnB,CAAD,CAApD,OAAJ;AACD;AACF;AANa;AAAA;AAAA;AAAA;AAAA;AAOf;;AACD,SAAO,IAAP;AACD;AAED,OAAM,SAAU,mBAAV,CAA8B,KAA9B,EAA0C;AAC9C,MAAI,UAAU,GAAG,KAAjB;AACA,EAAA,gBAAgB,CAAC,KAAD,EAAQ,UAAA,OAAO,EAAG;AAChC,IAAA,UAAU,GAAG,UAAU,IAAI,OAAO,CAAC,OAAR,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,UAAA,IAAI;AAAA,aAAI,IAAI,CAAC,KAAL,KAAe,YAAnB;AAAA,KAA/B,CAA3B;AACD,GAFe,CAAhB;AAGA,SAAO,UAAP;AACD","sourceRoot":"","sourcesContent":["import { stringValue } from 'vega-util';\nimport { FACET_CHANNELS } from '../../channel';\nimport { SELECTION_ID } from '../../selection';\nimport { vals } from '../../util';\nimport { isFacetModel } from '../model';\nimport interval from './interval';\nimport multi from './multi';\nimport single from './single';\nexport const STORE = '_store';\nexport const TUPLE = '_tuple';\nexport const MODIFY = '_modify';\nexport const SELECTION_DOMAIN = '_selection_domain_';\nexport const VL_SELECTION_RESOLVE = 'vlSelectionResolve';\nconst compilers = { single, multi, interval };\nexport function forEachSelection(model, cb) {\n    const selections = model.component.selection;\n    if (selections) {\n        for (const sel of vals(selections)) {\n            const success = cb(sel, compilers[sel.type]);\n            if (success === true)\n                break;\n        }\n    }\n}\nfunction getFacetModel(model) {\n    let parent = model.parent;\n    while (parent) {\n        if (isFacetModel(parent)) {\n            break;\n        }\n        parent = parent.parent;\n    }\n    return parent;\n}\nexport function unitName(model, { escape } = { escape: true }) {\n    let name = escape ? stringValue(model.name) : model.name;\n    const facetModel = getFacetModel(model);\n    if (facetModel) {\n        const { facet } = facetModel;\n        for (const channel of FACET_CHANNELS) {\n            if (facet[channel]) {\n                name += ` + '__facet_${channel}_' + (facet[${stringValue(facetModel.vgField(channel))}])`;\n            }\n        }\n    }\n    return name;\n}\nexport function requiresSelectionId(model) {\n    let identifier = false;\n    forEachSelection(model, selCmpt => {\n        identifier = identifier || selCmpt.project.items.some(proj => proj.field === SELECTION_ID);\n    });\n    return identifier;\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}