{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chunfu/IdeaProjects/spatial-visual/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chunfu/IdeaProjects/spatial-visual/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/chunfu/IdeaProjects/spatial-visual/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chunfu/IdeaProjects/spatial-visual/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { log } from '@deck.gl/core';\n\nvar Tile2DHeader = /*#__PURE__*/function () {\n  function Tile2DHeader(_ref) {\n    var x = _ref.x,\n        y = _ref.y,\n        z = _ref.z,\n        onTileLoad = _ref.onTileLoad,\n        onTileError = _ref.onTileError;\n\n    _classCallCheck(this, Tile2DHeader);\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.isVisible = false;\n    this.isSelected = false;\n    this.parent = null;\n    this.children = [];\n    this.content = null;\n    this._isLoaded = false;\n    this._isCancelled = false;\n    this.onTileLoad = onTileLoad;\n    this.onTileError = onTileError;\n  }\n\n  _createClass(Tile2DHeader, [{\n    key: \"data\",\n    get: function get() {\n      return this._isLoaded ? this.content : this._loader;\n    }\n  }, {\n    key: \"isLoaded\",\n    get: function get() {\n      return this._isLoaded;\n    }\n  }, {\n    key: \"isLoading\",\n    get: function get() {\n      return Boolean(this._loader);\n    }\n  }, {\n    key: \"isCancelled\",\n    get: function get() {\n      return this._isCancelled;\n    }\n  }, {\n    key: \"byteLength\",\n    get: function get() {\n      var result = this.content ? this.content.byteLength : 0;\n\n      if (!Number.isFinite(result)) {\n        log.error('byteLength not defined in tile data')();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_loadData\",\n    value: function () {\n      var _loadData2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(getTileData, requestScheduler) {\n        var x, y, z, bbox, signal, requestToken, tileData, error;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                x = this.x, y = this.y, z = this.z, bbox = this.bbox;\n                this._abortController = new AbortController();\n                signal = this._abortController.signal;\n                _context.next = 5;\n                return requestScheduler.scheduleRequest(this, function (tile) {\n                  return tile.isSelected ? 1 : -1;\n                });\n\n              case 5:\n                requestToken = _context.sent;\n\n                if (requestToken) {\n                  _context.next = 9;\n                  break;\n                }\n\n                this._isCancelled = true;\n                return _context.abrupt(\"return\");\n\n              case 9:\n                if (!this._isCancelled) {\n                  _context.next = 12;\n                  break;\n                }\n\n                requestToken.done();\n                return _context.abrupt(\"return\");\n\n              case 12:\n                _context.prev = 12;\n                _context.next = 15;\n                return getTileData({\n                  x: x,\n                  y: y,\n                  z: z,\n                  bbox: bbox,\n                  signal: signal\n                });\n\n              case 15:\n                tileData = _context.sent;\n                _context.next = 21;\n                break;\n\n              case 18:\n                _context.prev = 18;\n                _context.t0 = _context[\"catch\"](12);\n                error = _context.t0 || true;\n\n              case 21:\n                _context.prev = 21;\n                requestToken.done();\n\n                if (this._isCancelled && !tileData) {\n                  this._isLoaded = false;\n                } else {\n                  this._isLoaded = true;\n                  this._isCancelled = false;\n                }\n\n                return _context.finish(21);\n\n              case 25:\n                if (this._isLoaded) {\n                  _context.next = 27;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 27:\n                if (error) {\n                  this.onTileError(error, this);\n                } else {\n                  this.content = tileData;\n                  this.onTileLoad(this);\n                }\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[12, 18, 21, 25]]);\n      }));\n\n      function _loadData(_x, _x2) {\n        return _loadData2.apply(this, arguments);\n      }\n\n      return _loadData;\n    }()\n  }, {\n    key: \"loadData\",\n    value: function loadData(getTileData, requestScheduler) {\n      var _this = this;\n\n      if (!getTileData) {\n        return;\n      }\n\n      this._isCancelled = false;\n      this._loader = this._loadData(getTileData, requestScheduler);\n\n      this._loader.finally(function () {\n        _this._loader = undefined;\n      });\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      if (this.isLoaded) {\n        return;\n      }\n\n      this._isCancelled = true;\n\n      this._abortController.abort();\n    }\n  }]);\n\n  return Tile2DHeader;\n}();\n\nexport { Tile2DHeader as default };","map":{"version":3,"sources":["../../../src/tile-layer/tile-2d-header.js"],"names":["constructor","onTileError","Boolean","result","Number","log","bbox","signal","requestToken","tile","tileData","getTileData","x","y","z","error","err","loadData","abort"],"mappings":"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","sourcesContent":["/* eslint-env browser */\nimport {log} from '@deck.gl/core';\n\nexport default class Tile2DHeader {\n  constructor({x, y, z, onTileLoad, onTileError}) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.isVisible = false;\n    this.isSelected = false;\n    this.parent = null;\n    this.children = [];\n\n    this.content = null;\n    this._isLoaded = false;\n    this._isCancelled = false;\n\n    this.onTileLoad = onTileLoad;\n    this.onTileError = onTileError;\n  }\n\n  get data() {\n    return this._isLoaded ? this.content : this._loader;\n  }\n\n  get isLoaded() {\n    return this._isLoaded;\n  }\n\n  get isLoading() {\n    return Boolean(this._loader);\n  }\n\n  get isCancelled() {\n    return this._isCancelled;\n  }\n\n  get byteLength() {\n    const result = this.content ? this.content.byteLength : 0;\n    if (!Number.isFinite(result)) {\n      log.error('byteLength not defined in tile data')();\n    }\n    return result;\n  }\n\n  /* eslint-disable max-statements */\n  async _loadData(getTileData, requestScheduler) {\n    const {x, y, z, bbox} = this;\n\n    this._abortController = new AbortController(); // eslint-disable-line no-undef\n    const {signal} = this._abortController;\n\n    const requestToken = await requestScheduler.scheduleRequest(this, tile => {\n      return tile.isSelected ? 1 : -1;\n    });\n\n    if (!requestToken) {\n      this._isCancelled = true;\n      return;\n    }\n    // A tile can be cancelled while being scheduled\n    if (this._isCancelled) {\n      requestToken.done();\n      return;\n    }\n\n    let tileData;\n    let error;\n    try {\n      tileData = await getTileData({x, y, z, bbox, signal});\n    } catch (err) {\n      error = err || true;\n    } finally {\n      requestToken.done();\n\n      if (this._isCancelled && !tileData) {\n        this._isLoaded = false;\n      } else {\n        // Consider it loaded if we tried to cancel but `getTileData` still returned data\n        this._isLoaded = true;\n        this._isCancelled = false;\n      }\n    }\n\n    if (!this._isLoaded) {\n      return;\n    }\n\n    if (error) {\n      this.onTileError(error, this);\n    } else {\n      this.content = tileData;\n      this.onTileLoad(this);\n    }\n  }\n  /* eslint-enable max-statements */\n\n  loadData(getTileData, requestScheduler) {\n    if (!getTileData) {\n      return;\n    }\n\n    this._isCancelled = false;\n    this._loader = this._loadData(getTileData, requestScheduler);\n    this._loader.finally(() => {\n      this._loader = undefined;\n    });\n  }\n\n  abort() {\n    if (this.isLoaded) {\n      return;\n    }\n\n    this._isCancelled = true;\n    this._abortController.abort();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}