{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { isArray, isString } from 'vega-util';\nimport { pick } from './util';\nexport function extractTitleConfig(titleConfig) {\n  var anchor = titleConfig.anchor,\n      frame = titleConfig.frame,\n      offset = titleConfig.offset,\n      orient = titleConfig.orient,\n      color = titleConfig.color,\n      subtitleColor = titleConfig.subtitleColor,\n      subtitleFont = titleConfig.subtitleFont,\n      subtitleFontSize = titleConfig.subtitleFontSize,\n      subtitleFontStyle = titleConfig.subtitleFontStyle,\n      subtitleFontWeight = titleConfig.subtitleFontWeight,\n      subtitleLineHeight = titleConfig.subtitleLineHeight,\n      subtitlePadding = titleConfig.subtitlePadding,\n      rest = __rest(titleConfig, [\"anchor\", \"frame\", \"offset\", \"orient\", \"color\", \"subtitleColor\", \"subtitleFont\", \"subtitleFontSize\", \"subtitleFontStyle\", \"subtitleFontWeight\", \"subtitleLineHeight\", \"subtitlePadding\"]);\n\n  var titleMarkConfig = Object.assign(Object.assign({}, rest), color ? {\n    fill: color\n  } : {}); // These are non-mark title config that need to be hardcoded\n\n  var nonMark = Object.assign(Object.assign(Object.assign(Object.assign({}, anchor ? {\n    anchor: anchor\n  } : {}), frame ? {\n    frame: frame\n  } : {}), offset ? {\n    offset: offset\n  } : {}), orient ? {\n    orient: orient\n  } : {}); // subtitle part can stay in config.title since header titles do not use subtitle\n\n  var subtitle = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, subtitleColor ? {\n    subtitleColor: subtitleColor\n  } : {}), subtitleFont ? {\n    subtitleFont: subtitleFont\n  } : {}), subtitleFontSize ? {\n    subtitleFontSize: subtitleFontSize\n  } : {}), subtitleFontStyle ? {\n    subtitleFontStyle: subtitleFontStyle\n  } : {}), subtitleFontWeight ? {\n    subtitleFontWeight: subtitleFontWeight\n  } : {}), subtitleLineHeight ? {\n    subtitleLineHeight: subtitleLineHeight\n  } : {}), subtitlePadding ? {\n    subtitlePadding: subtitlePadding\n  } : {});\n  var subtitleMarkConfig = pick(titleMarkConfig, ['align', 'baseline', 'dx', 'dy', 'limit']);\n  return {\n    titleMarkConfig: titleMarkConfig,\n    subtitleMarkConfig: subtitleMarkConfig,\n    nonMark: nonMark,\n    subtitle: subtitle\n  };\n}\nexport function isText(v) {\n  return isString(v) || isArray(v) && isString(v[0]);\n}","map":{"version":3,"sources":["../../src/title.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isArray, isString } from 'vega-util';\nimport { pick } from './util';\nexport function extractTitleConfig(titleConfig) {\n    const { \n    // These are non-mark title config that need to be hardcoded\n    anchor, frame, offset, orient, \n    // color needs to be redirect to fill\n    color, \n    // subtitle properties\n    subtitleColor, subtitleFont, subtitleFontSize, subtitleFontStyle, subtitleFontWeight, subtitleLineHeight, subtitlePadding } = titleConfig, \n    // The rest are mark config.\n    rest = __rest(titleConfig, [\"anchor\", \"frame\", \"offset\", \"orient\", \"color\", \"subtitleColor\", \"subtitleFont\", \"subtitleFontSize\", \"subtitleFontStyle\", \"subtitleFontWeight\", \"subtitleLineHeight\", \"subtitlePadding\"]);\n    const titleMarkConfig = Object.assign(Object.assign({}, rest), (color ? { fill: color } : {}));\n    // These are non-mark title config that need to be hardcoded\n    const nonMark = Object.assign(Object.assign(Object.assign(Object.assign({}, (anchor ? { anchor } : {})), (frame ? { frame } : {})), (offset ? { offset } : {})), (orient ? { orient } : {}));\n    // subtitle part can stay in config.title since header titles do not use subtitle\n    const subtitle = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (subtitleColor ? { subtitleColor } : {})), (subtitleFont ? { subtitleFont } : {})), (subtitleFontSize ? { subtitleFontSize } : {})), (subtitleFontStyle ? { subtitleFontStyle } : {})), (subtitleFontWeight ? { subtitleFontWeight } : {})), (subtitleLineHeight ? { subtitleLineHeight } : {})), (subtitlePadding ? { subtitlePadding } : {}));\n    const subtitleMarkConfig = pick(titleMarkConfig, ['align', 'baseline', 'dx', 'dy', 'limit']);\n    return { titleMarkConfig, subtitleMarkConfig, nonMark, subtitle };\n}\nexport function isText(v) {\n    return isString(v) || (isArray(v) && isString(v[0]));\n}\n//# sourceMappingURL=title.js.map"]},"metadata":{},"sourceType":"module"}