{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/chunfu/IdeaProjects/spatial-visual/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport clear from './clear';\nimport inputs from './inputs';\nimport nearest from './nearest';\nimport project from './project';\nimport scales from './scales';\nimport legends from './legends';\nimport toggle from './toggle';\nimport translate from './translate';\nimport zoom from './zoom';\nvar compilers = [project, toggle, scales, legends, translate, zoom, inputs, nearest, clear];\nexport function forEachTransform(selCmpt, cb) {\n  var _iterator = _createForOfIteratorHelper(compilers),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var t = _step.value;\n\n      if (t.has(selCmpt)) {\n        cb(t);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}","map":{"version":3,"sources":["../../../../../src/compile/selection/transforms/transforms.ts"],"names":[],"mappings":";AAKA,OAAO,KAAP,MAAkB,SAAlB;AACA,OAAO,MAAP,MAAmB,UAAnB;AACA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,MAAP,MAAmB,UAAnB;AACA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,MAAP,MAAmB,UAAnB;AACA,OAAO,SAAP,MAAsB,aAAtB;AACA,OAAO,IAAP,MAAiB,QAAjB;AAWA,IAAM,SAAS,GAAwB,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,OAA1B,EAAmC,SAAnC,EAA8C,IAA9C,EAAoD,MAApD,EAA4D,OAA5D,EAAqE,KAArE,CAAvC;AAEA,OAAM,SAAU,gBAAV,CAA2B,OAA3B,EAAwD,EAAxD,EAA2F;AAAA,6CAC/E,SAD+E;AAAA;;AAAA;AAC/F,wDAA2B;AAAA,UAAhB,CAAgB;;AACzB,UAAI,CAAC,CAAC,GAAF,CAAM,OAAN,CAAJ,EAAoB;AAClB,QAAA,EAAE,CAAC,CAAD,CAAF;AACD;AACF;AAL8F;AAAA;AAAA;AAAA;AAAA;AAMhG","sourceRoot":"","sourcesContent":["import clear from './clear';\nimport inputs from './inputs';\nimport nearest from './nearest';\nimport project from './project';\nimport scales from './scales';\nimport legends from './legends';\nimport toggle from './toggle';\nimport translate from './translate';\nimport zoom from './zoom';\nconst compilers = [project, toggle, scales, legends, translate, zoom, inputs, nearest, clear];\nexport function forEachTransform(selCmpt, cb) {\n    for (const t of compilers) {\n        if (t.has(selCmpt)) {\n            cb(t);\n        }\n    }\n}\n//# sourceMappingURL=transforms.js.map"]},"metadata":{},"sourceType":"module"}