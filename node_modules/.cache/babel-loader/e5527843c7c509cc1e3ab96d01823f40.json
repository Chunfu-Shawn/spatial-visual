{"ast":null,"code":"import { TUPLE, unitName } from '.';\nimport { singleOrMultiSignals } from './multi';\nvar single = {\n  signals: singleOrMultiSignals,\n  modifyExpr: function modifyExpr(model, selCmpt) {\n    var tpl = selCmpt.name + TUPLE;\n    return tpl + ', ' + (selCmpt.resolve === 'global' ? 'true' : \"{unit: \".concat(unitName(model), \"}\"));\n  }\n};\nexport default single;","map":{"version":3,"sources":["../../../../src/compile/selection/single.ts"],"names":[],"mappings":"AAAA,SAA2B,KAA3B,EAAkC,QAAlC,QAAiD,GAAjD;AACA,SAAQ,oBAAR,QAAmC,SAAnC;AAEA,IAAM,MAAM,GAAgC;AAC1C,EAAA,OAAO,EAAE,oBADiC;AAG1C,EAAA,UAAU,EAAE,oBAAC,KAAD,EAAQ,OAAR,EAAmB;AAC7B,QAAM,GAAG,GAAG,OAAO,CAAC,IAAR,GAAe,KAA3B;AACA,WAAO,GAAG,GAAG,IAAN,IAAc,OAAO,CAAC,OAAR,KAAoB,QAApB,GAA+B,MAA/B,oBAAkD,QAAQ,CAAC,KAAD,CAA1D,MAAd,CAAP;AACD;AANyC,CAA5C;AASA,eAAe,MAAf","sourceRoot":"","sourcesContent":["import { TUPLE, unitName } from '.';\nimport { singleOrMultiSignals } from './multi';\nconst single = {\n    signals: singleOrMultiSignals,\n    modifyExpr: (model, selCmpt) => {\n        const tpl = selCmpt.name + TUPLE;\n        return tpl + ', ' + (selCmpt.resolve === 'global' ? 'true' : `{unit: ${unitName(model)}}`);\n    }\n};\nexport default single;\n//# sourceMappingURL=single.js.map"]},"metadata":{},"sourceType":"module"}