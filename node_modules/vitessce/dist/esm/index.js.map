{
  "version": 3,
  "sources": ["../../src/components/heatmap/HeatmapSubscriber.js", "../../src/components/TitleInfo.js", "../../src/components/classNames.js", "../../src/components/LoadingIndicator.js", "../../src/components/shared-mui/components.js", "../../src/components/hooks.js", "../../src/app/state/hooks.js", "../../src/utils.js", "../../src/components/shared-mui/styles.js", "../../src/components/utils.js", "../../src/components/sets/constants.js", "../../src/components/data-hooks.js", "../../src/loaders/errors/AbstractLoaderError.js", "../../src/loaders/errors/LoaderValidationError.js", "../../src/loaders/errors/LoaderNotFoundError.js", "../../node_modules/@hms-dbmi/viv/dist/viv.es.js", "../../src/components/spatial/constants.js", "../../src/app/state/coordination.js", "../../src/components/sets/cell-set-utils.js", "../../src/components/sets/utils.js", "../../src/components/interpolate-colors.js", "../../src/components/heatmap/Heatmap.js", "../../src/layers/HeatmapCompositeTextLayer.js", "../../src/layers/heatmap-constants.js", "../../src/layers/PixelatedBitmapLayer.js", "../../src/layers/HeatmapBitmapLayer.js", "../../src/layers/constants.js", "../../src/layers/heatmap-bitmap-layer-shaders.js", "../../src/components/heatmap/utils.js", "inline-worker:/home/runner/work/vitessce/vitessce/src/components/heatmap/heatmap.worker", "../../src/Pool.js", "../../src/components/heatmap/HeatmapWorkerPool.js", "../../src/components/heatmap/HeatmapTooltipSubscriber.js", "../../src/components/tooltip/Tooltip2D.js", "../../src/components/tooltip/Tooltip.js", "../../src/components/tooltip/styles.js", "../../src/components/tooltip/TooltipContent.js", "../../src/components/heatmap/HeatmapOptions.js", "../../src/components/shared-plot-options/styles.js", "../../src/components/shared-plot-options/OptionsContainer.js", "../../src/components/shared-plot-options/OptionSelect.js", "../../src/components/spatial/SpatialSubscriber.js", "../../src/components/spatial/Spatial.js", "../../src/layers/selection-utils.js", "../../src/layers/SelectionLayer.js", "../../src/components/spatial/utils.js", "../../src/layers/BitmaskLayer.js", "../../src/layers/bitmask-layer-shaders.js", "../../src/components/layer-controller/utils.js", "../../src/components/shared-spatial-scatterplot/AbstractSpatialOrScatterplot.js", "../../src/components/shared-spatial-scatterplot/ToolMenu.js", "../../src/assets/tools/near_me.svg", "../../src/assets/tools/selection_rectangle.svg", "../../src/assets/tools/selection_lasso.svg", "../../src/components/shared-spatial-scatterplot/cursor.js", "../../src/components/shared-spatial-scatterplot/quadtree.js", "../../src/layer-extensions/ScaledExpressionExtension/ScaledExpressionExtension.js", "../../src/layer-extensions/ScaledExpressionExtension/shader-module.js", "../../src/layer-extensions/ScaledExpressionExtension/index.js", "../../src/layer-extensions/SelectionExtension/SelectionExtension.js", "../../src/layer-extensions/SelectionExtension/shader-module.js", "../../src/layer-extensions/SelectionExtension/index.js", "../../src/components/spatial/SpatialOptions.js", "../../src/components/shared-plot-options/CellColorEncodingOption.js", "../../src/components/spatial/SpatialTooltipSubscriber.js", "../../src/components/scatterplot/ScatterplotSubscriber.js", "../../src/components/scatterplot/Scatterplot.js", "../../src/components/shared-spatial-scatterplot/force-collide-rects.js", "../../src/components/scatterplot/ScatterplotTooltipSubscriber.js", "../../src/components/scatterplot/ScatterplotOptions.js", "../../src/components/shared-spatial-scatterplot/dynamic-opacity.js", "../../src/app/VitessceGrid.js", "../../src/app/vitessce-grid-layout/VitessceGridLayout.js", "../../src/app/vitessce-grid-layout/layout-utils.js", "../../src/app/vitessce-grid-utils.js", "../../src/loaders/JsonLoader.js", "../../src/loaders/AbstractLoader.js", "../../src/loaders/AbstractTwoStepLoader.js", "../../src/loaders/LoaderResult.js", "../../src/loaders/MatrixZarrLoader.js", "../../src/loaders/GenesJsonAsMatrixZarrLoader.js", "../../src/loaders/ClustersJsonAsMatrixZarrLoader.js", "../../src/loaders/RasterJsonLoader.js", "../../src/loaders/OmeZarrLoader.js", "../../src/components/sets/io.js", "../../src/loaders/CellSetsJsonLoader.js", "../../src/loaders/anndata-loaders/CellSetsZarrLoader.js", "../../src/loaders/anndata-loaders/CellsZarrLoader.js", "../../src/loaders/anndata-loaders/MatrixZarrLoader.js", "../../src/loaders/anndata-loaders/index.js", "../../src/loaders/GenomicProfilesZarrLoader.js", "../../src/loaders/data-sources/AnnDataSource.js", "../../src/loaders/data-sources/ZarrDataSource.js", "../../src/loaders/errors/DataSourceFetchError.js", "../../src/loaders/data-sources/JsonSource.js", "../../src/loaders/types.js", "../../src/app/app.js", "../../src/app/api.js", "../../src/app/Welcome.js", "../../src/app/Warning.js", "../../src/app/Vitessce.js", "../../src/app/CallbackPublisher.js", "../../src/app/view-config-versions.js", "../../src/app/view-config-upgraders.js", "../../src/components/description/DescriptionSubscriber.js", "../../src/components/description/Description.js", "../../src/components/status/StatusSubscriber.js", "../../src/components/status/Status.js", "../../src/components/genes/GenesSubscriber.js", "../../src/components/genes/Genes.js", "../../src/components/selectable-table/SelectableTable.js", "../../src/components/sets/CellSetsManagerSubscriber.js", "../../src/components/sets/SetsManager.js", "../../src/components/sets/Tree.js", "../../src/components/sets/TreeNode.js", "../../src/components/sets/PopoverMenu.js", "../../src/components/sets/Popover.js", "../../src/components/sets/HelpTooltip.js", "../../src/assets/menu.svg", "../../src/components/sets/SetsManagerButtons.js", "../../src/assets/sets/union.svg", "../../src/assets/sets/intersection.svg", "../../src/assets/sets/complement.svg", "../../src/components/layer-controller/LayerControllerSubscriber.js", "../../src/components/layer-controller/RasterChannelController.js", "../../src/components/layer-controller/ChannelOptions.js", "../../src/components/layer-controller/ColorPalette.js", "../../src/components/layer-controller/constants.js", "../../src/components/layer-controller/shared-channel-controls.js", "../../src/components/layer-controller/styles.js", "../../src/components/layer-controller/BitmaskChannelController.js", "../../src/components/layer-controller/VectorLayerController.js", "../../src/components/layer-controller/LayerController.js", "../../src/components/layer-controller/LayerOptions.js", "../../src/components/layer-controller/VolumeOptions.js", "../../src/components/layer-controller/ImageAddButton.js", "../../src/components/higlass/HiGlassSubscriber.js", "../../src/components/higlass/HiGlassLazy.js", "../../src/components/sets/CellSetSizesPlotSubscriber.js", "../../src/components/sets/CellSetSizesPlot.js", "../../src/components/vega/VegaPlot.js", "../../src/components/vega/ReactVega.js", "../../src/components/vega/utils.js", "../../src/components/higlass/GenomicProfilesSubscriber.js", "../../src/components/genes/ExpressionHistogramSubscriber.js", "../../src/components/genes/ExpressionHistogram.js", "../../src/components/sets/CellSetExpressionPlotSubscriber.js", "../../src/components/sets/hooks.js", "../../src/components/sets/CellSetExpressionPlotOptions.js", "../../src/components/sets/CellSetExpressionPlot.js", "../../src/app/component-registry.js", "../../src/app/view-config-utils.js", "../../src/app/export-utils.js", "../../src/api/VitessceConfig.js"],
  "sourcesContent": ["import React, {\n  useEffect, useState, useCallback, useMemo,\n} from 'react';\nimport TitleInfo from '../TitleInfo';\nimport { pluralize, capitalize } from '../../utils';\nimport { useDeckCanvasSize, useReady, useUrls } from '../hooks';\nimport { mergeCellSets } from '../utils';\nimport {\n  useCellsData,\n  useCellSetsData,\n  useExpressionMatrixData,\n} from '../data-hooks';\nimport { getCellColors } from '../interpolate-colors';\nimport {\n  useCoordination, useLoaders,\n  useSetComponentHover, useSetComponentViewInfo,\n} from '../../app/state/hooks';\nimport {\n  COMPONENT_COORDINATION_TYPES,\n} from '../../app/state/coordination';\nimport Heatmap from './Heatmap';\nimport HeatmapTooltipSubscriber from './HeatmapTooltipSubscriber';\nimport HeatmapOptions from './HeatmapOptions';\n\nconst HEATMAP_DATA_TYPES = ['cells', 'cell-sets', 'expression-matrix'];\n\n/**\n * @param {object} props\n * @param {number} props.uuid The unique identifier for this component.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n * @param {boolean} props.transpose Whether to\n * render as cell-by-gene or gene-by-cell.\n * @param {string} props.observationsLabelOverride The singular\n * form of the name of the observation.\n * @param {string} props.observationsPluralLabelOverride The\n * plural form of the name of the observation.\n * @param {string} props.variablesLabelOverride The singular\n * form of the name of the variable.\n * @param {string} props.variablesPluralLabelOverride The plural\n * form of the name of the variable.\n * @param {boolean} props.disableTooltip Whether to disable the\n * tooltip on mouse hover.\n */\nexport default function HeatmapSubscriber(props) {\n  const {\n    uuid,\n    coordinationScopes,\n    removeGridComponent, theme, transpose,\n    observationsLabelOverride: observationsLabel = 'cell',\n    observationsPluralLabelOverride: observationsPluralLabel = `${observationsLabel}s`,\n    variablesLabelOverride: variablesLabel = 'gene',\n    variablesPluralLabelOverride: variablesPluralLabel = `${variablesLabel}s`,\n    disableTooltip = false,\n    title = 'Heatmap',\n  } = props;\n\n  const loaders = useLoaders();\n  const setComponentHover = useSetComponentHover();\n  const setComponentViewInfo = useSetComponentViewInfo(uuid);\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    heatmapZoomX: zoomX,\n    heatmapTargetX: targetX,\n    heatmapTargetY: targetY,\n    geneSelection,\n    cellHighlight,\n    geneHighlight,\n    cellSetSelection,\n    cellSetColor,\n    additionalCellSets,\n    geneExpressionColormap,\n    geneExpressionColormapRange,\n  }, {\n    setHeatmapZoomX: setZoomX,\n    setHeatmapZoomY: setZoomY,\n    setHeatmapTargetX: setTargetX,\n    setHeatmapTargetY: setTargetY,\n    setCellHighlight,\n    setGeneHighlight,\n    setCellSetSelection,\n    setCellSetColor,\n    setGeneExpressionColormapRange,\n    setGeneExpressionColormap,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.heatmap, coordinationScopes);\n\n  const observationsTitle = capitalize(observationsPluralLabel);\n  const variablesTitle = capitalize(variablesPluralLabel);\n\n  const [isRendering, setIsRendering] = useState(false);\n  const [\n    isReady,\n    setItemIsReady,\n    setItemIsNotReady, // eslint-disable-line no-unused-vars\n    resetReadyItems,\n  ] = useReady(\n    HEATMAP_DATA_TYPES,\n  );\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [width, height, deckRef] = useDeckCanvasSize();\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [cells] = useCellsData(loaders, dataset, setItemIsReady, addUrl, true);\n  const [expressionMatrix] = useExpressionMatrixData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n  const [cellSets] = useCellSetsData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setCellSetSelection, setCellSetColor },\n    { cellSetSelection, cellSetColor },\n  );\n\n  const mergedCellSets = useMemo(() => mergeCellSets(\n    cellSets, additionalCellSets,\n  ), [cellSets, additionalCellSets]);\n\n  const cellColors = useMemo(() => getCellColors({\n    // Only show cell set selection on heatmap labels.\n    cellColorEncoding: 'cellSetSelection',\n    geneSelection,\n    cellSets: mergedCellSets,\n    cellSetSelection,\n    cellSetColor,\n    expressionDataAttrs: expressionMatrix,\n    theme,\n  }), [mergedCellSets, geneSelection, theme,\n    cellSetColor, cellSetSelection, expressionMatrix]);\n\n  const getCellInfo = useCallback((cellId) => {\n    if (cellId) {\n      const cellInfo = cells[cellId];\n      return {\n        [`${capitalize(observationsLabel)} ID`]: cellId,\n        ...(cellInfo ? cellInfo.factors : {}),\n      };\n    }\n    return null;\n  }, [cells, observationsLabel]);\n\n  const getGeneInfo = useCallback((geneId) => {\n    if (geneId) {\n      return { [`${capitalize(variablesLabel)} ID`]: geneId };\n    }\n    return null;\n  }, [variablesLabel]);\n\n  const cellsCount = expressionMatrix && expressionMatrix.rows\n    ? expressionMatrix.rows.length : 0;\n  const genesCount = expressionMatrix && expressionMatrix.cols\n    ? expressionMatrix.cols.length : 0;\n  const selectedCount = cellColors.size;\n  return (\n    <TitleInfo\n      title={title}\n      info={`${cellsCount} ${pluralize(observationsLabel, observationsPluralLabel, cellsCount)} \u00D7 ${genesCount} ${pluralize(variablesLabel, variablesPluralLabel, genesCount)},\n             with ${selectedCount} ${pluralize(observationsLabel, observationsPluralLabel, selectedCount)} selected`}\n      urls={urls}\n      theme={theme}\n      removeGridComponent={removeGridComponent}\n      isReady={isReady && !isRendering}\n      options={(\n        <HeatmapOptions\n          geneExpressionColormap={geneExpressionColormap}\n          setGeneExpressionColormap={setGeneExpressionColormap}\n          geneExpressionColormapRange={geneExpressionColormapRange}\n          setGeneExpressionColormapRange={setGeneExpressionColormapRange}\n        />\n      )}\n    >\n      <Heatmap\n        ref={deckRef}\n        transpose={transpose}\n        viewState={{ zoom: zoomX, target: [targetX, targetY] }}\n        setViewState={({ zoom, target }) => {\n          setZoomX(zoom);\n          setZoomY(zoom);\n          setTargetX(target[0]);\n          setTargetY(target[1]);\n        }}\n        colormapRange={geneExpressionColormapRange}\n        setColormapRange={setGeneExpressionColormapRange}\n        height={height}\n        width={width}\n        theme={theme}\n        uuid={uuid}\n        expressionMatrix={expressionMatrix}\n        cellColors={cellColors}\n        colormap={geneExpressionColormap}\n        setIsRendering={setIsRendering}\n        setCellHighlight={setCellHighlight}\n        setGeneHighlight={setGeneHighlight}\n        setComponentHover={() => {\n          setComponentHover(uuid);\n        }}\n        updateViewInfo={setComponentViewInfo}\n        observationsTitle={observationsTitle}\n        variablesTitle={variablesTitle}\n      />\n      {!disableTooltip && (\n      <HeatmapTooltipSubscriber\n        parentUuid={uuid}\n        width={width}\n        height={height}\n        transpose={transpose}\n        getCellInfo={getCellInfo}\n        getGeneInfo={getGeneInfo}\n        cellHighlight={cellHighlight}\n        geneHighlight={geneHighlight}\n      />\n      )}\n    </TitleInfo>\n  );\n}\n", "import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { SCROLL_CARD, BLACK_CARD, SECONDARY_CARD } from './classNames';\nimport LoadingIndicator from './LoadingIndicator';\nimport { PopperMenu } from './shared-mui/components';\n\nconst useStyles = makeStyles(theme => ({\n  iconButton: {\n    border: 'none',\n    marginLeft: 0,\n    background: 'none',\n    color: theme.palette.primaryForeground,\n    paddingLeft: '0.25em',\n    paddingRight: '0.25em',\n    borderRadius: '2px',\n    '&:hover': {\n      backgroundColor: theme.palette.primaryBackgroundLight,\n    },\n    '&:first-child': {\n      marginLeft: '0.25em',\n    },\n    '&:last-child': {\n      marginRight: '0.25em',\n    },\n    '& svg': {\n      width: '0.7em',\n      height: '0.7em',\n      verticalAlign: 'middle',\n      overflow: 'visible',\n    },\n  },\n  downloadLink: {\n    color: theme.palette.primaryForeground,\n  },\n}));\n\nfunction SettingsIconWithArrow({ open }) {\n  return (\n    <>\n      <SettingsIcon />\n      {open ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n    </>\n  );\n}\n\nfunction PlotOptions(props) {\n  const { options } = props;\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n  return (\n    <PopperMenu\n      open={open}\n      setOpen={setOpen}\n      buttonIcon={<SettingsIconWithArrow open={open} />}\n      buttonClassName={classes.iconButton}\n      placement=\"bottom-end\"\n    >\n      {options}\n    </PopperMenu>\n  );\n}\n\nfunction CloudDownloadIconWithArrow({ open }) {\n  return (\n    <>\n      <CloudDownloadIcon />\n      {open ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n    </>\n  );\n}\n\nfunction DownloadOptions(props) {\n  const { urls } = props;\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n  return (\n    <PopperMenu\n      open={open}\n      setOpen={setOpen}\n      buttonIcon={<CloudDownloadIconWithArrow open={open} />}\n      buttonClassName={classes.iconButton}\n      placement=\"bottom-end\"\n    >\n      {urls.map(({ url, name }) => (\n        <MenuItem dense key={url}>\n          <Link underline=\"none\" href={url} target=\"_blank\" rel=\"noopener\" className={classes.downloadLink}>\n            Download {name}\n          </Link>\n        </MenuItem>\n      ))}\n    </PopperMenu>\n  );\n}\n\nfunction ClosePaneButton(props) {\n  const { removeGridComponent } = props;\n  const classes = useStyles();\n  return (\n    <IconButton\n      onClick={removeGridComponent}\n      size=\"small\"\n      className={classes.iconButton}\n      title=\"close\"\n    >\n      <CloseIcon />\n    </IconButton>\n  );\n}\n\nexport default function TitleInfo(props) {\n  const {\n    title, info, children, isScroll, isSpatial, removeGridComponent, urls,\n    isReady, options,\n  } = props;\n  // eslint-disable-next-line no-nested-ternary\n  const childClassName = isScroll ? SCROLL_CARD : (isSpatial ? BLACK_CARD : SECONDARY_CARD);\n  return (\n    // d-flex without wrapping div is not always full height; I don't understand the root cause.\n    <>\n      <div className=\"title\">\n        <div className=\"title-left\">\n          {title}\n        </div>\n        <div className=\"title-info\" title={info}>\n          {info}\n        </div>\n        <div className=\"title-buttons\">\n          { options && (\n            <PlotOptions\n              options={options}\n            />\n          ) }\n          {urls && urls.length > 0 && (\n            <DownloadOptions\n              urls={urls}\n            />\n          )}\n          <ClosePaneButton\n            removeGridComponent={removeGridComponent}\n          />\n        </div>\n      </div>\n      <div className={childClassName}>\n        { !isReady && <LoadingIndicator /> }\n        {children}\n      </div>\n    </>\n    // \"pl-2\" only matters when the window is very narrow.\n  );\n}\n", "export const TOOLTIP_ANCESTOR = 'tooltip-ancestor';\nconst CARD = `card card-body my-2 ${TOOLTIP_ANCESTOR}`;\nexport const PRIMARY_CARD = `${CARD} bg-primary`;\nexport const SECONDARY_CARD = `${CARD} bg-secondary`;\nexport const BLACK_CARD = `${CARD} bg-black`;\nexport const TITLE_CARD = 'title';\nexport const SCROLL_CARD = `${PRIMARY_CARD} scroll`;\nexport const VITESSCE_CONTAINER = 'vitessce-container';\n", "import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function LoadingIndicator() {\n  return (\n    <div className=\"loading-indicator-backdrop\">\n      <div className=\"loading-indicator-container\">\n        <CircularProgress />\n      </div>\n    </div>\n  );\n}\n", "import React, { useRef } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuList from '@material-ui/core/MenuList';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Fade from '@material-ui/core/Fade';\nimport { useVitessceContainer } from '../hooks';\nimport { styles } from './styles';\n\nexport function MuiSpan(props) {\n  const { children } = props;\n  const classes = styles();\n  return <span className={classes.span}>{children}</span>;\n}\n\nexport function PopperMenu(props) {\n  const {\n    buttonIcon,\n    open,\n    setOpen,\n    children,\n    buttonClassName,\n  } = props;\n  const classes = styles();\n\n  const anchorRef = useRef();\n\n  const handleClick = () => {\n    setOpen(prev => !prev);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const id = open ? 'v-popover-menu' : undefined;\n\n  const getTooltipContainer = useVitessceContainer(anchorRef);\n\n  return (\n    <div ref={anchorRef} className={classes.container}>\n      <IconButton\n        aria-describedby={id}\n        onClick={handleClick}\n        size=\"small\"\n        className={buttonClassName}\n      >\n        {buttonIcon}\n      </IconButton>\n      <Popper\n        id={id}\n        open={open}\n        anchorEl={anchorRef && anchorRef.current}\n        container={getTooltipContainer}\n        onClose={handleClose}\n        placement=\"bottom-end\"\n        transition\n      >\n        {({ TransitionProps }) => (\n          <ClickAwayListener onClickAway={handleClose}>\n            <Fade {...TransitionProps} timeout={100}>\n              <Paper elevation={4} className={classes.paper}>\n                <MenuList>{children}</MenuList>\n              </Paper>\n            </Fade>\n          </ClickAwayListener>\n        )}\n      </Popper>\n    </div>\n  );\n}\n", "import {\n  useRef, useState, useEffect, useCallback, useMemo,\n} from 'react';\nimport debounce from 'lodash/debounce';\nimport { useGridResize, useEmitGridResize } from '../app/state/hooks';\nimport { VITESSCE_CONTAINER } from './classNames';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport function useVitessceContainer(ref) {\n  return useCallback(() => {\n    if (ref.current) {\n      return ref.current.closest(`.${VITESSCE_CONTAINER}`);\n    }\n    return null;\n  }, [ref]);\n}\n\n/**\n * Custom hook, gets the full window dimensions.\n * @returns {array} `[width, height]` where width and height\n * are numbers.\n */\nexport function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions(),\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n    const onResizeDebounced = debounce(handleResize, 100, { trailing: true });\n\n    window.addEventListener('resize', onResizeDebounced);\n    return () => window.removeEventListener('resize', onResizeDebounced);\n  }, []);\n\n  return windowDimensions;\n}\n\n/**\n * Custom hook, subscribes to GRID_RESIZE and window resize events.\n * @returns {array} `[width, height, containerRef]` where width and height\n * are numbers and containerRef is a React ref.\n */\nexport function useGridItemSize() {\n  const containerRef = useRef();\n\n  const [height, setHeight] = useState();\n  const [width, setWidth] = useState();\n\n  const resizeCount = useGridResize();\n  const incrementResizeCount = useEmitGridResize();\n\n  // On window resize events, increment the grid resize count.\n  useEffect(() => {\n    function onWindowResize() {\n      incrementResizeCount();\n    }\n    const onResizeDebounced = debounce(onWindowResize, 100, { trailing: true });\n    window.addEventListener('resize', onResizeDebounced);\n    onWindowResize();\n    return () => {\n      window.removeEventListener('resize', onResizeDebounced);\n    };\n  }, [incrementResizeCount]);\n\n  // On new grid resize counts, re-compute the component\n  // width/height.\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n    const containerRect = container.getBoundingClientRect();\n    setHeight(containerRect.height);\n    setWidth(containerRect.width);\n  }, [resizeCount]);\n\n  return [width, height, containerRef];\n}\n\n/**\n * Custom hook, subscribes to GRID_RESIZE and window resize events.\n * @returns {array} `[width, height, deckRef]` where width and height\n * are numbers and deckRef is a React ref to be used with\n * a <DeckGL/> element (or a forwardRef to one).\n */\nexport function useDeckCanvasSize() {\n  const deckRef = useRef();\n\n  const [height, setHeight] = useState();\n  const [width, setWidth] = useState();\n\n  const resizeCount = useGridResize();\n  const incrementResizeCount = useEmitGridResize();\n\n  // On window resize events, increment the grid resize count.\n  useEffect(() => {\n    function onWindowResize() {\n      incrementResizeCount();\n    }\n    const onResizeDebounced = debounce(onWindowResize, 100, { trailing: true });\n    window.addEventListener('resize', onResizeDebounced);\n    onWindowResize();\n    return () => {\n      window.removeEventListener('resize', onResizeDebounced);\n    };\n  }, [incrementResizeCount]);\n\n  // On new grid resize counts, re-compute the DeckGL canvas\n  // width/height.\n  useEffect(() => {\n    if (!deckRef.current) return;\n    const { canvas } = deckRef.current.deck;\n    const canvasRect = canvas.getBoundingClientRect();\n    setHeight(canvasRect.height);\n    setWidth(canvasRect.width);\n  }, [resizeCount]);\n\n  return [width, height, deckRef];\n}\n\n/**\n * This hook handles a boolean isReady value,\n * which only returns true once every item in the\n * input list has been marked as \"ready\".\n * @param {string[]} items The items to wait on.\n * Should be defined as a constant\n * (outside a function component / render function),\n * otherwise strange bugs may occur.\n * @returns {array} An array\n * [isReady, setItemIsReady, setItemIsNotReady, resetReadyItems]\n * where isReady is the boolean value,\n * setItemIsReady marks one item as ready,\n * setItemIsNotReady marks one item as not ready,\n * and resetReadyItem marks all items as waiting.\n */\nexport function useReady(supportedItems) {\n  const items = supportedItems;\n  const [waiting, setWaiting] = useState(items);\n\n  const setItemIsReady = useCallback((readyItem) => {\n    setWaiting((waitingItems) => {\n      const nextWaitingItems = waitingItems.filter(item => item !== readyItem);\n      // eslint-disable-next-line no-console\n      console.log(`cleared ${readyItem}; waiting on ${nextWaitingItems.length}: ${JSON.stringify(nextWaitingItems)}`);\n      return nextWaitingItems;\n    });\n  }, [setWaiting]);\n\n  const setItemIsNotReady = useCallback((notReadyItem) => {\n    setWaiting((waitingItems) => {\n      const nextWaitingItems = [...waitingItems, notReadyItem];\n      // eslint-disable-next-line no-console\n      console.log(`waiting on ${nextWaitingItems.length}: ${JSON.stringify(nextWaitingItems)}`);\n      return nextWaitingItems;\n    });\n  }, [setWaiting]);\n\n  const resetReadyItems = useCallback(() => {\n    setWaiting(items);\n    // eslint-disable-next-line no-console\n    console.log(`waiting on ${items.length}: ${JSON.stringify(items)}`);\n  }, [setWaiting, items]);\n\n  const isReady = waiting.length === 0;\n\n  return [isReady, setItemIsReady, setItemIsNotReady, resetReadyItems];\n}\n\n/**\n * This hook manages a list of URLs,\n * with adding and resetting helpers.\n * @returns {array} An array\n * [urls, addUrl, resetUrls]\n * where urls is the array of URL objects,\n * addUrl is a function for adding a URL to the array,\n * resetUrls is a function that clears the array.\n */\nexport function useUrls() {\n  const [urls, setUrls] = useState([]);\n\n  const addUrl = useCallback((url, name) => {\n    if (url) {\n      setUrls(prev => ([...prev, { url, name }]));\n    }\n  }, [setUrls]);\n\n  const resetUrls = useCallback(() => {\n    setUrls([]);\n  }, [setUrls]);\n\n  return [urls, addUrl, resetUrls];\n}\n\n/**\n * Custom hook, subscribes to the width and height of the closest .vitessce-container\n * element and updates upon window resize events.\n * @param {Ref} ref A React ref object within the `.vitessce-container`.\n * @returns {array} `[width, height]` where width and height\n * are numbers.\n */\nexport function useClosestVitessceContainerSize(ref) {\n  const [height, setHeight] = useState();\n  const [width, setWidth] = useState();\n\n  useEffect(() => {\n    function onWindowResize() {\n      if (ref.current) {\n        const {\n          clientHeight: componentHeight, clientWidth: componentWidth,\n        } = ref.current.closest('.vitessce-container');\n        setWidth(componentWidth);\n        setHeight(componentHeight);\n      }\n    }\n    const onResizeDebounced = debounce(onWindowResize, 100, { trailing: true });\n    window.addEventListener('resize', onResizeDebounced);\n    onWindowResize();\n    return () => {\n      window.removeEventListener('resize', onResizeDebounced);\n    };\n  }, [ref]);\n\n  return [width, height];\n}\n\nexport function useExpressionValueGetter({ attrs, expressionData }) {\n  // Get a mapping from cell ID to row index in the gene expression matrix.\n  const cellIdMap = useMemo(() => {\n    const result = {};\n    if (attrs && attrs.rows) {\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i < attrs.rows.length; i++) {\n        result[attrs.rows[i]] = i;\n      }\n    }\n    return result;\n  }, [attrs]);\n\n  // Set up a getter function for gene expression values, to be used\n  // by the DeckGL layer to obtain values for instanced attributes.\n  const getExpressionValue = useCallback((entry) => {\n    const cellId = entry[0];\n    if (cellIdMap && expressionData && expressionData[0]) {\n      const cellIndex = cellIdMap[cellId];\n      const val = expressionData[0][cellIndex];\n      return val;\n    }\n    return 0;\n  }, [cellIdMap, expressionData]);\n  return getExpressionValue;\n}\n", "import { useRef, useCallback, useMemo } from 'react';\nimport create from 'zustand';\nimport createContext from 'zustand/context';\nimport shallow from 'zustand/shallow';\nimport { fromEntries, capitalize } from '../../utils';\n\n// Reference: https://github.com/pmndrs/zustand#react-context\n// Reference: https://github.com/pmndrs/zustand/blob/e47ea03/tests/context.test.tsx#L60\nconst {\n  Provider: ViewConfigProviderLocal,\n  useStore: useViewConfigStoreLocal,\n  useStoreApi: useViewConfigStoreApiLocal,\n} = createContext();\n\nexport const ViewConfigProvider = ViewConfigProviderLocal;\nexport const useViewConfigStore = useViewConfigStoreLocal;\nexport const useViewConfigStoreApi = useViewConfigStoreApiLocal;\n\nconst {\n  Provider: AuxiliaryProviderLocal,\n  useStore: useAuxiliaryStoreLocal,\n} = createContext();\n\nexport const AuxiliaryProvider = AuxiliaryProviderLocal;\nexport const useAuxiliaryStore = useAuxiliaryStoreLocal;\n\n\n/**\n * The useViewConfigStore hook is initialized via the zustand\n * create() function, which sets up both the state variables\n * and the reducer-type functions.\n * Reference: https://github.com/react-spring/zustand\n * @returns {function} The useStore hook.\n */\nexport const createViewConfigStore = () => create(set => ({\n  // State:\n  // The viewConfig is an object which must conform to the schema\n  // found in src/schemas/config.schema.json.\n  viewConfig: null,\n  // The loaders object is a mapping from dataset ID to\n  // data type to loader object instance.\n  loaders: null,\n  // Reducer functions which update the state\n  // (although technically also part of state):\n  setViewConfig: viewConfig => set({ viewConfig }),\n  setLoaders: loaders => set({ loaders }),\n  setCoordinationValue: ({ parameter, scope, value }) => set(state => ({\n    viewConfig: {\n      ...state.viewConfig,\n      coordinationSpace: {\n        ...state.viewConfig.coordinationSpace,\n        [parameter]: {\n          ...state.viewConfig.coordinationSpace[parameter],\n          [scope]: value,\n        },\n      },\n    },\n  })),\n  removeComponent: i => set((state) => {\n    const newLayout = state.viewConfig.layout.slice();\n    newLayout.splice(i, 1);\n    return {\n      viewConfig: {\n        ...state.viewConfig,\n        layout: newLayout,\n      },\n    };\n  }),\n  changeLayout: newComponentProps => set((state) => {\n    const newLayout = state.viewConfig.layout.slice();\n    newComponentProps.forEach(([i, newProps]) => {\n      newLayout[i] = {\n        ...newLayout[i],\n        ...newProps,\n      };\n    });\n    return {\n      viewConfig: {\n        ...state.viewConfig,\n        layout: newLayout,\n      },\n    };\n  }),\n}));\n\n/**\n * Hook for getting components' layout from the view config based on\n * matching all coordination scopes.\n * @returns {Object} The components' layout.\n */\nexport const useComponentLayout = (component, scopes, coordinationScopes) => useViewConfigStore(\n  state => state.viewConfig.layout.filter(l => l.component === component).filter(\n    l => scopes.every(scope => l.coordinationScopes[scope]\n          === coordinationScopes[scope]),\n  ),\n);\n\n/**\n * The useAuxiliaryStore hook is initialized via the zustand\n * create() function, which sets up both the state variables\n * and the reducer-type functions.\n * Reference: https://github.com/react-spring/zustand\n * It is meant to be used for non-viewconfig-based coordination between components.\n * For example, as currently happens, the layer controller can coordinate\n * on-load callbacks with spatial view based on whether or not they are\n * coordinated via `spatialRasterLayers` - the callbacks are not part of the view config\n * though so they live here.\n * @returns {function} The useStore hook.\n */\nexport const createAuxiliaryStore = () => create(set => ({\n  auxiliaryStore: null,\n  setCoordinationValue: ({ parameter, scope, value }) => set(state => ({\n    auxiliaryStore: {\n      ...state.auxiliaryStore,\n      [parameter]: {\n        [scope]: value,\n      },\n    },\n  })),\n}));\n\n/**\n * The hover store can be used to store global state\n * related to which component is currently hovered,\n * which is required for tooltip / crossover elements.\n * @returns {function} The useStore hook.\n */\nconst useHoverStore = create(set => ({\n  // Components may need to know if they are the \"hover source\"\n  // for tooltip interactions. This value should be a unique\n  // component ID, such as its index in the view config layout.\n  componentHover: null,\n  setComponentHover: componentHover => set({ componentHover }),\n}));\n\n/**\n * The warning store can be used to store global state\n * related to app warning messages.\n * @returns {function} The useStore hook.\n */\nconst useWarnStore = create(set => ({\n  // Want a global state to collect warning messages\n  // that occur anywhere in the app.\n  warning: null,\n  setWarning: warning => set({ warning }),\n}));\n\n/**\n * The view info store can be used to store component-level\n * viewInfo objects,\n * which are required for tooltip / crossover elements.\n * @returns {function} The useStore hook.\n */\nconst useViewInfoStore = create(set => ({\n  // The viewInfo object is a mapping from\n  // component IDs to component view info objects.\n  // Each view info object must have a project() function.\n  viewInfo: {},\n  setComponentViewInfo: (uuid, viewInfo) => set(state => ({\n    viewInfo: {\n      ...state.viewInfo,\n      [uuid]: viewInfo,\n    },\n  })),\n}));\n\n/**\n * The grid size store can be used to store a\n * counter which updates on each window or react-grid-layout\n * resize event.\n * @returns {function} The useStore hook.\n */\nconst useGridSizeStore = create(set => ({\n  resizeCount: {},\n  incrementResizeCount: () => set(state => ({\n    resizeCount: state.resizeCount + 1,\n  })),\n}));\n\n/**\n * The useCoordination hook returns both the\n * values and setter functions for the coordination objects\n * in a particular coordination scope mapping.\n * This hook is intended to be used within the ___Subscriber\n * components to allow them to \"hook into\" only those coordination\n * objects and setter functions of relevance.\n * @param {string[]} parameters Array of coordination types.\n * @param {object} coordinationScopes Mapping of coordination types\n * to scope names.\n * @returns {array} Returns a tuple [values, setters]\n * where values is an object containing all coordination values,\n * and setters is an object containing all coordination setter\n * functions for the values in `values`, named with a \"set\"\n * prefix.\n */\nexport function useCoordination(parameters, coordinationScopes) {\n  const setCoordinationValue = useViewConfigStore(state => state.setCoordinationValue);\n\n  const values = useViewConfigStore((state) => {\n    const { coordinationSpace } = state.viewConfig;\n    return fromEntries(parameters.map((parameter) => {\n      if (coordinationSpace && coordinationSpace[parameter]) {\n        const value = coordinationSpace[parameter][coordinationScopes[parameter]];\n        return [parameter, value];\n      }\n      return [parameter, undefined];\n    }));\n  }, shallow);\n\n  const setters = useMemo(() => fromEntries(parameters.map((parameter) => {\n    const setterName = `set${capitalize(parameter)}`;\n    const setterFunc = value => setCoordinationValue({\n      parameter,\n      scope: coordinationScopes[parameter],\n      value,\n    });\n    return [setterName, setterFunc];\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  })), [parameters, coordinationScopes]);\n\n  return [values, setters];\n}\n\nconst AUXILIARY_COORDINATION_TYPES_MAP = {\n  spatialRasterLayers: ['rasterLayersCallbacks', 'areLoadingRasterChannnels'],\n};\n\n/**\n * The maps the coordination types of incoming scopes to new types\n * for the auxiliary store.\n * @param {object} coordinationScopes Mapping of coordination types\n * to scope names.\n * @returns {object} Mapping of coordination types\n * to new scope names for the auxiliary store.\n */\nconst mapCoordinationScopes = (coordinationScopes) => {\n  const newCoordinationScopes = {};\n  Object.keys(coordinationScopes).forEach((key) => {\n    const newCoordinationTypes = AUXILIARY_COORDINATION_TYPES_MAP[key] || [];\n    newCoordinationTypes.forEach((coordinationType) => {\n      newCoordinationScopes[coordinationType || key] = coordinationScopes[key];\n    });\n  });\n  return newCoordinationScopes;\n};\n\nconst mapParameters = parameters => parameters\n  .map(parameter => AUXILIARY_COORDINATION_TYPES_MAP[parameter]).filter(Boolean).flat();\n\n/**\n * The useAuxiliaryCoordination hook returns both the\n * values and setter functions for the auxiliary coordination objects\n * in a particular coordination scope mapping.\n * This hook is intended to be used within the ___Subscriber\n * components to allow them to \"hook into\" only those auxiliary coordination\n * objects and setter functions of relevance, for example \"on load\" callbacks.\n * @param {string[]} parameters Array of coordination types.\n * @param {object} coordinationScopes Mapping of coordination types\n * to scope names.\n * @returns {array} Returns a tuple [values, setters]\n * where values is an object containing all coordination values,\n * and setters is an object containing all coordination setter\n * functions for the values in `values`, named with a \"set\"\n * prefix.\n */\nexport function useAuxiliaryCoordination(parameters, coordinationScopes) {\n  const setCoordinationValue = useAuxiliaryStore(state => state.setCoordinationValue);\n  const mappedCoordinationScopes = mapCoordinationScopes(coordinationScopes);\n  const mappedParameters = mapParameters(parameters);\n  const values = useAuxiliaryStore((state) => {\n    const { auxiliaryStore } = state;\n    return fromEntries(mappedParameters.map((parameter) => {\n      if (auxiliaryStore && auxiliaryStore[parameter]) {\n        const value = auxiliaryStore[parameter][mappedCoordinationScopes[parameter]];\n        return [parameter, value];\n      }\n      return [parameter, undefined];\n    }));\n  }, shallow);\n  const setters = useMemo(() => fromEntries(mappedParameters.map((parameter) => {\n    const setterName = `set${capitalize(parameter)}`;\n    const setterFunc = value => setCoordinationValue({\n      parameter,\n      scope: mappedCoordinationScopes[parameter],\n      value,\n    });\n    return [setterName, setterFunc];\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  })), [parameters, coordinationScopes]);\n\n  return [values, setters];\n}\n\n/**\n * Obtain the loaders object from\n * the global app state.\n * @returns {object} The loaders object\n * in the `useViewConfigStore` store.\n */\nexport function useLoaders() {\n  return useViewConfigStore(state => state.loaders);\n}\n\n/**\n * Obtain the view config layout array from\n * the global app state.\n * @returns {object[]} The layout array\n * in the `useViewConfigStore` store.\n */\nexport function useLayout() {\n  return useViewConfigStore(state => state.viewConfig?.layout);\n}\n\n/**\n * Obtain the component removal function from\n * the global app state.\n * @returns {function} The remove component function\n * in the `useViewInfoStore` store.\n */\nexport function useRemoveComponent() {\n  return useViewConfigStore(state => state.removeComponent);\n}\n\n/**\n * Obtain the component prop setter function from\n * the global app state.\n * @returns {function} The set component props function\n * in the `useViewInfoStore` store.\n */\nexport function useChangeLayout() {\n  return useViewConfigStore(state => state.changeLayout);\n}\n\n/**\n * Obtain the loaders setter function from\n * the global app state.\n * @returns {function} The loaders setter function\n * in the `useViewConfigStore` store.\n */\nexport function useSetLoaders() {\n  return useViewConfigStore(state => state.setLoaders);\n}\n\n/**\n * Obtain the view config setter function from\n * the global app state.\n * @returns {function} The view config setter function\n * in the `useViewConfigStore` store.\n */\nexport function useSetViewConfig(viewConfigStoreApi) {\n  const setViewConfigRef = useRef(viewConfigStoreApi.getState().setViewConfig);\n  const setViewConfig = setViewConfigRef.current;\n  return setViewConfig;\n}\n\n/**\n * Obtain the component hover value from\n * the global app state.\n * @returns {number} The hovered component ID\n * in the `useHoverStore` store.\n */\nexport function useComponentHover() {\n  return useHoverStore(state => state.componentHover);\n}\n\n/**\n * Obtain the component hover setter function from\n * the global app state.\n * @returns {function} The component hover setter function\n * in the `useHoverStore` store.\n */\nexport function useSetComponentHover() {\n  return useHoverStore(state => state.setComponentHover);\n}\n\n/**\n * Obtain the warning message from\n * the global app state.\n * @returns {string} The warning message\n * in the `useWarnStore` store.\n */\nexport function useWarning() {\n  return useWarnStore(state => state.warning);\n}\n\n/**\n * Obtain the warning setter function from\n * the global app state.\n * @returns {function} The warning setter function\n * in the `useWarnStore` store.\n */\nexport function useSetWarning() {\n  return useWarnStore(state => state.setWarning);\n}\n\n/**\n * Obtain the component view info value from\n * the global app state.\n * @returns {object} The view info object for the component\n * in the `useViewInfoStore` store.\n */\nexport function useComponentViewInfo(uuid) {\n  return useViewInfoStore(useCallback(state => state.viewInfo[uuid], [uuid]));\n}\n\n/**\n * Obtain the component view info setter function from\n * the global app state.\n * @returns {function} The component view info setter function\n * in the `useViewInfoStore` store.\n */\nexport function useSetComponentViewInfo(uuid) {\n  const setViewInfoRef = useRef(useViewInfoStore.getState().setComponentViewInfo);\n  const setComponentViewInfo = viewInfo => setViewInfoRef.current(uuid, viewInfo);\n  return setComponentViewInfo;\n}\n\n/**\n * Obtain the grid resize count value\n * from the global app state.\n * @returns {number} The grid resize increment value.\n */\nexport function useGridResize() {\n  return useGridSizeStore(state => state.resizeCount);\n}\n\n/**\n * Obtain the grid resize count increment function\n * from the global app state.\n * @returns {function} The grid resize count increment\n * function.\n */\nexport function useEmitGridResize() {\n  return useGridSizeStore(state => state.incrementResizeCount);\n}\n", "/* eslint-disable no-plusplus */\n\n// Adapted from https://github.com/feross/fromentries/blob/29b52a850bb3a47c390937631c2638edf3443942/index.js\nexport function fromEntries(iterable) {\n  return [...iterable]\n    .reduce((obj, { 0: key, 1: val }) => Object.assign(obj, { [key]: val }), {});\n}\n\nexport function range(length) {\n  return [...Array(length).keys()];\n}\n\n/**\n * Select between a singular and plural version of a word,\n * based on an item count.\n * @param {string} singular The singular version of the word.\n * @param {string} plural The plural version of the word.\n * @param {number} count The number of items.\n * @returns {string} Singular if count is one, else plural.\n */\nexport function pluralize(singular, plural, count) {\n  return (count === 1 ? singular : plural);\n}\n\n/**\n * Capitalize a the first letter of a string.\n * @param {string} word A string to capitalize.\n * @returns {string} The word parameter with the first letter capitalized.\n */\nexport function capitalize(word) {\n  return word.charAt(0).toUpperCase() + word.slice(1);\n}\n\n/**\n * Generate a new scope name which does not\n * conflict / overlap with a previous scope name.\n * Really these just need to be unique within the coordination object.\n * So in theory they could be String(Math.random()) or uuidv4() or something.\n * However it may be good to make them more human-readable and memorable\n * since eventually we will want to expose a UI to update the coordination.\n * @param {string[]} prevScopes Previous scope names.\n * @returns {string} The new scope name.\n */\nexport function getNextScope(prevScopes) {\n  // Keep an ordered list of valid characters.\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  // Store the value of the next character for each position\n  // in the new string.\n  // For example, [0] -> \"A\", [1] -> \"B\", [0, 1] -> \"AB\"\n  const nextCharIndices = [0];\n\n  // Generate a new scope name,\n  // potentially conflicting with an existing name.\n  // Reference: https://stackoverflow.com/a/12504061\n  function next() {\n    const r = [];\n    nextCharIndices.forEach((charIndex) => {\n      r.unshift(chars[charIndex]);\n    });\n    let increment = true;\n    for (let i = 0; i < nextCharIndices.length; i++) {\n      const val = ++nextCharIndices[i];\n      if (val >= chars.length) {\n        nextCharIndices[i] = 0;\n      } else {\n        increment = false;\n        break;\n      }\n    }\n    if (increment) {\n      nextCharIndices.push(0);\n    }\n    return r.join('');\n  }\n\n  let nextScope;\n  do {\n    nextScope = next();\n  } while (prevScopes.includes(nextScope));\n  return nextScope;\n}\n\n/**\n * Get a representative PixelSource from a loader object returned from\n * the Vitessce imaging loaders\n * @param {object} loader { data: (PixelSource[]|PixelSource), metadata, channels } object\n * @param {number=} level Level of the multiscale loader from which to get a PixelSource\n * @returns {object} PixelSource object\n */\nexport function getSourceFromLoader(loader, level) {\n  const { data } = loader;\n  const source = Array.isArray(data) ? data[(level || data.length - 1)] : data;\n  return source;\n}\n\n/*\n * Helper method to determine whether pixel data is interleaved and rgb or not.\n * @param {object} loader\n */\nexport function isRgb(loader) {\n  const source = getSourceFromLoader(loader);\n  const { shape, dtype, labels } = source;\n  const channelSize = shape[labels.indexOf('c')];\n  return (channelSize === 3) && dtype === 'Uint8';\n}\n", "import { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { grey } from '@material-ui/core/colors';\n\nexport const styles = makeStyles(() => ({\n  paper: {\n    maxHeight: 200,\n    overflow: 'auto',\n  },\n  container: {\n    position: 'relative',\n    left: 0,\n    top: 0,\n  },\n  span: {\n    width: '70px',\n    textAlign: 'center',\n    paddingLeft: '2px',\n    paddingRight: '2px',\n  },\n}));\n\nexport const muiTheme = {\n  dark: createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: grey,\n      secondary: grey,\n      primaryBackground: '#222222',\n      primaryBackgroundHighlight: '#000000',\n      primaryBackgroundInput: '#D3D3D3',\n      primaryBackgroundDim: '#333333',\n      primaryBackgroundLight: '#757575',\n      primaryForeground: '#D3D3D3',\n      primaryForegroundDim: '#000000',\n      primaryForegroundActive: '#9bb7d6',\n      secondaryBackground: '#000000',\n      secondaryBackgroundDim: '#444444',\n      secondaryForeground: '#D3D3D3',\n    },\n    props: {\n      MuiButtonBase: {\n        disableRipple: true,\n      },\n    },\n  }),\n  light: createMuiTheme({\n    palette: {\n      type: 'light',\n      primary: grey,\n      secondary: grey,\n      primaryBackground: '#F1F1F1',\n      primaryBackgroundHighlight: '#FFFFFF',\n      primaryBackgroundInput: '#FFFFFF',\n      primaryBackgroundDim: '#8A8A8A',\n      primaryBackgroundLight: '#e0e0e0',\n      primaryForeground: '#333333',\n      primaryForegroundDim: '#808080',\n      primaryForegroundActive: '#0074D9',\n      secondaryBackground: '#F1F1F1',\n      secondaryBackgroundDim: '#C0C0C0',\n      secondaryForeground: '#222222',\n    },\n    props: {\n      MuiButtonBase: {\n        disableRipple: true,\n      },\n    },\n  }),\n};\n", "import React from 'react';\nimport { COORDINATE_SYSTEM } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport {\n  SETS_DATATYPE_CELL,\n  HIERARCHICAL_SCHEMAS,\n} from './sets/constants';\nimport { PRIMARY_CARD } from './classNames';\n\nexport function makeCellStatusMessage(cellInfoFactors) {\n  return Object.entries(cellInfoFactors).map(\n    ([factor, value]) => `${factor}: ${value}`,\n  ).join('; ');\n}\n\nexport function cellLayerDefaultProps(cells, updateStatus, setCellHighlight, setComponentHover) {\n  return {\n    coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n    data: cells,\n    pickable: true,\n    autoHighlight: true,\n    stroked: true,\n    filled: true,\n    getElevation: 0,\n    onHover: (info) => {\n      // Notify the parent component that its child component is\n      // the \"hover source\".\n      if (setComponentHover) {\n        setComponentHover();\n      }\n      if (info.object) {\n        const [cellId, cellInfo] = info.object;\n        const { factors = {} } = cellInfo;\n        if (updateStatus) {\n          updateStatus(makeCellStatusMessage(factors));\n        }\n        if (setCellHighlight) {\n          setCellHighlight(cellId);\n        }\n      } else if (setCellHighlight) {\n        // Clear the currently-hovered cell info by passing null.\n        setCellHighlight('');\n      }\n    },\n  };\n}\n\nexport const DEFAULT_DARK_COLOR = [50, 50, 50];\nexport const DEFAULT_LIGHT_COLOR = [200, 200, 200];\n\nexport function getDefaultColor(theme) {\n  return theme === 'dark' ? DEFAULT_DARK_COLOR : DEFAULT_LIGHT_COLOR;\n}\n\n// From https://personal.sron.nl/~pault/#sec:qualitative\nexport const PALETTE = [\n  [68, 119, 170],\n  [136, 204, 238],\n  [68, 170, 153],\n  [17, 119, 51],\n  [153, 153, 51],\n  [221, 204, 119],\n  [204, 102, 119],\n  [136, 34, 85],\n  [170, 68, 153],\n];\n\nexport const VIEWER_PALETTE = [\n  [0, 0, 255],\n  [0, 255, 0],\n  [255, 0, 255],\n  [255, 255, 0],\n  [0, 255, 255],\n  [255, 255, 255],\n  [255, 128, 0],\n  [255, 0, 0],\n];\n\nexport const COLORMAP_OPTIONS = [\n  'viridis',\n  'greys',\n  'magma',\n  'jet',\n  'hot',\n  'bone',\n  'copper',\n  'summer',\n  'density',\n  'inferno',\n];\n\nexport const DEFAULT_GL_OPTIONS = { webgl2: true };\n\nexport function createDefaultUpdateStatus(componentName) {\n  return message => console.warn(`${componentName} updateStatus: ${message}`);\n}\n\nexport function createDefaultUpdateCellsSelection(componentName) {\n  return cellsSelection => console.warn(`${componentName} updateCellsSelection: ${cellsSelection}`);\n}\n\nexport function createDefaultUpdateCellsHover(componentName) {\n  return hoverInfo => console.warn(`${componentName} updateCellsHover: ${hoverInfo.cellId}`);\n}\n\nexport function createDefaultUpdateGenesHover(componentName) {\n  return hoverInfo => console.warn(`${componentName} updateGenesHover: ${hoverInfo.geneId}`);\n}\n\nexport function createDefaultUpdateViewInfo(componentName) {\n  return viewInfo => console.warn(`${componentName} updateViewInfo: ${viewInfo}`);\n}\n\nexport function createDefaultClearPleaseWait() {\n  return () => {};\n}\n\n\n/**\n * Copy a typed array into a new array buffer.\n * @param {Uint8Array} arr The typed array to be copied.\n * @returns {Uint8Array} The copied array.\n */\nexport function copyUint8Array(arr) {\n  const newBuffer = new ArrayBuffer(arr.buffer.byteLength);\n  const newArr = new Uint8Array(newBuffer);\n  newArr.set(arr);\n  return newArr;\n}\n\nexport function getNextNumberedNodeName(nodes, prefix) {\n  let i = 1;\n  if (nodes) {\n    // eslint-disable-next-line no-loop-func\n    while (nodes.find(n => n.name === `${prefix}${i}`)) {\n      // eslint-disable-next-line no-plusplus\n      i++;\n    }\n  }\n  return `${prefix}${i}`;\n}\n\n/**\n * Create a new selected cell set based on a cell selection.\n * @param {string[]} cellSelection An array of cell IDs.\n * @param {object[]} additionalCellSets The previous array of user-defined cell sets.\n * @param {function} setCellSetSelection The setter function for cell set selections.\n * @param {function} setAdditionalCellSets The setter function for user-defined cell sets.\n */\nexport function setCellSelection(cellSelection, additionalCellSets, cellSetColor, setCellSetSelection, setAdditionalCellSets, setCellSetColor, setCellColorEncoding, prefix = 'Selection ') {\n  const CELL_SELECTIONS_LEVEL_ZERO_NAME = 'My Selections';\n\n  const selectionsLevelZeroNode = additionalCellSets?.tree.find(\n    n => n.name === CELL_SELECTIONS_LEVEL_ZERO_NAME,\n  );\n  const nextAdditionalCellSets = {\n    version: HIERARCHICAL_SCHEMAS[SETS_DATATYPE_CELL].latestVersion,\n    datatype: SETS_DATATYPE_CELL,\n    tree: [...(additionalCellSets ? additionalCellSets.tree : [])],\n  };\n\n  const nextName = getNextNumberedNodeName(selectionsLevelZeroNode?.children, prefix);\n  let colorIndex = 0;\n  if (selectionsLevelZeroNode) {\n    colorIndex = selectionsLevelZeroNode.children.length;\n    selectionsLevelZeroNode.children.push({\n      name: nextName,\n      set: cellSelection.map(d => [d, null]),\n    });\n  } else {\n    nextAdditionalCellSets.tree.push({\n      name: CELL_SELECTIONS_LEVEL_ZERO_NAME,\n      children: [\n        {\n          name: nextName,\n          set: cellSelection.map(d => [d, null]),\n        },\n      ],\n    });\n  }\n  setAdditionalCellSets(nextAdditionalCellSets);\n  const nextPath = ['My Selections', nextName];\n  setCellSetColor([\n    ...(cellSetColor || []),\n    {\n      path: nextPath,\n      color: PALETTE[colorIndex % PALETTE.length],\n    },\n  ]);\n  setCellSetSelection([nextPath]);\n  setCellColorEncoding('cellSetSelection');\n}\n\nexport function mergeCellSets(cellSets, additionalCellSets) {\n  return {\n    version: HIERARCHICAL_SCHEMAS[SETS_DATATYPE_CELL].latestVersion,\n    datatype: SETS_DATATYPE_CELL,\n    tree: [\n      ...(cellSets ? cellSets.tree : []),\n      ...(additionalCellSets ? additionalCellSets.tree : []),\n    ],\n  };\n}\n\nexport function createWarningComponent(props) {\n  return () => {\n    const {\n      title,\n      message,\n    } = props;\n    return (\n      <div className={PRIMARY_CARD}>\n        <h1>{title}</h1>\n        <div>{message}</div>\n      </div>\n    );\n  };\n}\n\nexport function asEsModule(component) {\n  return {\n    __esModule: true,\n    default: component,\n  };\n}\n\n\nexport function formatBytes(bytes, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  // eslint-disable-next-line no-restricted-properties\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n}\n\nexport const getStatsForResolution = (loader, resolution) => {\n  const { shape, labels } = loader[resolution];\n  const height = shape[labels.indexOf('y')];\n  const width = shape[labels.indexOf('x')];\n  const depth = shape[labels.indexOf('z')];\n  // eslint-disable-next-line no-bitwise\n  const depthDownsampled = Math.max(1, depth >> resolution);\n  // Check memory allocation limits for Float32Array (used in XR3DLayer for rendering)\n  const totalBytes = 4 * height * width * depthDownsampled;\n  return {\n    height, width, depthDownsampled, totalBytes,\n  };\n};\n\nexport const canLoadResolution = (loader, resolution) => {\n  const {\n    totalBytes, height, width, depthDownsampled,\n  } = getStatsForResolution(\n    loader,\n    resolution,\n  );\n  const maxHeapSize = window.performance?.memory\n    && window.performance?.memory?.jsHeapSizeLimit / 2;\n  const maxSize = maxHeapSize || (2 ** 31) - 1;\n  // 2048 is a normal texture size limit although some browsers go larger.\n  return (\n    totalBytes < maxSize\n    && height <= 2048\n    && depthDownsampled <= 2048\n    && width <= 2048\n    && depthDownsampled > 1\n  );\n};\n", "import cellSetsSchema from '../../schemas/cell-sets.schema.json';\nimport cellSetsTabularSchema from '../../schemas/cell-sets-tabular.schema.json';\n\nexport const FILE_EXTENSION_JSON = 'json';\nexport const MIME_TYPE_JSON = 'application/json';\n\nexport const FILE_EXTENSION_TABULAR = 'csv';\nexport const MIME_TYPE_TABULAR = 'text/csv';\nexport const SEPARATOR_TABULAR = ',';\n// The NA value below corresponds to the allowed string enum\n// value \"NA\" in the cell-sets-tabular JSON schema.\nexport const NA_VALUE_TABULAR = 'NA';\n\nexport const SETS_DATATYPE_CELL = 'cell';\nexport const HIERARCHICAL_SCHEMAS = {\n  cell: {\n    latestVersion: '0.1.3',\n    schema: cellSetsSchema,\n  },\n};\n\nexport const TABULAR_SCHEMAS = {\n  cell: {\n    schema: cellSetsTabularSchema,\n  },\n};\n", "import { useState, useEffect } from 'react';\nimport equal from 'fast-deep-equal';\nimport { capitalize } from '../utils';\nimport { useSetWarning } from '../app/state/hooks';\nimport {\n  AbstractLoaderError,\n  LoaderNotFoundError,\n} from '../loaders/errors/index';\nimport {\n  DEFAULT_MOLECULES_LAYER,\n  DEFAULT_CELLS_LAYER,\n  DEFAULT_NEIGHBORHOODS_LAYER,\n} from './spatial/constants';\nimport { DEFAULT_COORDINATION_VALUES } from '../app/state/coordination';\n\n/**\n * Warn via publishing to the console\n * and to the global warning store.\n * @param {AbstractLoaderError} error An error instance.\n */\nfunction warn(error, setWarning) {\n  setWarning(error.message);\n  console.warn(error.message);\n  if (error instanceof AbstractLoaderError) {\n    error.warnInConsole();\n  }\n}\n\n/**\n * Initialize values in the coordination space.\n * @param {object} values Object where\n * keys are coordination type names,\n * values are initial coordination values.\n * @param {object} setters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialValues Object where\n * keys are coordination type names and keys are values.\n */\nfunction initCoordinationSpace(values, setters, initialValues) {\n  if (!values || !setters) {\n    return;\n  }\n  Object.entries(values).forEach(([coordinationType, value]) => {\n    const setterName = `set${capitalize(coordinationType)}`;\n    const setterFunc = setters[setterName];\n    const initialValue = initialValues && initialValues[coordinationType];\n    const shouldInit = equal(initialValue, DEFAULT_COORDINATION_VALUES[coordinationType]);\n    if (shouldInit && setterFunc) {\n      setterFunc(value);\n    }\n  });\n}\n\n/**\n * Get the dataset description string.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @returns {array} [description] where\n * description is a string.\n */\nexport function useDescription(loaders, dataset) {\n  const [description, setDescription] = useState();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].description) {\n      setDescription(loaders[dataset].description);\n    } else {\n      setDescription(null);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [description];\n}\n\n/**\n * Get data from a cells data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [cells, cellsCount] where\n * cells is an object and cellsCount is the\n * number of items in the cells object.\n */\nexport function useCellsData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [cells, setCells] = useState({});\n  const [cellsCount, setCellsCount] = useState(0);\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders.cells) {\n      loaders[dataset].loaders.cells.load().catch(e => warn(e, setWarning)).then((payload) => {\n        if (!payload) return;\n        const { data, url, coordinationValues } = payload;\n        setCells(data);\n        setCellsCount(Object.keys(data).length);\n        addUrl(url, 'Cells');\n        // This dataset has cells, so set up the\n        // spatial cells layer coordination value\n        // using the cell layer singleton.\n        const coordinationValuesOrDefault = {\n          spatialCellsLayer: DEFAULT_CELLS_LAYER,\n          ...coordinationValues,\n        };\n        initCoordinationSpace(\n          coordinationValuesOrDefault,\n          coordinationSetters, initialCoordinationValues,\n        );\n        setItemIsReady('cells');\n      });\n    } else {\n      setCells({});\n      setCellsCount(0);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'cells', null, null), setWarning);\n      } else {\n        setItemIsReady('cells');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [cells, cellsCount];\n}\n\n/**\n * Get data from a cell sets data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names and values are the current values.\n * @returns {array} [cellSets] where\n * cellSets is a sets tree object.\n */\nexport function useCellSetsData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [cellSets, setCellSets] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders['cell-sets']) {\n      // Load the data initially.\n      loaders[dataset].loaders['cell-sets'].load().catch(e => warn(e, setWarning)).then((payload) => {\n        if (!payload) return;\n        const { data, url, coordinationValues } = payload;\n        setCellSets(data);\n        addUrl(url, 'Cell Sets');\n        initCoordinationSpace(\n          coordinationValues,\n          coordinationSetters,\n          initialCoordinationValues,\n        );\n        setItemIsReady('cell-sets');\n      });\n    } else {\n      setCellSets(null);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'cell-sets', null, null), setWarning);\n      } else {\n        setItemIsReady('cell-sets');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [cellSets];\n}\n\n/**\n * Get (potentially filtered) data from an expression matrix data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.  Should not be used in conjunction (called in the same component)\n * with useExpressionAttrs as this returns a potentially filtered set of attributes\n * specifically for the returned expression data.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [expressionMatrix] where\n * expressionMatrix is an object with\n * shape { cols, rows, matrix }.\n */\nexport function useExpressionMatrixData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [expressionMatrix, setExpressionMatrix] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders['expression-matrix']) {\n      loaders[dataset].loaders['expression-matrix'].load().catch(e => warn(e, setWarning)).then((payload) => {\n        if (!payload) return;\n        const { data, url, coordinationValues } = payload;\n        const [attrs, arr] = data;\n        setExpressionMatrix({\n          cols: attrs.cols,\n          rows: attrs.rows,\n          matrix: arr.data,\n        });\n        addUrl(url, 'Expression Matrix');\n        initCoordinationSpace(\n          coordinationValues,\n          coordinationSetters,\n          initialCoordinationValues,\n        );\n        setItemIsReady('expression-matrix');\n      });\n    } else {\n      setExpressionMatrix(null);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'expression-matrix', null, null), setWarning);\n      } else {\n        setItemIsReady('expression-matrix');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [expressionMatrix];\n}\n\n/**\n * Get data from the expression matrix data type loader for a given gene selection.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {boolean} selection A list of gene names to get expression data for.\n * @returns {array} [geneData] where geneData is an array [Uint8Array, ..., Uint8Array]\n * for however many genes are in the selection.\n */\nexport function useGeneSelection(\n  loaders,\n  dataset,\n  setItemIsReady,\n  isRequired,\n  selection,\n  setItemIsNotReady,\n) {\n  const [geneData, setGeneData] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n    if (!selection) {\n      setItemIsReady('expression-matrix');\n      return;\n    }\n    const loader = loaders[dataset].loaders['expression-matrix'];\n    if (loader) {\n      setItemIsNotReady('expression-matrix');\n      const implementsGeneSelection = typeof loader.loadGeneSelection === 'function';\n      if (implementsGeneSelection) {\n        loaders[dataset].loaders['expression-matrix']\n          .loadGeneSelection({ selection })\n          .catch(e => warn(e, setWarning))\n          .then((payload) => {\n            if (!payload) return;\n            const { data } = payload;\n            setGeneData(data);\n            setItemIsReady('expression-matrix');\n          });\n      } else {\n        loader.load().catch(e => warn(e, setWarning)).then((payload) => {\n          if (!payload) return;\n          const { data } = payload;\n          const [attrs, { data: matrix }] = data;\n          const expressionDataForSelection = selection.map((sel) => {\n            const geneIndex = attrs.cols.indexOf(sel);\n            const numGenes = attrs.cols.length;\n            const numCells = attrs.rows.length;\n            const expressionData = new Uint8Array(numCells);\n            for (let cellIndex = 0; cellIndex < numCells; cellIndex += 1) {\n              expressionData[cellIndex] = matrix[cellIndex * numGenes + geneIndex];\n            }\n            return expressionData;\n          });\n          setGeneData(expressionDataForSelection);\n          setItemIsReady('expression-matrix');\n        });\n      }\n    } else {\n      setGeneData(null);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'expression-matrix', null, null), setWarning);\n      } else {\n        setItemIsReady('expression-matrix');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset, selection]);\n\n  return [geneData];\n}\n\n/**\n * Get the attributes for the expression matrix data type loader,\n * i.e names of cells and genes.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.  Should not be used in conjunction (called in the same component)\n * with useExpressionMatrixData.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @returns {object} [attrs] { rows, cols } object containing cell and gene names.\n */\nexport function useExpressionAttrs(loaders, dataset, setItemIsReady, addUrl, isRequired) {\n  const [attrs, setAttrs] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n    const loader = loaders[dataset].loaders['expression-matrix'];\n    if (loader) {\n      const implementsLoadAttrs = typeof loader.loadAttrs === 'function';\n      if (implementsLoadAttrs) {\n        loader.loadAttrs().catch(e => warn(e, setWarning)).then((payload) => {\n          if (!payload) return;\n          const { data, url } = payload;\n          setAttrs(data);\n          addUrl(url, 'Expression Matrix');\n          setItemIsReady('expression-matrix');\n        });\n      } else {\n        loader.load().catch(e => warn(e, setWarning)).then((payload) => {\n          if (!payload) return;\n          const { data, url } = payload;\n          setAttrs(data[0]);\n          addUrl(url, 'Expression Matrix');\n          setItemIsReady('expression-matrix');\n        });\n      }\n    } else {\n      setAttrs(null);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'expression-matrix', null, null), setWarning);\n      } else {\n        setItemIsReady('expression-matrix');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [attrs];\n}\n\n/**\n * Get data from a molecules data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [molecules, moleculesCount, locationsCount] where\n * molecules is an object,\n * moleculesCount is the number of unique molecule types, and\n * locationsCount is the number of molecules.\n */\nexport function useMoleculesData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [molecules, setMolecules] = useState();\n  const [moleculesCount, setMoleculesCount] = useState(0);\n  const [locationsCount, setLocationsCount] = useState(0);\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders.molecules) {\n      loaders[dataset].loaders.molecules.load().catch(e => warn(e, setWarning)).then((payload) => {\n        if (!payload) return;\n        const { data, url, coordinationValues } = payload;\n        setMolecules(data);\n        setMoleculesCount(Object.keys(data).length);\n        setLocationsCount(Object.values(data)\n          .map(l => l.length)\n          .reduce((a, b) => a + b, 0));\n        addUrl(url, 'Molecules');\n        const coordinationValuesOrDefault = {\n          spatialMoleculesLayer: DEFAULT_MOLECULES_LAYER,\n          ...coordinationValues,\n        };\n        initCoordinationSpace(\n          coordinationValuesOrDefault,\n          coordinationSetters,\n          initialCoordinationValues,\n        );\n        setItemIsReady('molecules');\n      });\n    } else {\n      setMolecules({});\n      setMoleculesCount(0);\n      setLocationsCount(0);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'molecules', null, null), setWarning);\n      } else {\n        setItemIsReady('molecules');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [molecules, moleculesCount, locationsCount];\n}\n\n/**\n * Get data from a neighborhoods data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [neighborhoods] where\n * neighborhoods is an object.\n */\nexport function useNeighborhoodsData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [neighborhoods, setNeighborhoods] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders.neighborhoods) {\n      loaders[dataset].loaders.neighborhoods.load().catch(e => warn(e, setWarning))\n        .then((payload) => {\n          if (!payload) return;\n          const { data, url, coordinationValues } = payload;\n          setNeighborhoods(data);\n          addUrl(url, 'Neighborhoods');\n          const coordinationValuesOrDefault = {\n            spatialNeighborhoodsLayer: DEFAULT_NEIGHBORHOODS_LAYER,\n            ...coordinationValues,\n          };\n          initCoordinationSpace(\n            coordinationValuesOrDefault,\n            coordinationSetters,\n            initialCoordinationValues,\n          );\n          setItemIsReady('neighborhoods');\n        });\n    } else {\n      setNeighborhoods({});\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'neighborhoods', null, null), setWarning);\n      } else {\n        setItemIsReady('neighborhoods');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [neighborhoods];\n}\n\n/**\n * Get data from a raster data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [raster, imageLayerLoaders, imageLayerMeta] where\n * raster is an object,\n * imageLayerLoaders is an object, and\n * imageLayerMeta is an object.\n */\nexport function useRasterData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [raster, setRaster] = useState();\n  // Since we want the image layer / channel definitions to come from the\n  // coordination space stored as JSON in the view config,\n  // we need to set up a separate state variable here to store the\n  // non-JSON objects, such as layer loader instances.\n  const [imageLayerLoaders, setImageLayerLoaders] = useState([]);\n  const [imageLayerMeta, setImageLayerMeta] = useState([]);\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders.raster) {\n      loaders[dataset].loaders.raster.load().catch(e => warn(e, setWarning)).then((payload) => {\n        if (!payload) return;\n        const { data, url: urls, coordinationValues } = payload;\n        setRaster(data);\n        urls.forEach(([url, name]) => {\n          addUrl(url, name);\n        });\n        const { loaders: nextImageLoaders, meta: nextImageMeta } = data;\n        setImageLayerLoaders(nextImageLoaders);\n        setImageLayerMeta(nextImageMeta);\n        initCoordinationSpace(\n          coordinationValues,\n          coordinationSetters,\n          initialCoordinationValues,\n        );\n        setItemIsReady('raster');\n      });\n    } else {\n      // There was no raster loader for this dataset,\n      // and raster should be optional.\n      setImageLayerLoaders([]);\n      setImageLayerMeta([]);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'raster', null, null), setWarning);\n      } else {\n        setItemIsReady('raster');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n  return [raster, imageLayerLoaders, imageLayerMeta];\n}\n\n/**\n * Get data from a genomic-profiles data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [neighborhoods] where\n * neighborhoods is an object.\n */\nexport function useGenomicProfilesData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [genomicProfilesAttrs, setGenomicProfilesAttrs] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders['genomic-profiles']) {\n      loaders[dataset].loaders['genomic-profiles'].load().catch(e => warn(e, setWarning))\n        .then((payload) => {\n          if (!payload) return;\n          const { data, url, coordinationValues } = payload;\n          setGenomicProfilesAttrs(data);\n          addUrl(url);\n          initCoordinationSpace(\n            coordinationValues,\n            coordinationSetters,\n            initialCoordinationValues,\n          );\n          setItemIsReady('genomic-profiles');\n        });\n    } else {\n      setGenomicProfilesAttrs(null);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'genomic-profiles', null, null), setWarning);\n      } else {\n        setItemIsReady('genomic-profiles');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [genomicProfilesAttrs];\n}\n", "/**\n * A loader error ancestor class containing a default constructor\n * and a stub for the required warnInConsole() method.\n */\nexport default class AbstractLoaderError {\n  constructor(message) {\n    this.message = message;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  warnInConsole() {\n    throw new Error('The warnInConsole() method has not been implemented.');\n  }\n}\n", "import AbstractLoaderError from './AbstractLoaderError';\n\nexport default class LoaderValidationError extends AbstractLoaderError {\n  constructor(datasetType, datasetFileType, datasetUrl, reason) {\n    super(`Error while validating ${datasetType}.`);\n    this.name = 'LoaderValidationError';\n\n    this.datasetType = datasetType;\n    this.datasetFileType = datasetFileType;\n    this.datasetUrl = datasetUrl;\n    this.reason = reason;\n  }\n\n  warnInConsole() {\n    const {\n      datasetType, datasetUrl, reason,\n    } = this;\n    console.warn(\n      `${datasetType} from ${datasetUrl}: validation failed`,\n      JSON.stringify(reason, null, 2),\n    );\n  }\n}\n", "import AbstractLoaderError from './AbstractLoaderError';\n\nexport default class LoaderNotFoundError extends AbstractLoaderError {\n  constructor(datasetType, datasetFileType, datasetUrl) {\n    super(`Error finding loader for ${datasetType}.`);\n    this.name = 'LoaderNotFoundError';\n\n    this.datasetType = datasetType;\n    this.datasetFileType = datasetFileType;\n    this.datasetUrl = datasetUrl;\n  }\n\n  warnInConsole() {\n    const {\n      datasetType, datasetFileType, datasetUrl,\n    } = this;\n    if (datasetFileType && datasetUrl) {\n      console.warn(\n        `${datasetType} from ${datasetUrl}: unable to find loader for fileType ${datasetFileType}`,\n      );\n    } else {\n      console.warn(\n        `${datasetType}: unable to find loader`,\n      );\n    }\n  }\n}\n", "import { COORDINATE_SYSTEM, Layer, project32, picking, CompositeLayer, OrthographicView, Controller, OrbitView } from '@deck.gl/core';\nimport { Matrix4 } from 'math.gl';\nimport GL from '@luma.gl/constants';\nimport { TileLayer } from '@deck.gl/geo-layers';\nimport { Model, Geometry, Texture2D, isWebGL2, Texture3D } from '@luma.gl/core';\nimport { hasFeature, FEATURES } from '@luma.gl/webgl';\nimport { BitmapLayer as BitmapLayer$1, PolygonLayer, LineLayer, TextLayer } from '@deck.gl/layers';\nimport quickselect from 'quickselect';\nimport { Plane } from '@math.gl/culling';\nimport React, { PureComponent, useState, useMemo } from 'react';\nimport DeckGL from '@deck.gl/react';\nimport equal from 'fast-deep-equal';\nimport { fromUrl, fromBlob } from 'geotiff';\nimport parser from 'fast-xml-parser';\nimport { KeyError, openGroup, BoundsCheckError, slice, HTTPStore } from 'zarr';\n\nvar fsColormap1 = \"#define SHADER_NAME xr-layer-fragment-shader-colormap\\nprecision highp float;\\n#define GLSLIFY 1\\nuniform sampler2D channel0;uniform sampler2D channel1;uniform sampler2D channel2;uniform sampler2D channel3;uniform sampler2D channel4;uniform sampler2D channel5;uniform vec2 contrastLimits[6];uniform float opacity;uniform float divisor;uniform bool useTransparentColor;varying vec2 vTexCoord;void main(){float intensityValue0=sample_and_apply_contrast_limits(channel0,vTexCoord,contrastLimits[0]);float intensityValue1=sample_and_apply_contrast_limits(channel1,vTexCoord,contrastLimits[1]);float intensityValue2=sample_and_apply_contrast_limits(channel2,vTexCoord,contrastLimits[2]);float intensityValue3=sample_and_apply_contrast_limits(channel3,vTexCoord,contrastLimits[3]);float intensityValue4=sample_and_apply_contrast_limits(channel4,vTexCoord,contrastLimits[4]);float intensityValue5=sample_and_apply_contrast_limits(channel5,vTexCoord,contrastLimits[5]);float intensityCombo=0.;intensityCombo+=max(0.,intensityValue0);intensityCombo+=max(0.,intensityValue1);intensityCombo+=max(0.,intensityValue2);intensityCombo+=max(0.,intensityValue3);intensityCombo+=max(0.,intensityValue4);intensityCombo+=max(0.,intensityValue5);gl_FragColor=colormap(intensityCombo,opacity,useTransparentColor);geometry.uv=vTexCoord;DECKGL_FILTER_COLOR(gl_FragColor,geometry);}\"; // eslint-disable-line\n\nvar fsColormap2 = \"#version 300 es\\n#define SHADER_NAME xr-layer-fragment-shader\\nprecision highp float;precision highp int;precision highp SAMPLER_TYPE;\\n#define GLSLIFY 1\\nuniform SAMPLER_TYPE channel0;uniform SAMPLER_TYPE channel1;uniform SAMPLER_TYPE channel2;uniform SAMPLER_TYPE channel3;uniform SAMPLER_TYPE channel4;uniform SAMPLER_TYPE channel5;uniform vec2 contrastLimits[6];uniform float opacity;uniform bool useTransparentColor;in vec2 vTexCoord;out vec4 color;void main(){float intensityValue0=sample_and_apply_contrast_limits(channel0,vTexCoord,contrastLimits[0]);float intensityValue1=sample_and_apply_contrast_limits(channel1,vTexCoord,contrastLimits[1]);float intensityValue2=sample_and_apply_contrast_limits(channel2,vTexCoord,contrastLimits[2]);float intensityValue3=sample_and_apply_contrast_limits(channel3,vTexCoord,contrastLimits[3]);float intensityValue4=sample_and_apply_contrast_limits(channel4,vTexCoord,contrastLimits[4]);float intensityValue5=sample_and_apply_contrast_limits(channel5,vTexCoord,contrastLimits[5]);float intensityArray[6]=float[6](intensityValue0,intensityValue1,intensityValue2,intensityValue3,intensityValue4,intensityValue5);float intensityCombo=0.;for(int i=0;i<6;i++){intensityCombo+=max(0.,intensityArray[i]);}color=colormap(intensityCombo,opacity,useTransparentColor);geometry.uv=vTexCoord;DECKGL_FILTER_COLOR(color,geometry);}\"; // eslint-disable-line\n\nvar fs1 = \"#define SHADER_NAME xr-layer-fragment-shader\\nprecision highp float;\\n#define GLSLIFY 1\\nuniform sampler2D channel0;uniform sampler2D channel1;uniform sampler2D channel2;uniform sampler2D channel3;uniform sampler2D channel4;uniform sampler2D channel5;uniform vec2 contrastLimits[6];uniform vec3 colors[6];uniform float intensityArray[6];uniform float opacity;uniform float majorLensAxis;uniform float minorLensAxis;uniform vec2 lensCenter;uniform bool isLensOn;uniform int lensSelection;uniform vec3 lensBorderColor;uniform float lensBorderRadius;uniform vec3 transparentColor;uniform bool useTransparentColor;varying vec2 vTexCoord;void main(){float intensityValue0=sample_and_apply_contrast_limits(channel0,vTexCoord,contrastLimits[0]);float intensityValue1=sample_and_apply_contrast_limits(channel1,vTexCoord,contrastLimits[1]);float intensityValue2=sample_and_apply_contrast_limits(channel2,vTexCoord,contrastLimits[2]);float intensityValue3=sample_and_apply_contrast_limits(channel3,vTexCoord,contrastLimits[3]);float intensityValue4=sample_and_apply_contrast_limits(channel4,vTexCoord,contrastLimits[4]);float intensityValue5=sample_and_apply_contrast_limits(channel5,vTexCoord,contrastLimits[5]);bool isFragInLensBounds=frag_in_lens_bounds(lensCenter,vTexCoord,majorLensAxis,minorLensAxis,lensBorderRadius);bool isFragOnLensBounds=frag_on_lens_bounds(lensCenter,vTexCoord,majorLensAxis,minorLensAxis,lensBorderRadius);bool inLensAndUseLens=isLensOn&&isFragInLensBounds;vec3 rgbCombo=process_channel_intensity(intensityValue0,colors[0],0,inLensAndUseLens,lensSelection);rgbCombo+=process_channel_intensity(intensityValue1,colors[1],1,inLensAndUseLens,lensSelection);rgbCombo+=process_channel_intensity(intensityValue2,colors[2],2,inLensAndUseLens,lensSelection);rgbCombo+=process_channel_intensity(intensityValue3,colors[3],3,inLensAndUseLens,lensSelection);rgbCombo+=process_channel_intensity(intensityValue4,colors[4],4,inLensAndUseLens,lensSelection);rgbCombo+=process_channel_intensity(intensityValue5,colors[5],5,inLensAndUseLens,lensSelection);rgbCombo=(isLensOn&&isFragOnLensBounds)? lensBorderColor : rgbCombo;gl_FragColor=apply_opacity(rgbCombo,useTransparentColor,transparentColor,opacity);geometry.uv=vTexCoord;DECKGL_FILTER_COLOR(gl_FragColor,geometry);}\"; // eslint-disable-line\n\nvar fs2 = \"#version 300 es\\n#define SHADER_NAME xr-layer-fragment-shader\\nprecision highp float;precision highp int;precision highp SAMPLER_TYPE;\\n#define GLSLIFY 1\\nuniform SAMPLER_TYPE channel0;uniform SAMPLER_TYPE channel1;uniform SAMPLER_TYPE channel2;uniform SAMPLER_TYPE channel3;uniform SAMPLER_TYPE channel4;uniform SAMPLER_TYPE channel5;uniform vec2 contrastLimits[6];uniform vec3 colors[6];uniform float opacity;uniform float majorLensAxis;uniform float minorLensAxis;uniform vec2 lensCenter;uniform bool isLensOn;uniform int lensSelection;uniform vec3 lensBorderColor;uniform float lensBorderRadius;uniform vec3 transparentColor;uniform bool useTransparentColor;in vec2 vTexCoord;out vec4 color;void main(){float intensityValue0=sample_and_apply_contrast_limits(channel0,vTexCoord,contrastLimits[0]);float intensityValue1=sample_and_apply_contrast_limits(channel1,vTexCoord,contrastLimits[1]);float intensityValue2=sample_and_apply_contrast_limits(channel2,vTexCoord,contrastLimits[2]);float intensityValue3=sample_and_apply_contrast_limits(channel3,vTexCoord,contrastLimits[3]);float intensityValue4=sample_and_apply_contrast_limits(channel4,vTexCoord,contrastLimits[4]);float intensityValue5=sample_and_apply_contrast_limits(channel5,vTexCoord,contrastLimits[5]);float intensityArray[6]=float[6](intensityValue0,intensityValue1,intensityValue2,intensityValue3,intensityValue4,intensityValue5);bool isFragInLensBounds=frag_in_lens_bounds(lensCenter,vTexCoord,majorLensAxis,minorLensAxis,lensBorderRadius);bool isFragOnLensBounds=frag_on_lens_bounds(lensCenter,vTexCoord,majorLensAxis,minorLensAxis,lensBorderRadius);bool inLensAndUseLens=isLensOn&&isFragInLensBounds;vec3 rgbCombo=vec3(0.);for(int i=0;i<6;i++){rgbCombo+=process_channel_intensity(intensityArray[i],colors[i],i,inLensAndUseLens,lensSelection);}rgbCombo=(isLensOn&&isFragOnLensBounds)? lensBorderColor : rgbCombo;color=apply_opacity(rgbCombo,useTransparentColor,transparentColor,opacity);geometry.uv=vTexCoord;DECKGL_FILTER_COLOR(color,geometry);}\"; // eslint-disable-line\n\nvar vs1 = \"#define GLSLIFY 1\\n#define SHADER_NAME xr-layer-vertex-shader\\nattribute vec2 texCoords;attribute vec3 positions;attribute vec3 positions64Low;attribute vec3 instancePickingColors;varying vec2 vTexCoord;void main(void){geometry.worldPosition=positions;geometry.uv=texCoords;geometry.pickingColor=instancePickingColors;gl_Position=project_position_to_clipspace(positions,positions64Low,vec3(0.),geometry.position);DECKGL_FILTER_GL_POSITION(gl_Position,geometry);vTexCoord=texCoords;vec4 color=vec4(0.);DECKGL_FILTER_COLOR(color,geometry);}\"; // eslint-disable-line\n\nvar vs2 = \"#version 300 es\\n#define GLSLIFY 1\\n#define SHADER_NAME xr-layer-vertex-shader\\nin vec2 texCoords;in vec3 positions;in vec3 positions64Low;in vec3 instancePickingColors;out vec2 vTexCoord;void main(void){geometry.worldPosition=positions;geometry.uv=texCoords;geometry.pickingColor=instancePickingColors;gl_Position=project_position_to_clipspace(positions,positions64Low,vec3(0.),geometry.position);DECKGL_FILTER_GL_POSITION(gl_Position,geometry);vTexCoord=texCoords;vec4 color=vec4(0.);DECKGL_FILTER_COLOR(color,geometry);}\"; // eslint-disable-line\n\nvar fs$3 = \"#define GLSLIFY 1\\nvec4 jet(float x_17){const float e0=0.0;const vec4 v0=vec4(0,0,0.5137254901960784,1);const float e1=0.125;const vec4 v1=vec4(0,0.23529411764705882,0.6666666666666666,1);const float e2=0.375;const vec4 v2=vec4(0.0196078431372549,1,1,1);const float e3=0.625;const vec4 v3=vec4(1,1,0,1);const float e4=0.875;const vec4 v4=vec4(0.9803921568627451,0,0,1);const float e5=1.0;const vec4 v5=vec4(0.5019607843137255,0,0,1);float a0=smoothstep(e0,e1,x_17);float a1=smoothstep(e1,e2,x_17);float a2=smoothstep(e2,e3,x_17);float a3=smoothstep(e3,e4,x_17);float a4=smoothstep(e4,e5,x_17);return max(mix(v0,v1,a0)*step(e0,x_17)*step(x_17,e1),max(mix(v1,v2,a1)*step(e1,x_17)*step(x_17,e2),max(mix(v2,v3,a2)*step(e2,x_17)*step(x_17,e3),max(mix(v3,v4,a3)*step(e3,x_17)*step(x_17,e4),mix(v4,v5,a4)*step(e4,x_17)*step(x_17,e5)))));}vec4 hsv(float x_18){const float e0=0.0;const vec4 v0=vec4(1,0,0,1);const float e1=0.169;const vec4 v1=vec4(0.9921568627450981,1,0.00784313725490196,1);const float e2=0.173;const vec4 v2=vec4(0.9686274509803922,1,0.00784313725490196,1);const float e3=0.337;const vec4 v3=vec4(0,0.9882352941176471,0.01568627450980392,1);const float e4=0.341;const vec4 v4=vec4(0,0.9882352941176471,0.0392156862745098,1);const float e5=0.506;const vec4 v5=vec4(0.00392156862745098,0.9764705882352941,1,1);const float e6=0.671;const vec4 v6=vec4(0.00784313725490196,0,0.9921568627450981,1);const float e7=0.675;const vec4 v7=vec4(0.03137254901960784,0,0.9921568627450981,1);const float e8=0.839;const vec4 v8=vec4(1,0,0.984313725490196,1);const float e9=0.843;const vec4 v9=vec4(1,0,0.9607843137254902,1);const float e10=1.0;const vec4 v10=vec4(1,0,0.023529411764705882,1);float a0=smoothstep(e0,e1,x_18);float a1=smoothstep(e1,e2,x_18);float a2=smoothstep(e2,e3,x_18);float a3=smoothstep(e3,e4,x_18);float a4=smoothstep(e4,e5,x_18);float a5=smoothstep(e5,e6,x_18);float a6=smoothstep(e6,e7,x_18);float a7=smoothstep(e7,e8,x_18);float a8=smoothstep(e8,e9,x_18);float a9=smoothstep(e9,e10,x_18);return max(mix(v0,v1,a0)*step(e0,x_18)*step(x_18,e1),max(mix(v1,v2,a1)*step(e1,x_18)*step(x_18,e2),max(mix(v2,v3,a2)*step(e2,x_18)*step(x_18,e3),max(mix(v3,v4,a3)*step(e3,x_18)*step(x_18,e4),max(mix(v4,v5,a4)*step(e4,x_18)*step(x_18,e5),max(mix(v5,v6,a5)*step(e5,x_18)*step(x_18,e6),max(mix(v6,v7,a6)*step(e6,x_18)*step(x_18,e7),max(mix(v7,v8,a7)*step(e7,x_18)*step(x_18,e8),max(mix(v8,v9,a8)*step(e8,x_18)*step(x_18,e9),mix(v9,v10,a9)*step(e9,x_18)*step(x_18,e10))))))))));}vec4 hot(float x_13){const float e0=0.0;const vec4 v0=vec4(0,0,0,1);const float e1=0.3;const vec4 v1=vec4(0.9019607843137255,0,0,1);const float e2=0.6;const vec4 v2=vec4(1,0.8235294117647058,0,1);const float e3=1.0;const vec4 v3=vec4(1,1,1,1);float a0=smoothstep(e0,e1,x_13);float a1=smoothstep(e1,e2,x_13);float a2=smoothstep(e2,e3,x_13);return max(mix(v0,v1,a0)*step(e0,x_13)*step(x_13,e1),max(mix(v1,v2,a1)*step(e1,x_13)*step(x_13,e2),mix(v2,v3,a2)*step(e2,x_13)*step(x_13,e3)));}vec4 cool(float x_24){const float e0=0.0;const vec4 v0=vec4(0.49019607843137253,0,0.7019607843137254,1);const float e1=0.13;const vec4 v1=vec4(0.4549019607843137,0,0.8549019607843137,1);const float e2=0.25;const vec4 v2=vec4(0.3843137254901961,0.2901960784313726,0.9294117647058824,1);const float e3=0.38;const vec4 v3=vec4(0.26666666666666666,0.5725490196078431,0.9058823529411765,1);const float e4=0.5;const vec4 v4=vec4(0,0.8,0.7725490196078432,1);const float e5=0.63;const vec4 v5=vec4(0,0.9686274509803922,0.5725490196078431,1);const float e6=0.75;const vec4 v6=vec4(0,1,0.34509803921568627,1);const float e7=0.88;const vec4 v7=vec4(0.1568627450980392,1,0.03137254901960784,1);const float e8=1.0;const vec4 v8=vec4(0.5764705882352941,1,0,1);float a0=smoothstep(e0,e1,x_24);float a1=smoothstep(e1,e2,x_24);float a2=smoothstep(e2,e3,x_24);float a3=smoothstep(e3,e4,x_24);float a4=smoothstep(e4,e5,x_24);float a5=smoothstep(e5,e6,x_24);float a6=smoothstep(e6,e7,x_24);float a7=smoothstep(e7,e8,x_24);return max(mix(v0,v1,a0)*step(e0,x_24)*step(x_24,e1),max(mix(v1,v2,a1)*step(e1,x_24)*step(x_24,e2),max(mix(v2,v3,a2)*step(e2,x_24)*step(x_24,e3),max(mix(v3,v4,a3)*step(e3,x_24)*step(x_24,e4),max(mix(v4,v5,a4)*step(e4,x_24)*step(x_24,e5),max(mix(v5,v6,a5)*step(e5,x_24)*step(x_24,e6),max(mix(v6,v7,a6)*step(e6,x_24)*step(x_24,e7),mix(v7,v8,a7)*step(e7,x_24)*step(x_24,e8))))))));}vec4 spring(float x_5){const float e0=0.0;const vec4 v0=vec4(1,0,1,1);const float e1=1.0;const vec4 v1=vec4(1,1,0,1);float a0=smoothstep(e0,e1,x_5);return mix(v0,v1,a0)*step(e0,x_5)*step(x_5,e1);}vec4 summer(float x_12){const float e0=0.0;const vec4 v0=vec4(0,0.5019607843137255,0.4,1);const float e1=1.0;const vec4 v1=vec4(1,1,0.4,1);float a0=smoothstep(e0,e1,x_12);return mix(v0,v1,a0)*step(e0,x_12)*step(x_12,e1);}vec4 autumn(float x_25){const float e0=0.0;const vec4 v0=vec4(1,0,0,1);const float e1=1.0;const vec4 v1=vec4(1,1,0,1);float a0=smoothstep(e0,e1,x_25);return mix(v0,v1,a0)*step(e0,x_25)*step(x_25,e1);}vec4 winter(float x_16){const float e0=0.0;const vec4 v0=vec4(0,0,1,1);const float e1=1.0;const vec4 v1=vec4(0,1,0.5019607843137255,1);float a0=smoothstep(e0,e1,x_16);return mix(v0,v1,a0)*step(e0,x_16)*step(x_16,e1);}vec4 bone(float x_15){const float e0=0.0;const vec4 v0=vec4(0,0,0,1);const float e1=0.376;const vec4 v1=vec4(0.32941176470588235,0.32941176470588235,0.4549019607843137,1);const float e2=0.753;const vec4 v2=vec4(0.6627450980392157,0.7843137254901961,0.7843137254901961,1);const float e3=1.0;const vec4 v3=vec4(1,1,1,1);float a0=smoothstep(e0,e1,x_15);float a1=smoothstep(e1,e2,x_15);float a2=smoothstep(e2,e3,x_15);return max(mix(v0,v1,a0)*step(e0,x_15)*step(x_15,e1),max(mix(v1,v2,a1)*step(e1,x_15)*step(x_15,e2),mix(v2,v3,a2)*step(e2,x_15)*step(x_15,e3)));}vec4 copper(float x_10){const float e0=0.0;const vec4 v0=vec4(0,0,0,1);const float e1=0.804;const vec4 v1=vec4(1,0.6274509803921569,0.4,1);const float e2=1.0;const vec4 v2=vec4(1,0.7803921568627451,0.4980392156862745,1);float a0=smoothstep(e0,e1,x_10);float a1=smoothstep(e1,e2,x_10);return max(mix(v0,v1,a0)*step(e0,x_10)*step(x_10,e1),mix(v1,v2,a1)*step(e1,x_10)*step(x_10,e2));}vec4 greys(float x_4){const float e0=0.0;const vec4 v0=vec4(0,0,0,1);const float e1=1.0;const vec4 v1=vec4(1,1,1,1);float a0=smoothstep(e0,e1,x_4);return mix(v0,v1,a0)*step(e0,x_4)*step(x_4,e1);}vec4 yignbu(float x_32){const float e0=0.0;const vec4 v0=vec4(0.03137254901960784,0.11372549019607843,0.34509803921568627,1);const float e1=0.125;const vec4 v1=vec4(0.1450980392156863,0.20392156862745098,0.5803921568627451,1);const float e2=0.25;const vec4 v2=vec4(0.13333333333333333,0.3686274509803922,0.6588235294117647,1);const float e3=0.375;const vec4 v3=vec4(0.11372549019607843,0.5686274509803921,0.7529411764705882,1);const float e4=0.5;const vec4 v4=vec4(0.2549019607843137,0.7137254901960784,0.7686274509803922,1);const float e5=0.625;const vec4 v5=vec4(0.4980392156862745,0.803921568627451,0.7333333333333333,1);const float e6=0.75;const vec4 v6=vec4(0.7803921568627451,0.9137254901960784,0.7058823529411765,1);const float e7=0.875;const vec4 v7=vec4(0.9294117647058824,0.9725490196078431,0.8509803921568627,1);const float e8=1.0;const vec4 v8=vec4(1,1,0.8509803921568627,1);float a0=smoothstep(e0,e1,x_32);float a1=smoothstep(e1,e2,x_32);float a2=smoothstep(e2,e3,x_32);float a3=smoothstep(e3,e4,x_32);float a4=smoothstep(e4,e5,x_32);float a5=smoothstep(e5,e6,x_32);float a6=smoothstep(e6,e7,x_32);float a7=smoothstep(e7,e8,x_32);return max(mix(v0,v1,a0)*step(e0,x_32)*step(x_32,e1),max(mix(v1,v2,a1)*step(e1,x_32)*step(x_32,e2),max(mix(v2,v3,a2)*step(e2,x_32)*step(x_32,e3),max(mix(v3,v4,a3)*step(e3,x_32)*step(x_32,e4),max(mix(v4,v5,a4)*step(e4,x_32)*step(x_32,e5),max(mix(v5,v6,a5)*step(e5,x_32)*step(x_32,e6),max(mix(v6,v7,a6)*step(e6,x_32)*step(x_32,e7),mix(v7,v8,a7)*step(e7,x_32)*step(x_32,e8))))))));}vec4 greens(float x_34){const float e0=0.0;const vec4 v0=vec4(0,0.26666666666666666,0.10588235294117647,1);const float e1=0.125;const vec4 v1=vec4(0,0.42745098039215684,0.17254901960784313,1);const float e2=0.25;const vec4 v2=vec4(0.13725490196078433,0.5450980392156862,0.27058823529411763,1);const float e3=0.375;const vec4 v3=vec4(0.2549019607843137,0.6705882352941176,0.36470588235294116,1);const float e4=0.5;const vec4 v4=vec4(0.4549019607843137,0.7686274509803922,0.4627450980392157,1);const float e5=0.625;const vec4 v5=vec4(0.6313725490196078,0.8509803921568627,0.6078431372549019,1);const float e6=0.75;const vec4 v6=vec4(0.7803921568627451,0.9137254901960784,0.7529411764705882,1);const float e7=0.875;const vec4 v7=vec4(0.8980392156862745,0.9607843137254902,0.8784313725490196,1);const float e8=1.0;const vec4 v8=vec4(0.9686274509803922,0.9882352941176471,0.9607843137254902,1);float a0=smoothstep(e0,e1,x_34);float a1=smoothstep(e1,e2,x_34);float a2=smoothstep(e2,e3,x_34);float a3=smoothstep(e3,e4,x_34);float a4=smoothstep(e4,e5,x_34);float a5=smoothstep(e5,e6,x_34);float a6=smoothstep(e6,e7,x_34);float a7=smoothstep(e7,e8,x_34);return max(mix(v0,v1,a0)*step(e0,x_34)*step(x_34,e1),max(mix(v1,v2,a1)*step(e1,x_34)*step(x_34,e2),max(mix(v2,v3,a2)*step(e2,x_34)*step(x_34,e3),max(mix(v3,v4,a3)*step(e3,x_34)*step(x_34,e4),max(mix(v4,v5,a4)*step(e4,x_34)*step(x_34,e5),max(mix(v5,v6,a5)*step(e5,x_34)*step(x_34,e6),max(mix(v6,v7,a6)*step(e6,x_34)*step(x_34,e7),mix(v7,v8,a7)*step(e7,x_34)*step(x_34,e8))))))));}vec4 yiorrd(float x_41){const float e0=0.0;const vec4 v0=vec4(0.5019607843137255,0,0.14901960784313725,1);const float e1=0.125;const vec4 v1=vec4(0.7411764705882353,0,0.14901960784313725,1);const float e2=0.25;const vec4 v2=vec4(0.8901960784313725,0.10196078431372549,0.10980392156862745,1);const float e3=0.375;const vec4 v3=vec4(0.9882352941176471,0.3058823529411765,0.16470588235294117,1);const float e4=0.5;const vec4 v4=vec4(0.9921568627450981,0.5529411764705883,0.23529411764705882,1);const float e5=0.625;const vec4 v5=vec4(0.996078431372549,0.6980392156862745,0.2980392156862745,1);const float e6=0.75;const vec4 v6=vec4(0.996078431372549,0.8509803921568627,0.4627450980392157,1);const float e7=0.875;const vec4 v7=vec4(1,0.9294117647058824,0.6274509803921569,1);const float e8=1.0;const vec4 v8=vec4(1,1,0.8,1);float a0=smoothstep(e0,e1,x_41);float a1=smoothstep(e1,e2,x_41);float a2=smoothstep(e2,e3,x_41);float a3=smoothstep(e3,e4,x_41);float a4=smoothstep(e4,e5,x_41);float a5=smoothstep(e5,e6,x_41);float a6=smoothstep(e6,e7,x_41);float a7=smoothstep(e7,e8,x_41);return max(mix(v0,v1,a0)*step(e0,x_41)*step(x_41,e1),max(mix(v1,v2,a1)*step(e1,x_41)*step(x_41,e2),max(mix(v2,v3,a2)*step(e2,x_41)*step(x_41,e3),max(mix(v3,v4,a3)*step(e3,x_41)*step(x_41,e4),max(mix(v4,v5,a4)*step(e4,x_41)*step(x_41,e5),max(mix(v5,v6,a5)*step(e5,x_41)*step(x_41,e6),max(mix(v6,v7,a6)*step(e6,x_41)*step(x_41,e7),mix(v7,v8,a7)*step(e7,x_41)*step(x_41,e8))))))));}vec4 bluered(float x_23){const float e0=0.0;const vec4 v0=vec4(0,0,1,1);const float e1=1.0;const vec4 v1=vec4(1,0,0,1);float a0=smoothstep(e0,e1,x_23);return mix(v0,v1,a0)*step(e0,x_23)*step(x_23,e1);}vec4 rdbu(float x_1){const float e0=0.0;const vec4 v0=vec4(0.0196078431372549,0.0392156862745098,0.6745098039215687,1);const float e1=0.35;const vec4 v1=vec4(0.41568627450980394,0.5372549019607843,0.9686274509803922,1);const float e2=0.5;const vec4 v2=vec4(0.7450980392156863,0.7450980392156863,0.7450980392156863,1);const float e3=0.6;const vec4 v3=vec4(0.8627450980392157,0.6666666666666666,0.5176470588235295,1);const float e4=0.7;const vec4 v4=vec4(0.9019607843137255,0.5686274509803921,0.35294117647058826,1);const float e5=1.0;const vec4 v5=vec4(0.6980392156862745,0.0392156862745098,0.10980392156862745,1);float a0=smoothstep(e0,e1,x_1);float a1=smoothstep(e1,e2,x_1);float a2=smoothstep(e2,e3,x_1);float a3=smoothstep(e3,e4,x_1);float a4=smoothstep(e4,e5,x_1);return max(mix(v0,v1,a0)*step(e0,x_1)*step(x_1,e1),max(mix(v1,v2,a1)*step(e1,x_1)*step(x_1,e2),max(mix(v2,v3,a2)*step(e2,x_1)*step(x_1,e3),max(mix(v3,v4,a3)*step(e3,x_1)*step(x_1,e4),mix(v4,v5,a4)*step(e4,x_1)*step(x_1,e5)))));}vec4 picnic(float x_42){const float e0=0.0;const vec4 v0=vec4(0,0,1,1);const float e1=0.1;const vec4 v1=vec4(0.2,0.6,1,1);const float e2=0.2;const vec4 v2=vec4(0.4,0.8,1,1);const float e3=0.3;const vec4 v3=vec4(0.6,0.8,1,1);const float e4=0.4;const vec4 v4=vec4(0.8,0.8,1,1);const float e5=0.5;const vec4 v5=vec4(1,1,1,1);const float e6=0.6;const vec4 v6=vec4(1,0.8,1,1);const float e7=0.7;const vec4 v7=vec4(1,0.6,1,1);const float e8=0.8;const vec4 v8=vec4(1,0.4,0.8,1);const float e9=0.9;const vec4 v9=vec4(1,0.4,0.4,1);const float e10=1.0;const vec4 v10=vec4(1,0,0,1);float a0=smoothstep(e0,e1,x_42);float a1=smoothstep(e1,e2,x_42);float a2=smoothstep(e2,e3,x_42);float a3=smoothstep(e3,e4,x_42);float a4=smoothstep(e4,e5,x_42);float a5=smoothstep(e5,e6,x_42);float a6=smoothstep(e6,e7,x_42);float a7=smoothstep(e7,e8,x_42);float a8=smoothstep(e8,e9,x_42);float a9=smoothstep(e9,e10,x_42);return max(mix(v0,v1,a0)*step(e0,x_42)*step(x_42,e1),max(mix(v1,v2,a1)*step(e1,x_42)*step(x_42,e2),max(mix(v2,v3,a2)*step(e2,x_42)*step(x_42,e3),max(mix(v3,v4,a3)*step(e3,x_42)*step(x_42,e4),max(mix(v4,v5,a4)*step(e4,x_42)*step(x_42,e5),max(mix(v5,v6,a5)*step(e5,x_42)*step(x_42,e6),max(mix(v6,v7,a6)*step(e6,x_42)*step(x_42,e7),max(mix(v7,v8,a7)*step(e7,x_42)*step(x_42,e8),max(mix(v8,v9,a8)*step(e8,x_42)*step(x_42,e9),mix(v9,v10,a9)*step(e9,x_42)*step(x_42,e10))))))))));}vec4 rainbow(float x_31){const float e0=0.0;const vec4 v0=vec4(0.5882352941176471,0,0.35294117647058826,1);const float e1=0.125;const vec4 v1=vec4(0,0,0.7843137254901961,1);const float e2=0.25;const vec4 v2=vec4(0,0.09803921568627451,1,1);const float e3=0.375;const vec4 v3=vec4(0,0.596078431372549,1,1);const float e4=0.5;const vec4 v4=vec4(0.17254901960784313,1,0.5882352941176471,1);const float e5=0.625;const vec4 v5=vec4(0.592156862745098,1,0,1);const float e6=0.75;const vec4 v6=vec4(1,0.9176470588235294,0,1);const float e7=0.875;const vec4 v7=vec4(1,0.43529411764705883,0,1);const float e8=1.0;const vec4 v8=vec4(1,0,0,1);float a0=smoothstep(e0,e1,x_31);float a1=smoothstep(e1,e2,x_31);float a2=smoothstep(e2,e3,x_31);float a3=smoothstep(e3,e4,x_31);float a4=smoothstep(e4,e5,x_31);float a5=smoothstep(e5,e6,x_31);float a6=smoothstep(e6,e7,x_31);float a7=smoothstep(e7,e8,x_31);return max(mix(v0,v1,a0)*step(e0,x_31)*step(x_31,e1),max(mix(v1,v2,a1)*step(e1,x_31)*step(x_31,e2),max(mix(v2,v3,a2)*step(e2,x_31)*step(x_31,e3),max(mix(v3,v4,a3)*step(e3,x_31)*step(x_31,e4),max(mix(v4,v5,a4)*step(e4,x_31)*step(x_31,e5),max(mix(v5,v6,a5)*step(e5,x_31)*step(x_31,e6),max(mix(v6,v7,a6)*step(e6,x_31)*step(x_31,e7),mix(v7,v8,a7)*step(e7,x_31)*step(x_31,e8))))))));}vec4 portland(float x_21){const float e0=0.0;const vec4 v0=vec4(0.047058823529411764,0.2,0.5137254901960784,1);const float e1=0.25;const vec4 v1=vec4(0.0392156862745098,0.5333333333333333,0.7294117647058823,1);const float e2=0.5;const vec4 v2=vec4(0.9490196078431372,0.8274509803921568,0.2196078431372549,1);const float e3=0.75;const vec4 v3=vec4(0.9490196078431372,0.5607843137254902,0.2196078431372549,1);const float e4=1.0;const vec4 v4=vec4(0.8509803921568627,0.11764705882352941,0.11764705882352941,1);float a0=smoothstep(e0,e1,x_21);float a1=smoothstep(e1,e2,x_21);float a2=smoothstep(e2,e3,x_21);float a3=smoothstep(e3,e4,x_21);return max(mix(v0,v1,a0)*step(e0,x_21)*step(x_21,e1),max(mix(v1,v2,a1)*step(e1,x_21)*step(x_21,e2),max(mix(v2,v3,a2)*step(e2,x_21)*step(x_21,e3),mix(v3,v4,a3)*step(e3,x_21)*step(x_21,e4))));}vec4 blackbody(float x_38){const float e0=0.0;const vec4 v0=vec4(0,0,0,1);const float e1=0.2;const vec4 v1=vec4(0.9019607843137255,0,0,1);const float e2=0.4;const vec4 v2=vec4(0.9019607843137255,0.8235294117647058,0,1);const float e3=0.7;const vec4 v3=vec4(1,1,1,1);const float e4=1.0;const vec4 v4=vec4(0.6274509803921569,0.7843137254901961,1,1);float a0=smoothstep(e0,e1,x_38);float a1=smoothstep(e1,e2,x_38);float a2=smoothstep(e2,e3,x_38);float a3=smoothstep(e3,e4,x_38);return max(mix(v0,v1,a0)*step(e0,x_38)*step(x_38,e1),max(mix(v1,v2,a1)*step(e1,x_38)*step(x_38,e2),max(mix(v2,v3,a2)*step(e2,x_38)*step(x_38,e3),mix(v3,v4,a3)*step(e3,x_38)*step(x_38,e4))));}vec4 earth(float x_29){const float e0=0.0;const vec4 v0=vec4(0,0,0.5098039215686274,1);const float e1=0.1;const vec4 v1=vec4(0,0.7058823529411765,0.7058823529411765,1);const float e2=0.2;const vec4 v2=vec4(0.1568627450980392,0.8235294117647058,0.1568627450980392,1);const float e3=0.4;const vec4 v3=vec4(0.9019607843137255,0.9019607843137255,0.19607843137254902,1);const float e4=0.6;const vec4 v4=vec4(0.47058823529411764,0.27450980392156865,0.0784313725490196,1);const float e5=1.0;const vec4 v5=vec4(1,1,1,1);float a0=smoothstep(e0,e1,x_29);float a1=smoothstep(e1,e2,x_29);float a2=smoothstep(e2,e3,x_29);float a3=smoothstep(e3,e4,x_29);float a4=smoothstep(e4,e5,x_29);return max(mix(v0,v1,a0)*step(e0,x_29)*step(x_29,e1),max(mix(v1,v2,a1)*step(e1,x_29)*step(x_29,e2),max(mix(v2,v3,a2)*step(e2,x_29)*step(x_29,e3),max(mix(v3,v4,a3)*step(e3,x_29)*step(x_29,e4),mix(v4,v5,a4)*step(e4,x_29)*step(x_29,e5)))));}vec4 electric(float x_9){const float e0=0.0;const vec4 v0=vec4(0,0,0,1);const float e1=0.15;const vec4 v1=vec4(0.11764705882352941,0,0.39215686274509803,1);const float e2=0.4;const vec4 v2=vec4(0.47058823529411764,0,0.39215686274509803,1);const float e3=0.6;const vec4 v3=vec4(0.6274509803921569,0.35294117647058826,0,1);const float e4=0.8;const vec4 v4=vec4(0.9019607843137255,0.7843137254901961,0,1);const float e5=1.0;const vec4 v5=vec4(1,0.9803921568627451,0.8627450980392157,1);float a0=smoothstep(e0,e1,x_9);float a1=smoothstep(e1,e2,x_9);float a2=smoothstep(e2,e3,x_9);float a3=smoothstep(e3,e4,x_9);float a4=smoothstep(e4,e5,x_9);return max(mix(v0,v1,a0)*step(e0,x_9)*step(x_9,e1),max(mix(v1,v2,a1)*step(e1,x_9)*step(x_9,e2),max(mix(v2,v3,a2)*step(e2,x_9)*step(x_9,e3),max(mix(v3,v4,a3)*step(e3,x_9)*step(x_9,e4),mix(v4,v5,a4)*step(e4,x_9)*step(x_9,e5)))));}vec4 alpha(float x_0){const float e0=0.0;const vec4 v0=vec4(1,1,1,0);const float e1=1.0;const vec4 v1=vec4(1,1,1,1);float a0=smoothstep(e0,e1,x_0);return mix(v0,v1,a0)*step(e0,x_0)*step(x_0,e1);}vec4 viridis(float x_22){const float e0=0.0;const vec4 v0=vec4(0.26666666666666666,0.00392156862745098,0.32941176470588235,1);const float e1=0.13;const vec4 v1=vec4(0.2784313725490196,0.17254901960784313,0.47843137254901963,1);const float e2=0.25;const vec4 v2=vec4(0.23137254901960785,0.3176470588235294,0.5450980392156862,1);const float e3=0.38;const vec4 v3=vec4(0.17254901960784313,0.44313725490196076,0.5568627450980392,1);const float e4=0.5;const vec4 v4=vec4(0.12941176470588237,0.5647058823529412,0.5529411764705883,1);const float e5=0.63;const vec4 v5=vec4(0.15294117647058825,0.6784313725490196,0.5058823529411764,1);const float e6=0.75;const vec4 v6=vec4(0.3607843137254902,0.7843137254901961,0.38823529411764707,1);const float e7=0.88;const vec4 v7=vec4(0.6666666666666666,0.8627450980392157,0.19607843137254902,1);const float e8=1.0;const vec4 v8=vec4(0.9921568627450981,0.9058823529411765,0.1450980392156863,1);float a0=smoothstep(e0,e1,x_22);float a1=smoothstep(e1,e2,x_22);float a2=smoothstep(e2,e3,x_22);float a3=smoothstep(e3,e4,x_22);float a4=smoothstep(e4,e5,x_22);float a5=smoothstep(e5,e6,x_22);float a6=smoothstep(e6,e7,x_22);float a7=smoothstep(e7,e8,x_22);return max(mix(v0,v1,a0)*step(e0,x_22)*step(x_22,e1),max(mix(v1,v2,a1)*step(e1,x_22)*step(x_22,e2),max(mix(v2,v3,a2)*step(e2,x_22)*step(x_22,e3),max(mix(v3,v4,a3)*step(e3,x_22)*step(x_22,e4),max(mix(v4,v5,a4)*step(e4,x_22)*step(x_22,e5),max(mix(v5,v6,a5)*step(e5,x_22)*step(x_22,e6),max(mix(v6,v7,a6)*step(e6,x_22)*step(x_22,e7),mix(v7,v8,a7)*step(e7,x_22)*step(x_22,e8))))))));}vec4 inferno(float x_30){const float e0=0.0;const vec4 v0=vec4(0,0,0.01568627450980392,1);const float e1=0.13;const vec4 v1=vec4(0.12156862745098039,0.047058823529411764,0.2823529411764706,1);const float e2=0.25;const vec4 v2=vec4(0.3333333333333333,0.058823529411764705,0.42745098039215684,1);const float e3=0.38;const vec4 v3=vec4(0.5333333333333333,0.13333333333333333,0.41568627450980394,1);const float e4=0.5;const vec4 v4=vec4(0.7294117647058823,0.21176470588235294,0.3333333333333333,1);const float e5=0.63;const vec4 v5=vec4(0.8901960784313725,0.34901960784313724,0.2,1);const float e6=0.75;const vec4 v6=vec4(0.9764705882352941,0.5490196078431373,0.0392156862745098,1);const float e7=0.88;const vec4 v7=vec4(0.9764705882352941,0.788235294117647,0.19607843137254902,1);const float e8=1.0;const vec4 v8=vec4(0.9882352941176471,1,0.6431372549019608,1);float a0=smoothstep(e0,e1,x_30);float a1=smoothstep(e1,e2,x_30);float a2=smoothstep(e2,e3,x_30);float a3=smoothstep(e3,e4,x_30);float a4=smoothstep(e4,e5,x_30);float a5=smoothstep(e5,e6,x_30);float a6=smoothstep(e6,e7,x_30);float a7=smoothstep(e7,e8,x_30);return max(mix(v0,v1,a0)*step(e0,x_30)*step(x_30,e1),max(mix(v1,v2,a1)*step(e1,x_30)*step(x_30,e2),max(mix(v2,v3,a2)*step(e2,x_30)*step(x_30,e3),max(mix(v3,v4,a3)*step(e3,x_30)*step(x_30,e4),max(mix(v4,v5,a4)*step(e4,x_30)*step(x_30,e5),max(mix(v5,v6,a5)*step(e5,x_30)*step(x_30,e6),max(mix(v6,v7,a6)*step(e6,x_30)*step(x_30,e7),mix(v7,v8,a7)*step(e7,x_30)*step(x_30,e8))))))));}vec4 magma(float x_33){const float e0=0.0;const vec4 v0=vec4(0,0,0.01568627450980392,1);const float e1=0.13;const vec4 v1=vec4(0.10980392156862745,0.06274509803921569,0.26666666666666666,1);const float e2=0.25;const vec4 v2=vec4(0.30980392156862746,0.07058823529411765,0.4823529411764706,1);const float e3=0.38;const vec4 v3=vec4(0.5058823529411764,0.1450980392156863,0.5058823529411764,1);const float e4=0.5;const vec4 v4=vec4(0.7098039215686275,0.21176470588235294,0.47843137254901963,1);const float e5=0.63;const vec4 v5=vec4(0.8980392156862745,0.3137254901960784,0.39215686274509803,1);const float e6=0.75;const vec4 v6=vec4(0.984313725490196,0.5294117647058824,0.3803921568627451,1);const float e7=0.88;const vec4 v7=vec4(0.996078431372549,0.7607843137254902,0.5294117647058824,1);const float e8=1.0;const vec4 v8=vec4(0.9882352941176471,0.9921568627450981,0.7490196078431373,1);float a0=smoothstep(e0,e1,x_33);float a1=smoothstep(e1,e2,x_33);float a2=smoothstep(e2,e3,x_33);float a3=smoothstep(e3,e4,x_33);float a4=smoothstep(e4,e5,x_33);float a5=smoothstep(e5,e6,x_33);float a6=smoothstep(e6,e7,x_33);float a7=smoothstep(e7,e8,x_33);return max(mix(v0,v1,a0)*step(e0,x_33)*step(x_33,e1),max(mix(v1,v2,a1)*step(e1,x_33)*step(x_33,e2),max(mix(v2,v3,a2)*step(e2,x_33)*step(x_33,e3),max(mix(v3,v4,a3)*step(e3,x_33)*step(x_33,e4),max(mix(v4,v5,a4)*step(e4,x_33)*step(x_33,e5),max(mix(v5,v6,a5)*step(e5,x_33)*step(x_33,e6),max(mix(v6,v7,a6)*step(e6,x_33)*step(x_33,e7),mix(v7,v8,a7)*step(e7,x_33)*step(x_33,e8))))))));}vec4 plasma(float x_3){const float e0=0.0;const vec4 v0=vec4(0.050980392156862744,0.03137254901960784,0.5294117647058824,1);const float e1=0.13;const vec4 v1=vec4(0.29411764705882354,0.011764705882352941,0.6313725490196078,1);const float e2=0.25;const vec4 v2=vec4(0.49019607843137253,0.011764705882352941,0.6588235294117647,1);const float e3=0.38;const vec4 v3=vec4(0.6588235294117647,0.13333333333333333,0.5882352941176471,1);const float e4=0.5;const vec4 v4=vec4(0.796078431372549,0.27450980392156865,0.4745098039215686,1);const float e5=0.63;const vec4 v5=vec4(0.8980392156862745,0.4196078431372549,0.36470588235294116,1);const float e6=0.75;const vec4 v6=vec4(0.9725490196078431,0.5803921568627451,0.2549019607843137,1);const float e7=0.88;const vec4 v7=vec4(0.9921568627450981,0.7647058823529411,0.1568627450980392,1);const float e8=1.0;const vec4 v8=vec4(0.9411764705882353,0.9764705882352941,0.12941176470588237,1);float a0=smoothstep(e0,e1,x_3);float a1=smoothstep(e1,e2,x_3);float a2=smoothstep(e2,e3,x_3);float a3=smoothstep(e3,e4,x_3);float a4=smoothstep(e4,e5,x_3);float a5=smoothstep(e5,e6,x_3);float a6=smoothstep(e6,e7,x_3);float a7=smoothstep(e7,e8,x_3);return max(mix(v0,v1,a0)*step(e0,x_3)*step(x_3,e1),max(mix(v1,v2,a1)*step(e1,x_3)*step(x_3,e2),max(mix(v2,v3,a2)*step(e2,x_3)*step(x_3,e3),max(mix(v3,v4,a3)*step(e3,x_3)*step(x_3,e4),max(mix(v4,v5,a4)*step(e4,x_3)*step(x_3,e5),max(mix(v5,v6,a5)*step(e5,x_3)*step(x_3,e6),max(mix(v6,v7,a6)*step(e6,x_3)*step(x_3,e7),mix(v7,v8,a7)*step(e7,x_3)*step(x_3,e8))))))));}vec4 warm(float x_43){const float e0=0.0;const vec4 v0=vec4(0.49019607843137253,0,0.7019607843137254,1);const float e1=0.13;const vec4 v1=vec4(0.6745098039215687,0,0.7333333333333333,1);const float e2=0.25;const vec4 v2=vec4(0.8588235294117647,0,0.6666666666666666,1);const float e3=0.38;const vec4 v3=vec4(1,0,0.5098039215686274,1);const float e4=0.5;const vec4 v4=vec4(1,0.24705882352941178,0.2901960784313726,1);const float e5=0.63;const vec4 v5=vec4(1,0.4823529411764706,0,1);const float e6=0.75;const vec4 v6=vec4(0.9176470588235294,0.6901960784313725,0,1);const float e7=0.88;const vec4 v7=vec4(0.7450980392156863,0.8941176470588236,0,1);const float e8=1.0;const vec4 v8=vec4(0.5764705882352941,1,0,1);float a0=smoothstep(e0,e1,x_43);float a1=smoothstep(e1,e2,x_43);float a2=smoothstep(e2,e3,x_43);float a3=smoothstep(e3,e4,x_43);float a4=smoothstep(e4,e5,x_43);float a5=smoothstep(e5,e6,x_43);float a6=smoothstep(e6,e7,x_43);float a7=smoothstep(e7,e8,x_43);return max(mix(v0,v1,a0)*step(e0,x_43)*step(x_43,e1),max(mix(v1,v2,a1)*step(e1,x_43)*step(x_43,e2),max(mix(v2,v3,a2)*step(e2,x_43)*step(x_43,e3),max(mix(v3,v4,a3)*step(e3,x_43)*step(x_43,e4),max(mix(v4,v5,a4)*step(e4,x_43)*step(x_43,e5),max(mix(v5,v6,a5)*step(e5,x_43)*step(x_43,e6),max(mix(v6,v7,a6)*step(e6,x_43)*step(x_43,e7),mix(v7,v8,a7)*step(e7,x_43)*step(x_43,e8))))))));}vec4 rainbow_soft_1310269270(float x_14){const float e0=0.0;const vec4 v0=vec4(0.49019607843137253,0,0.7019607843137254,1);const float e1=0.1;const vec4 v1=vec4(0.7803921568627451,0,0.7058823529411765,1);const float e2=0.2;const vec4 v2=vec4(1,0,0.4745098039215686,1);const float e3=0.3;const vec4 v3=vec4(1,0.4235294117647059,0,1);const float e4=0.4;const vec4 v4=vec4(0.8705882352941177,0.7607843137254902,0,1);const float e5=0.5;const vec4 v5=vec4(0.5882352941176471,1,0,1);const float e6=0.6;const vec4 v6=vec4(0,1,0.21568627450980393,1);const float e7=0.7;const vec4 v7=vec4(0,0.9647058823529412,0.5882352941176471,1);const float e8=0.8;const vec4 v8=vec4(0.19607843137254902,0.6549019607843137,0.8705882352941177,1);const float e9=0.9;const vec4 v9=vec4(0.403921568627451,0.2,0.9215686274509803,1);const float e10=1.0;const vec4 v10=vec4(0.48627450980392156,0,0.7294117647058823,1);float a0=smoothstep(e0,e1,x_14);float a1=smoothstep(e1,e2,x_14);float a2=smoothstep(e2,e3,x_14);float a3=smoothstep(e3,e4,x_14);float a4=smoothstep(e4,e5,x_14);float a5=smoothstep(e5,e6,x_14);float a6=smoothstep(e6,e7,x_14);float a7=smoothstep(e7,e8,x_14);float a8=smoothstep(e8,e9,x_14);float a9=smoothstep(e9,e10,x_14);return max(mix(v0,v1,a0)*step(e0,x_14)*step(x_14,e1),max(mix(v1,v2,a1)*step(e1,x_14)*step(x_14,e2),max(mix(v2,v3,a2)*step(e2,x_14)*step(x_14,e3),max(mix(v3,v4,a3)*step(e3,x_14)*step(x_14,e4),max(mix(v4,v5,a4)*step(e4,x_14)*step(x_14,e5),max(mix(v5,v6,a5)*step(e5,x_14)*step(x_14,e6),max(mix(v6,v7,a6)*step(e6,x_14)*step(x_14,e7),max(mix(v7,v8,a7)*step(e7,x_14)*step(x_14,e8),max(mix(v8,v9,a8)*step(e8,x_14)*step(x_14,e9),mix(v9,v10,a9)*step(e9,x_14)*step(x_14,e10))))))))));}vec4 bathymetry(float x_36){const float e0=0.0;const vec4 v0=vec4(0.1568627450980392,0.10196078431372549,0.17254901960784313,1);const float e1=0.13;const vec4 v1=vec4(0.23137254901960785,0.19215686274509805,0.35294117647058826,1);const float e2=0.25;const vec4 v2=vec4(0.25098039215686274,0.2980392156862745,0.5450980392156862,1);const float e3=0.38;const vec4 v3=vec4(0.24705882352941178,0.43137254901960786,0.592156862745098,1);const float e4=0.5;const vec4 v4=vec4(0.2823529411764706,0.5568627450980392,0.6196078431372549,1);const float e5=0.63;const vec4 v5=vec4(0.3333333333333333,0.6823529411764706,0.6392156862745098,1);const float e6=0.75;const vec4 v6=vec4(0.47058823529411764,0.807843137254902,0.6392156862745098,1);const float e7=0.88;const vec4 v7=vec4(0.7333333333333333,0.9019607843137255,0.6745098039215687,1);const float e8=1.0;const vec4 v8=vec4(0.9921568627450981,0.996078431372549,0.8,1);float a0=smoothstep(e0,e1,x_36);float a1=smoothstep(e1,e2,x_36);float a2=smoothstep(e2,e3,x_36);float a3=smoothstep(e3,e4,x_36);float a4=smoothstep(e4,e5,x_36);float a5=smoothstep(e5,e6,x_36);float a6=smoothstep(e6,e7,x_36);float a7=smoothstep(e7,e8,x_36);return max(mix(v0,v1,a0)*step(e0,x_36)*step(x_36,e1),max(mix(v1,v2,a1)*step(e1,x_36)*step(x_36,e2),max(mix(v2,v3,a2)*step(e2,x_36)*step(x_36,e3),max(mix(v3,v4,a3)*step(e3,x_36)*step(x_36,e4),max(mix(v4,v5,a4)*step(e4,x_36)*step(x_36,e5),max(mix(v5,v6,a5)*step(e5,x_36)*step(x_36,e6),max(mix(v6,v7,a6)*step(e6,x_36)*step(x_36,e7),mix(v7,v8,a7)*step(e7,x_36)*step(x_36,e8))))))));}vec4 cdom(float x_7){const float e0=0.0;const vec4 v0=vec4(0.1843137254901961,0.058823529411764705,0.24313725490196078,1);const float e1=0.13;const vec4 v1=vec4(0.3411764705882353,0.09019607843137255,0.33725490196078434,1);const float e2=0.25;const vec4 v2=vec4(0.5098039215686274,0.10980392156862745,0.38823529411764707,1);const float e3=0.38;const vec4 v3=vec4(0.6705882352941176,0.1607843137254902,0.3764705882352941,1);const float e4=0.5;const vec4 v4=vec4(0.807843137254902,0.2627450980392157,0.33725490196078434,1);const float e5=0.63;const vec4 v5=vec4(0.9019607843137255,0.41568627450980394,0.32941176470588235,1);const float e6=0.75;const vec4 v6=vec4(0.9490196078431372,0.5843137254901961,0.403921568627451,1);const float e7=0.88;const vec4 v7=vec4(0.9764705882352941,0.7568627450980392,0.5294117647058824,1);const float e8=1.0;const vec4 v8=vec4(0.996078431372549,0.9294117647058824,0.6901960784313725,1);float a0=smoothstep(e0,e1,x_7);float a1=smoothstep(e1,e2,x_7);float a2=smoothstep(e2,e3,x_7);float a3=smoothstep(e3,e4,x_7);float a4=smoothstep(e4,e5,x_7);float a5=smoothstep(e5,e6,x_7);float a6=smoothstep(e6,e7,x_7);float a7=smoothstep(e7,e8,x_7);return max(mix(v0,v1,a0)*step(e0,x_7)*step(x_7,e1),max(mix(v1,v2,a1)*step(e1,x_7)*step(x_7,e2),max(mix(v2,v3,a2)*step(e2,x_7)*step(x_7,e3),max(mix(v3,v4,a3)*step(e3,x_7)*step(x_7,e4),max(mix(v4,v5,a4)*step(e4,x_7)*step(x_7,e5),max(mix(v5,v6,a5)*step(e5,x_7)*step(x_7,e6),max(mix(v6,v7,a6)*step(e6,x_7)*step(x_7,e7),mix(v7,v8,a7)*step(e7,x_7)*step(x_7,e8))))))));}vec4 chlorophyll(float x_6){const float e0=0.0;const vec4 v0=vec4(0.07058823529411765,0.1411764705882353,0.0784313725490196,1);const float e1=0.13;const vec4 v1=vec4(0.09803921568627451,0.24705882352941178,0.1607843137254902,1);const float e2=0.25;const vec4 v2=vec4(0.09411764705882353,0.3568627450980392,0.23137254901960785,1);const float e3=0.38;const vec4 v3=vec4(0.050980392156862744,0.4666666666666667,0.2823529411764706,1);const float e4=0.5;const vec4 v4=vec4(0.07058823529411765,0.5803921568627451,0.3137254901960784,1);const float e5=0.63;const vec4 v5=vec4(0.3137254901960784,0.6784313725490196,0.34901960784313724,1);const float e6=0.75;const vec4 v6=vec4(0.5176470588235295,0.7686274509803922,0.47843137254901963,1);const float e7=0.88;const vec4 v7=vec4(0.6862745098039216,0.8666666666666667,0.6352941176470588,1);const float e8=1.0;const vec4 v8=vec4(0.8431372549019608,0.9764705882352941,0.8156862745098039,1);float a0=smoothstep(e0,e1,x_6);float a1=smoothstep(e1,e2,x_6);float a2=smoothstep(e2,e3,x_6);float a3=smoothstep(e3,e4,x_6);float a4=smoothstep(e4,e5,x_6);float a5=smoothstep(e5,e6,x_6);float a6=smoothstep(e6,e7,x_6);float a7=smoothstep(e7,e8,x_6);return max(mix(v0,v1,a0)*step(e0,x_6)*step(x_6,e1),max(mix(v1,v2,a1)*step(e1,x_6)*step(x_6,e2),max(mix(v2,v3,a2)*step(e2,x_6)*step(x_6,e3),max(mix(v3,v4,a3)*step(e3,x_6)*step(x_6,e4),max(mix(v4,v5,a4)*step(e4,x_6)*step(x_6,e5),max(mix(v5,v6,a5)*step(e5,x_6)*step(x_6,e6),max(mix(v6,v7,a6)*step(e6,x_6)*step(x_6,e7),mix(v7,v8,a7)*step(e7,x_6)*step(x_6,e8))))))));}vec4 density(float x_19){const float e0=0.0;const vec4 v0=vec4(0.21176470588235294,0.054901960784313725,0.1411764705882353,1);const float e1=0.13;const vec4 v1=vec4(0.34901960784313724,0.09019607843137255,0.3137254901960784,1);const float e2=0.25;const vec4 v2=vec4(0.43137254901960786,0.17647058823529413,0.5176470588235295,1);const float e3=0.38;const vec4 v3=vec4(0.47058823529411764,0.30196078431372547,0.6980392156862745,1);const float e4=0.5;const vec4 v4=vec4(0.47058823529411764,0.44313725490196076,0.8352941176470589,1);const float e5=0.63;const vec4 v5=vec4(0.45098039215686275,0.592156862745098,0.8941176470588236,1);const float e6=0.75;const vec4 v6=vec4(0.5254901960784314,0.7254901960784313,0.8901960784313725,1);const float e7=0.88;const vec4 v7=vec4(0.6941176470588235,0.8392156862745098,0.8901960784313725,1);const float e8=1.0;const vec4 v8=vec4(0.9019607843137255,0.9450980392156862,0.9450980392156862,1);float a0=smoothstep(e0,e1,x_19);float a1=smoothstep(e1,e2,x_19);float a2=smoothstep(e2,e3,x_19);float a3=smoothstep(e3,e4,x_19);float a4=smoothstep(e4,e5,x_19);float a5=smoothstep(e5,e6,x_19);float a6=smoothstep(e6,e7,x_19);float a7=smoothstep(e7,e8,x_19);return max(mix(v0,v1,a0)*step(e0,x_19)*step(x_19,e1),max(mix(v1,v2,a1)*step(e1,x_19)*step(x_19,e2),max(mix(v2,v3,a2)*step(e2,x_19)*step(x_19,e3),max(mix(v3,v4,a3)*step(e3,x_19)*step(x_19,e4),max(mix(v4,v5,a4)*step(e4,x_19)*step(x_19,e5),max(mix(v5,v6,a5)*step(e5,x_19)*step(x_19,e6),max(mix(v6,v7,a6)*step(e6,x_19)*step(x_19,e7),mix(v7,v8,a7)*step(e7,x_19)*step(x_19,e8))))))));}vec4 freesurface_blue_3154355989(float x_35){const float e0=0.0;const vec4 v0=vec4(0.11764705882352941,0.01568627450980392,0.43137254901960786,1);const float e1=0.13;const vec4 v1=vec4(0.1843137254901961,0.054901960784313725,0.6901960784313725,1);const float e2=0.25;const vec4 v2=vec4(0.1607843137254902,0.17647058823529413,0.9254901960784314,1);const float e3=0.38;const vec4 v3=vec4(0.09803921568627451,0.38823529411764707,0.8313725490196079,1);const float e4=0.5;const vec4 v4=vec4(0.26666666666666666,0.5137254901960784,0.7843137254901961,1);const float e5=0.63;const vec4 v5=vec4(0.4470588235294118,0.611764705882353,0.7725490196078432,1);const float e6=0.75;const vec4 v6=vec4(0.615686274509804,0.7098039215686275,0.796078431372549,1);const float e7=0.88;const vec4 v7=vec4(0.7843137254901961,0.8156862745098039,0.8470588235294118,1);const float e8=1.0;const vec4 v8=vec4(0.9450980392156862,0.9294117647058824,0.9254901960784314,1);float a0=smoothstep(e0,e1,x_35);float a1=smoothstep(e1,e2,x_35);float a2=smoothstep(e2,e3,x_35);float a3=smoothstep(e3,e4,x_35);float a4=smoothstep(e4,e5,x_35);float a5=smoothstep(e5,e6,x_35);float a6=smoothstep(e6,e7,x_35);float a7=smoothstep(e7,e8,x_35);return max(mix(v0,v1,a0)*step(e0,x_35)*step(x_35,e1),max(mix(v1,v2,a1)*step(e1,x_35)*step(x_35,e2),max(mix(v2,v3,a2)*step(e2,x_35)*step(x_35,e3),max(mix(v3,v4,a3)*step(e3,x_35)*step(x_35,e4),max(mix(v4,v5,a4)*step(e4,x_35)*step(x_35,e5),max(mix(v5,v6,a5)*step(e5,x_35)*step(x_35,e6),max(mix(v6,v7,a6)*step(e6,x_35)*step(x_35,e7),mix(v7,v8,a7)*step(e7,x_35)*step(x_35,e8))))))));}vec4 freesurface_red_1679163293(float x_20){const float e0=0.0;const vec4 v0=vec4(0.23529411764705882,0.03529411764705882,0.07058823529411765,1);const float e1=0.13;const vec4 v1=vec4(0.39215686274509803,0.06666666666666667,0.10588235294117647,1);const float e2=0.25;const vec4 v2=vec4(0.5568627450980392,0.0784313725490196,0.11372549019607843,1);const float e3=0.38;const vec4 v3=vec4(0.6941176470588235,0.16862745098039217,0.10588235294117647,1);const float e4=0.5;const vec4 v4=vec4(0.7529411764705882,0.3411764705882353,0.24705882352941178,1);const float e5=0.63;const vec4 v5=vec4(0.803921568627451,0.49019607843137253,0.4117647058823529,1);const float e6=0.75;const vec4 v6=vec4(0.8470588235294118,0.6352941176470588,0.5803921568627451,1);const float e7=0.88;const vec4 v7=vec4(0.8901960784313725,0.7803921568627451,0.7568627450980392,1);const float e8=1.0;const vec4 v8=vec4(0.9450980392156862,0.9294117647058824,0.9254901960784314,1);float a0=smoothstep(e0,e1,x_20);float a1=smoothstep(e1,e2,x_20);float a2=smoothstep(e2,e3,x_20);float a3=smoothstep(e3,e4,x_20);float a4=smoothstep(e4,e5,x_20);float a5=smoothstep(e5,e6,x_20);float a6=smoothstep(e6,e7,x_20);float a7=smoothstep(e7,e8,x_20);return max(mix(v0,v1,a0)*step(e0,x_20)*step(x_20,e1),max(mix(v1,v2,a1)*step(e1,x_20)*step(x_20,e2),max(mix(v2,v3,a2)*step(e2,x_20)*step(x_20,e3),max(mix(v3,v4,a3)*step(e3,x_20)*step(x_20,e4),max(mix(v4,v5,a4)*step(e4,x_20)*step(x_20,e5),max(mix(v5,v6,a5)*step(e5,x_20)*step(x_20,e6),max(mix(v6,v7,a6)*step(e6,x_20)*step(x_20,e7),mix(v7,v8,a7)*step(e7,x_20)*step(x_20,e8))))))));}vec4 oxygen(float x_11){const float e0=0.0;const vec4 v0=vec4(0.25098039215686274,0.0196078431372549,0.0196078431372549,1);const float e1=0.13;const vec4 v1=vec4(0.41568627450980394,0.023529411764705882,0.058823529411764705,1);const float e2=0.25;const vec4 v2=vec4(0.5647058823529412,0.10196078431372549,0.027450980392156862,1);const float e3=0.38;const vec4 v3=vec4(0.6588235294117647,0.25098039215686274,0.011764705882352941,1);const float e4=0.5;const vec4 v4=vec4(0.7372549019607844,0.39215686274509803,0.01568627450980392,1);const float e5=0.63;const vec4 v5=vec4(0.807843137254902,0.5333333333333333,0.043137254901960784,1);const float e6=0.75;const vec4 v6=vec4(0.8627450980392157,0.6823529411764706,0.09803921568627451,1);const float e7=0.88;const vec4 v7=vec4(0.9058823529411765,0.8431372549019608,0.17254901960784313,1);const float e8=1.0;const vec4 v8=vec4(0.9725490196078431,0.996078431372549,0.4117647058823529,1);float a0=smoothstep(e0,e1,x_11);float a1=smoothstep(e1,e2,x_11);float a2=smoothstep(e2,e3,x_11);float a3=smoothstep(e3,e4,x_11);float a4=smoothstep(e4,e5,x_11);float a5=smoothstep(e5,e6,x_11);float a6=smoothstep(e6,e7,x_11);float a7=smoothstep(e7,e8,x_11);return max(mix(v0,v1,a0)*step(e0,x_11)*step(x_11,e1),max(mix(v1,v2,a1)*step(e1,x_11)*step(x_11,e2),max(mix(v2,v3,a2)*step(e2,x_11)*step(x_11,e3),max(mix(v3,v4,a3)*step(e3,x_11)*step(x_11,e4),max(mix(v4,v5,a4)*step(e4,x_11)*step(x_11,e5),max(mix(v5,v6,a5)*step(e5,x_11)*step(x_11,e6),max(mix(v6,v7,a6)*step(e6,x_11)*step(x_11,e7),mix(v7,v8,a7)*step(e7,x_11)*step(x_11,e8))))))));}vec4 par(float x_28){const float e0=0.0;const vec4 v0=vec4(0.2,0.0784313725490196,0.09411764705882353,1);const float e1=0.13;const vec4 v1=vec4(0.35294117647058826,0.12549019607843137,0.13725490196078433,1);const float e2=0.25;const vec4 v2=vec4(0.5058823529411764,0.17254901960784313,0.13333333333333333,1);const float e3=0.38;const vec4 v3=vec4(0.6235294117647059,0.26666666666666666,0.09803921568627451,1);const float e4=0.5;const vec4 v4=vec4(0.7137254901960784,0.38823529411764707,0.07450980392156863,1);const float e5=0.63;const vec4 v5=vec4(0.7803921568627451,0.5254901960784314,0.08627450980392157,1);const float e6=0.75;const vec4 v6=vec4(0.8313725490196079,0.6705882352941176,0.13725490196078433,1);const float e7=0.88;const vec4 v7=vec4(0.8666666666666667,0.8235294117647058,0.21176470588235294,1);const float e8=1.0;const vec4 v8=vec4(0.8823529411764706,0.9921568627450981,0.29411764705882354,1);float a0=smoothstep(e0,e1,x_28);float a1=smoothstep(e1,e2,x_28);float a2=smoothstep(e2,e3,x_28);float a3=smoothstep(e3,e4,x_28);float a4=smoothstep(e4,e5,x_28);float a5=smoothstep(e5,e6,x_28);float a6=smoothstep(e6,e7,x_28);float a7=smoothstep(e7,e8,x_28);return max(mix(v0,v1,a0)*step(e0,x_28)*step(x_28,e1),max(mix(v1,v2,a1)*step(e1,x_28)*step(x_28,e2),max(mix(v2,v3,a2)*step(e2,x_28)*step(x_28,e3),max(mix(v3,v4,a3)*step(e3,x_28)*step(x_28,e4),max(mix(v4,v5,a4)*step(e4,x_28)*step(x_28,e5),max(mix(v5,v6,a5)*step(e5,x_28)*step(x_28,e6),max(mix(v6,v7,a6)*step(e6,x_28)*step(x_28,e7),mix(v7,v8,a7)*step(e7,x_28)*step(x_28,e8))))))));}vec4 phase(float x_39){const float e0=0.0;const vec4 v0=vec4(0.5686274509803921,0.4117647058823529,0.07058823529411765,1);const float e1=0.13;const vec4 v1=vec4(0.7215686274509804,0.2784313725490196,0.14901960784313725,1);const float e2=0.25;const vec4 v2=vec4(0.7294117647058823,0.22745098039215686,0.45098039215686275,1);const float e3=0.38;const vec4 v3=vec4(0.6274509803921569,0.2784313725490196,0.7254901960784313,1);const float e4=0.5;const vec4 v4=vec4(0.43137254901960786,0.3803921568627451,0.8549019607843137,1);const float e5=0.63;const vec4 v5=vec4(0.19607843137254902,0.4823529411764706,0.6431372549019608,1);const float e6=0.75;const vec4 v6=vec4(0.12156862745098039,0.5137254901960784,0.43137254901960786,1);const float e7=0.88;const vec4 v7=vec4(0.30196078431372547,0.5058823529411764,0.13333333333333333,1);const float e8=1.0;const vec4 v8=vec4(0.5686274509803921,0.4117647058823529,0.07058823529411765,1);float a0=smoothstep(e0,e1,x_39);float a1=smoothstep(e1,e2,x_39);float a2=smoothstep(e2,e3,x_39);float a3=smoothstep(e3,e4,x_39);float a4=smoothstep(e4,e5,x_39);float a5=smoothstep(e5,e6,x_39);float a6=smoothstep(e6,e7,x_39);float a7=smoothstep(e7,e8,x_39);return max(mix(v0,v1,a0)*step(e0,x_39)*step(x_39,e1),max(mix(v1,v2,a1)*step(e1,x_39)*step(x_39,e2),max(mix(v2,v3,a2)*step(e2,x_39)*step(x_39,e3),max(mix(v3,v4,a3)*step(e3,x_39)*step(x_39,e4),max(mix(v4,v5,a4)*step(e4,x_39)*step(x_39,e5),max(mix(v5,v6,a5)*step(e5,x_39)*step(x_39,e6),max(mix(v6,v7,a6)*step(e6,x_39)*step(x_39,e7),mix(v7,v8,a7)*step(e7,x_39)*step(x_39,e8))))))));}vec4 salinity(float x_26){const float e0=0.0;const vec4 v0=vec4(0.16470588235294117,0.09411764705882353,0.4235294117647059,1);const float e1=0.13;const vec4 v1=vec4(0.12941176470588237,0.19607843137254902,0.6352941176470588,1);const float e2=0.25;const vec4 v2=vec4(0.058823529411764705,0.35294117647058826,0.5686274509803921,1);const float e3=0.38;const vec4 v3=vec4(0.1568627450980392,0.4627450980392157,0.5372549019607843,1);const float e4=0.5;const vec4 v4=vec4(0.23137254901960785,0.5725490196078431,0.5294117647058824,1);const float e5=0.63;const vec4 v5=vec4(0.30980392156862746,0.6862745098039216,0.49411764705882355,1);const float e6=0.75;const vec4 v6=vec4(0.47058823529411764,0.796078431372549,0.40784313725490196,1);const float e7=0.88;const vec4 v7=vec4(0.7568627450980392,0.8666666666666667,0.39215686274509803,1);const float e8=1.0;const vec4 v8=vec4(0.9921568627450981,0.9372549019607843,0.6039215686274509,1);float a0=smoothstep(e0,e1,x_26);float a1=smoothstep(e1,e2,x_26);float a2=smoothstep(e2,e3,x_26);float a3=smoothstep(e3,e4,x_26);float a4=smoothstep(e4,e5,x_26);float a5=smoothstep(e5,e6,x_26);float a6=smoothstep(e6,e7,x_26);float a7=smoothstep(e7,e8,x_26);return max(mix(v0,v1,a0)*step(e0,x_26)*step(x_26,e1),max(mix(v1,v2,a1)*step(e1,x_26)*step(x_26,e2),max(mix(v2,v3,a2)*step(e2,x_26)*step(x_26,e3),max(mix(v3,v4,a3)*step(e3,x_26)*step(x_26,e4),max(mix(v4,v5,a4)*step(e4,x_26)*step(x_26,e5),max(mix(v5,v6,a5)*step(e5,x_26)*step(x_26,e6),max(mix(v6,v7,a6)*step(e6,x_26)*step(x_26,e7),mix(v7,v8,a7)*step(e7,x_26)*step(x_26,e8))))))));}vec4 temperature(float x_8){const float e0=0.0;const vec4 v0=vec4(0.01568627450980392,0.13725490196078433,0.2,1);const float e1=0.13;const vec4 v1=vec4(0.09019607843137255,0.2,0.47843137254901963,1);const float e2=0.25;const vec4 v2=vec4(0.3333333333333333,0.23137254901960785,0.615686274509804,1);const float e3=0.38;const vec4 v3=vec4(0.5058823529411764,0.30980392156862746,0.5607843137254902,1);const float e4=0.5;const vec4 v4=vec4(0.6862745098039216,0.37254901960784315,0.5098039215686274,1);const float e5=0.63;const vec4 v5=vec4(0.8705882352941177,0.4392156862745098,0.396078431372549,1);const float e6=0.75;const vec4 v6=vec4(0.9764705882352941,0.5725490196078431,0.25882352941176473,1);const float e7=0.88;const vec4 v7=vec4(0.9764705882352941,0.7686274509803922,0.2549019607843137,1);const float e8=1.0;const vec4 v8=vec4(0.9098039215686274,0.9803921568627451,0.3568627450980392,1);float a0=smoothstep(e0,e1,x_8);float a1=smoothstep(e1,e2,x_8);float a2=smoothstep(e2,e3,x_8);float a3=smoothstep(e3,e4,x_8);float a4=smoothstep(e4,e5,x_8);float a5=smoothstep(e5,e6,x_8);float a6=smoothstep(e6,e7,x_8);float a7=smoothstep(e7,e8,x_8);return max(mix(v0,v1,a0)*step(e0,x_8)*step(x_8,e1),max(mix(v1,v2,a1)*step(e1,x_8)*step(x_8,e2),max(mix(v2,v3,a2)*step(e2,x_8)*step(x_8,e3),max(mix(v3,v4,a3)*step(e3,x_8)*step(x_8,e4),max(mix(v4,v5,a4)*step(e4,x_8)*step(x_8,e5),max(mix(v5,v6,a5)*step(e5,x_8)*step(x_8,e6),max(mix(v6,v7,a6)*step(e6,x_8)*step(x_8,e7),mix(v7,v8,a7)*step(e7,x_8)*step(x_8,e8))))))));}vec4 turbidity(float x_40){const float e0=0.0;const vec4 v0=vec4(0.13333333333333333,0.12156862745098039,0.10588235294117647,1);const float e1=0.13;const vec4 v1=vec4(0.2549019607843137,0.19607843137254902,0.1607843137254902,1);const float e2=0.25;const vec4 v2=vec4(0.3843137254901961,0.27058823529411763,0.20392156862745098,1);const float e3=0.38;const vec4 v3=vec4(0.5137254901960784,0.34901960784313724,0.2235294117647059,1);const float e4=0.5;const vec4 v4=vec4(0.6313725490196078,0.4392156862745098,0.23137254901960785,1);const float e5=0.63;const vec4 v5=vec4(0.7254901960784313,0.5490196078431373,0.25882352941176473,1);const float e6=0.75;const vec4 v6=vec4(0.792156862745098,0.6823529411764706,0.34509803921568627,1);const float e7=0.88;const vec4 v7=vec4(0.8470588235294118,0.8196078431372549,0.49411764705882355,1);const float e8=1.0;const vec4 v8=vec4(0.9137254901960784,0.9647058823529412,0.6705882352941176,1);float a0=smoothstep(e0,e1,x_40);float a1=smoothstep(e1,e2,x_40);float a2=smoothstep(e2,e3,x_40);float a3=smoothstep(e3,e4,x_40);float a4=smoothstep(e4,e5,x_40);float a5=smoothstep(e5,e6,x_40);float a6=smoothstep(e6,e7,x_40);float a7=smoothstep(e7,e8,x_40);return max(mix(v0,v1,a0)*step(e0,x_40)*step(x_40,e1),max(mix(v1,v2,a1)*step(e1,x_40)*step(x_40,e2),max(mix(v2,v3,a2)*step(e2,x_40)*step(x_40,e3),max(mix(v3,v4,a3)*step(e3,x_40)*step(x_40,e4),max(mix(v4,v5,a4)*step(e4,x_40)*step(x_40,e5),max(mix(v5,v6,a5)*step(e5,x_40)*step(x_40,e6),max(mix(v6,v7,a6)*step(e6,x_40)*step(x_40,e7),mix(v7,v8,a7)*step(e7,x_40)*step(x_40,e8))))))));}vec4 velocity_blue_297387650(float x_2){const float e0=0.0;const vec4 v0=vec4(0.06666666666666667,0.12549019607843137,0.25098039215686274,1);const float e1=0.13;const vec4 v1=vec4(0.13725490196078433,0.20392156862745098,0.4549019607843137,1);const float e2=0.25;const vec4 v2=vec4(0.11372549019607843,0.3176470588235294,0.611764705882353,1);const float e3=0.38;const vec4 v3=vec4(0.12156862745098039,0.44313725490196076,0.6352941176470588,1);const float e4=0.5;const vec4 v4=vec4(0.19607843137254902,0.5647058823529412,0.6627450980392157,1);const float e5=0.63;const vec4 v5=vec4(0.3411764705882353,0.6784313725490196,0.6901960784313725,1);const float e6=0.75;const vec4 v6=vec4(0.5843137254901961,0.7686274509803922,0.7411764705882353,1);const float e7=0.88;const vec4 v7=vec4(0.796078431372549,0.8666666666666667,0.8274509803921568,1);const float e8=1.0;const vec4 v8=vec4(0.996078431372549,0.984313725490196,0.9019607843137255,1);float a0=smoothstep(e0,e1,x_2);float a1=smoothstep(e1,e2,x_2);float a2=smoothstep(e2,e3,x_2);float a3=smoothstep(e3,e4,x_2);float a4=smoothstep(e4,e5,x_2);float a5=smoothstep(e5,e6,x_2);float a6=smoothstep(e6,e7,x_2);float a7=smoothstep(e7,e8,x_2);return max(mix(v0,v1,a0)*step(e0,x_2)*step(x_2,e1),max(mix(v1,v2,a1)*step(e1,x_2)*step(x_2,e2),max(mix(v2,v3,a2)*step(e2,x_2)*step(x_2,e3),max(mix(v3,v4,a3)*step(e3,x_2)*step(x_2,e4),max(mix(v4,v5,a4)*step(e4,x_2)*step(x_2,e5),max(mix(v5,v6,a5)*step(e5,x_2)*step(x_2,e6),max(mix(v6,v7,a6)*step(e6,x_2)*step(x_2,e7),mix(v7,v8,a7)*step(e7,x_2)*step(x_2,e8))))))));}vec4 velocity_green_2558432129(float x_27){const float e0=0.0;const vec4 v0=vec4(0.09019607843137255,0.13725490196078433,0.07450980392156863,1);const float e1=0.13;const vec4 v1=vec4(0.09411764705882353,0.25098039215686274,0.14901960784313725,1);const float e2=0.25;const vec4 v2=vec4(0.043137254901960784,0.37254901960784315,0.17647058823529413,1);const float e3=0.38;const vec4 v3=vec4(0.15294117647058825,0.4823529411764706,0.13725490196078433,1);const float e4=0.5;const vec4 v4=vec4(0.37254901960784315,0.5725490196078431,0.047058823529411764,1);const float e5=0.63;const vec4 v5=vec4(0.596078431372549,0.6470588235294118,0.07058823529411765,1);const float e6=0.75;const vec4 v6=vec4(0.788235294117647,0.7294117647058823,0.27058823529411763,1);const float e7=0.88;const vec4 v7=vec4(0.9137254901960784,0.8470588235294118,0.5372549019607843,1);const float e8=1.0;const vec4 v8=vec4(1,0.9921568627450981,0.803921568627451,1);float a0=smoothstep(e0,e1,x_27);float a1=smoothstep(e1,e2,x_27);float a2=smoothstep(e2,e3,x_27);float a3=smoothstep(e3,e4,x_27);float a4=smoothstep(e4,e5,x_27);float a5=smoothstep(e5,e6,x_27);float a6=smoothstep(e6,e7,x_27);float a7=smoothstep(e7,e8,x_27);return max(mix(v0,v1,a0)*step(e0,x_27)*step(x_27,e1),max(mix(v1,v2,a1)*step(e1,x_27)*step(x_27,e2),max(mix(v2,v3,a2)*step(e2,x_27)*step(x_27,e3),max(mix(v3,v4,a3)*step(e3,x_27)*step(x_27,e4),max(mix(v4,v5,a4)*step(e4,x_27)*step(x_27,e5),max(mix(v5,v6,a5)*step(e5,x_27)*step(x_27,e6),max(mix(v6,v7,a6)*step(e6,x_27)*step(x_27,e7),mix(v7,v8,a7)*step(e7,x_27)*step(x_27,e8))))))));}vec4 cubehelix(float x_37){const float e0=0.0;const vec4 v0=vec4(0,0,0,1);const float e1=0.07;const vec4 v1=vec4(0.08627450980392157,0.0196078431372549,0.23137254901960785,1);const float e2=0.13;const vec4 v2=vec4(0.23529411764705882,0.01568627450980392,0.4117647058823529,1);const float e3=0.2;const vec4 v3=vec4(0.42745098039215684,0.00392156862745098,0.5294117647058824,1);const float e4=0.27;const vec4 v4=vec4(0.6313725490196078,0,0.5764705882352941,1);const float e5=0.33;const vec4 v5=vec4(0.8235294117647058,0.00784313725490196,0.5568627450980392,1);const float e6=0.4;const vec4 v6=vec4(0.984313725490196,0.043137254901960784,0.4823529411764706,1);const float e7=0.47;const vec4 v7=vec4(1,0.11372549019607843,0.3803921568627451,1);const float e8=0.53;const vec4 v8=vec4(1,0.21176470588235294,0.27058823529411763,1);const float e9=0.6;const vec4 v9=vec4(1,0.3333333333333333,0.1803921568627451,1);const float e10=0.67;const vec4 v10=vec4(1,0.47058823529411764,0.13333333333333333,1);const float e11=0.73;const vec4 v11=vec4(1,0.615686274509804,0.1450980392156863,1);const float e12=0.8;const vec4 v12=vec4(0.9450980392156862,0.7490196078431373,0.2235294117647059,1);const float e13=0.87;const vec4 v13=vec4(0.8784313725490196,0.8627450980392157,0.36470588235294116,1);const float e14=0.93;const vec4 v14=vec4(0.8549019607843137,0.9450980392156862,0.5568627450980392,1);const float e15=1.0;const vec4 v15=vec4(0.8901960784313725,0.9921568627450981,0.7764705882352941,1);float a0=smoothstep(e0,e1,x_37);float a1=smoothstep(e1,e2,x_37);float a2=smoothstep(e2,e3,x_37);float a3=smoothstep(e3,e4,x_37);float a4=smoothstep(e4,e5,x_37);float a5=smoothstep(e5,e6,x_37);float a6=smoothstep(e6,e7,x_37);float a7=smoothstep(e7,e8,x_37);float a8=smoothstep(e8,e9,x_37);float a9=smoothstep(e9,e10,x_37);float a10=smoothstep(e10,e11,x_37);float a11=smoothstep(e11,e12,x_37);float a12=smoothstep(e12,e13,x_37);float a13=smoothstep(e13,e14,x_37);float a14=smoothstep(e14,e15,x_37);return max(mix(v0,v1,a0)*step(e0,x_37)*step(x_37,e1),max(mix(v1,v2,a1)*step(e1,x_37)*step(x_37,e2),max(mix(v2,v3,a2)*step(e2,x_37)*step(x_37,e3),max(mix(v3,v4,a3)*step(e3,x_37)*step(x_37,e4),max(mix(v4,v5,a4)*step(e4,x_37)*step(x_37,e5),max(mix(v5,v6,a5)*step(e5,x_37)*step(x_37,e6),max(mix(v6,v7,a6)*step(e6,x_37)*step(x_37,e7),max(mix(v7,v8,a7)*step(e7,x_37)*step(x_37,e8),max(mix(v8,v9,a8)*step(e8,x_37)*step(x_37,e9),max(mix(v9,v10,a9)*step(e9,x_37)*step(x_37,e10),max(mix(v10,v11,a10)*step(e10,x_37)*step(x_37,e11),max(mix(v11,v12,a11)*step(e11,x_37)*step(x_37,e12),max(mix(v12,v13,a12)*step(e12,x_37)*step(x_37,e13),max(mix(v13,v14,a13)*step(e13,x_37)*step(x_37,e14),mix(v14,v15,a14)*step(e14,x_37)*step(x_37,e15)))))))))))))));}float sample_and_apply_contrast_limits(SAMPLER_TYPE channel,vec2 vTexCoord,vec2 contrastLimits){float fragIntensity=float(texture(channel,vTexCoord).r);float contrastLimitsAppliedToIntensity=(fragIntensity-contrastLimits[0])/max(0.0005,(contrastLimits[1]-contrastLimits[0]));return max(0.,contrastLimitsAppliedToIntensity);}vec3 process_channel_intensity(float intensity,vec3 colors,int channelIndex,bool inLensAndUseLens,int lensSelection){float useColorValue=float(int((inLensAndUseLens&&channelIndex==lensSelection)||(!inLensAndUseLens)));vec3 rgb=max(0.,min(1.,intensity))*max(vec3(colors),(1.-useColorValue)*vec3(1.,1.,1.));return rgb;}vec4 apply_opacity(vec3 color,bool useTransparentColor,vec3 transparentColor,float opacity){return vec4(color,(color==transparentColor&&useTransparentColor)? 0. : opacity);}vec4 colormap(float intensity,float opacity,bool useTransparentColor){return apply_opacity(COLORMAP_FUNCTION(min(1.,intensity)).xyz,useTransparentColor,COLORMAP_FUNCTION(0.).xyz,opacity);}\"; // eslint-disable-line\n\nvar channels$1 = {\n  name: 'channel-intensity-module',\n  defines: {\n    SAMPLER_TYPE: 'usampler2D',\n    COLORMAP_FUNCTION: ''\n  },\n  fs: fs$3\n};\n\nvar fs$2 = \"#define GLSLIFY 1\\nbool frag_in_lens_bounds(vec2 lensCenter,vec2 vTexCoord,float majorLensAxis,float minorLensAxis,float lensBorderRadius){return pow((lensCenter.x-vTexCoord.x)/majorLensAxis,2.)+pow((lensCenter.y-vTexCoord.y)/minorLensAxis,2.)<(1.-lensBorderRadius);}bool frag_on_lens_bounds(vec2 lensCenter,vec2 vTexCoord,float majorLensAxis,float minorLensAxis,float lensBorderRadius){float ellipseDistance=pow((lensCenter.x-vTexCoord.x)/majorLensAxis,2.)+pow((lensCenter.y-vTexCoord.y)/minorLensAxis,2.);return ellipseDistance<=1.&&ellipseDistance>=(1.-lensBorderRadius);}\"; // eslint-disable-line\n\nvar lens = {\n  name: 'lens-module',\n  defines: {\n    SAMPLER_TYPE: 'usampler2D'\n  },\n  fs: fs$2\n};\n\nconst MAX_COLOR_INTENSITY = 255;\nconst DEFAULT_COLOR_OFF = [0, 0, 0];\nconst MAX_CHANNELS = 6;\nconst DEFAULT_FONT_FAMILY = \"-apple-system, 'Helvetica Neue', Arial, sans-serif\";\nconst DTYPE_VALUES = {\n  Uint8: {\n    format: GL.R8UI,\n    dataFormat: GL.RED_INTEGER,\n    type: GL.UNSIGNED_BYTE,\n    max: 2 ** 8 - 1,\n    sampler: \"usampler2D\"\n  },\n  Uint16: {\n    format: GL.R16UI,\n    dataFormat: GL.RED_INTEGER,\n    type: GL.UNSIGNED_SHORT,\n    max: 2 ** 16 - 1,\n    sampler: \"usampler2D\"\n  },\n  Uint32: {\n    format: GL.R32UI,\n    dataFormat: GL.RED_INTEGER,\n    type: GL.UNSIGNED_INT,\n    max: 2 ** 32 - 1,\n    sampler: \"usampler2D\"\n  },\n  Float32: {\n    format: GL.R32F,\n    dataFormat: GL.RED,\n    type: GL.FLOAT,\n    max: 3.4 * 10 ** 38,\n    sampler: \"sampler2D\"\n  },\n  Int8: {\n    format: GL.R8I,\n    dataFormat: GL.RED_INTEGER,\n    type: GL.BYTE,\n    max: 2 ** (8 - 1) - 1,\n    sampler: \"isampler2D\"\n  },\n  Int16: {\n    format: GL.R16I,\n    dataFormat: GL.RED_INTEGER,\n    type: GL.SHORT,\n    max: 2 ** (16 - 1) - 1,\n    sampler: \"isampler2D\"\n  },\n  Int32: {\n    format: GL.R32I,\n    dataFormat: GL.RED_INTEGER,\n    type: GL.INT,\n    max: 2 ** (32 - 1) - 1,\n    sampler: \"isampler2D\"\n  },\n  Float64: {\n    format: GL.R32F,\n    dataFormat: GL.RED,\n    type: GL.FLOAT,\n    max: 3.4 * 10 ** 38,\n    sampler: \"sampler2D\",\n    cast: (data) => new Float32Array(data)\n  }\n};\nconst COLORMAPS = [\n  \"jet\",\n  \"hsv\",\n  \"hot\",\n  \"cool\",\n  \"spring\",\n  \"summer\",\n  \"autumn\",\n  \"winter\",\n  \"bone\",\n  \"copper\",\n  \"greys\",\n  \"yignbu\",\n  \"greens\",\n  \"yiorrd\",\n  \"bluered\",\n  \"rdbu\",\n  \"picnic\",\n  \"rainbow\",\n  \"portland\",\n  \"blackbody\",\n  \"earth\",\n  \"electric\",\n  \"alpha\",\n  \"viridis\",\n  \"inferno\",\n  \"magma\",\n  \"plasma\",\n  \"warm\",\n  \"rainbow-soft\",\n  \"bathymetry\",\n  \"cdom\",\n  \"chlorophyll\",\n  \"density\",\n  \"freesurface-blue\",\n  \"freesurface-red\",\n  \"oxygen\",\n  \"par\",\n  \"phase\",\n  \"salinity\",\n  \"temperature\",\n  \"turbidity\",\n  \"velocity-blue\",\n  \"velocity-green\",\n  \"cubehelix\"\n];\nvar RENDERING_MODES;\n(function(RENDERING_MODES2) {\n  RENDERING_MODES2[\"MAX_INTENSITY_PROJECTION\"] = \"Maximum Intensity Projection\";\n  RENDERING_MODES2[\"MIN_INTENSITY_PROJECTION\"] = \"Minimum Intensity Projection\";\n  RENDERING_MODES2[\"ADDITIVE\"] = \"Additive\";\n})(RENDERING_MODES || (RENDERING_MODES = {}));\nconst GLOBAL_SLIDER_DIMENSION_FIELDS = [\"z\", \"t\"];\n\nfunction range(len) {\n  return [...Array(len).keys()];\n}\n\nfunction padWithDefault(arr, defaultValue, padWidth) {\n  for (let i = 0; i < padWidth; i += 1) {\n    arr.push(defaultValue);\n  }\n  return arr;\n}\n\n/**\n * (Safely) get GL values for associated dtype.\n * @param {keyof typeof import('../constants').DTYPE_VALUES} dtype\n */\nfunction getDtypeValues(dtype) {\n  const values = DTYPE_VALUES[dtype];\n  if (!values) {\n    const valid = Object.keys(DTYPE_VALUES);\n    throw Error(`Dtype not supported, got ${dtype}. Must be one of ${valid}.`);\n  }\n  return values;\n}\n\nfunction padColorsAndWindows({\n  contrastLimits,\n  colors,\n  channelsVisible,\n  domain,\n  dtype\n}) {\n  const lengths = [contrastLimits.length, colors.length];\n  if (lengths.every(l => l !== lengths[0])) {\n    throw Error('Inconsistent number of slider values and colors provided');\n  }\n\n  const newColors = colors.map((color, i) =>\n    channelsVisible[i]\n      ? color.map(c => c / MAX_COLOR_INTENSITY)\n      : DEFAULT_COLOR_OFF\n  );\n  const maxSliderValue = (domain && domain[1]) || getDtypeValues(dtype).max;\n  const newContrastLimits = contrastLimits.map((slider, i) =>\n    channelsVisible[i] ? slider : [maxSliderValue, maxSliderValue]\n  );\n  // Need to pad contrastLimits and colors with default values (required by shader)\n  const padSize = MAX_CHANNELS - newColors.length;\n  if (padSize < 0) {\n    throw Error(`${lengths} channels passed in, but only 6 are allowed.`);\n  }\n\n  const paddedColors = padWithDefault(newColors, DEFAULT_COLOR_OFF, padSize);\n  const paddedContrastLimits = padWithDefault(\n    newContrastLimits,\n    [maxSliderValue, maxSliderValue],\n    padSize\n  );\n  const paddedColorsAndWindows = {\n    paddedContrastLimits: paddedContrastLimits.reduce(\n      (acc, val) => acc.concat(val),\n      []\n    ), // flatten for use on shaders\n    paddedColors: paddedColors.reduce((acc, val) => acc.concat(val), [])\n  };\n\n  return paddedColorsAndWindows;\n}\n\nfunction onPointer(layer) {\n  const { viewportId, lensRadius } = layer.props;\n  // If there is no viewportId, don't try to do anything.\n  if (!viewportId) {\n    layer.setState({ unprojectLensBounds: [0, 0, 0, 0] });\n    return;\n  }\n  const { mousePosition } = layer.context;\n  const layerView = layer.context.deck.viewManager.views.filter(\n    view => view.id === viewportId\n  )[0];\n  const viewState = layer.context.deck.viewManager.viewState[viewportId];\n  const viewport = layerView.makeViewport({\n    ...viewState,\n    viewState\n  });\n  // If the mouse is in the viewport and the mousePosition exists, set\n  // the state with the bounding box of the circle that will render as a lens.\n  if (mousePosition && viewport.containsPixel(mousePosition)) {\n    const offsetMousePosition = {\n      x: mousePosition.x - viewport.x,\n      y: mousePosition.y - viewport.y\n    };\n    const mousePositionBounds = [\n      // left\n      [offsetMousePosition.x - lensRadius, offsetMousePosition.y],\n      // bottom\n      [offsetMousePosition.x, offsetMousePosition.y + lensRadius],\n      // right\n      [offsetMousePosition.x + lensRadius, offsetMousePosition.y],\n      // top\n      [offsetMousePosition.x, offsetMousePosition.y - lensRadius]\n    ];\n    // Unproject from screen to world coordinates.\n    const unprojectLensBounds = mousePositionBounds.map(\n      (bounds, i) => viewport.unproject(bounds)[i % 2]\n    );\n    layer.setState({ unprojectLensBounds });\n  } else {\n    layer.setState({ unprojectLensBounds: [0, 0, 0, 0] });\n  }\n}\n\n/**\n * Get physical size scaling Matrix4\n * @param {Object} loader PixelSource\n */\nfunction getPhysicalSizeScalingMatrix(loader) {\n  const { x, y, z } = loader?.meta?.physicalSizes ?? {};\n  if (x?.size && y?.size && z?.size) {\n    const min = Math.min(z.size, x.size, y.size);\n    const ratio = [x.size / min, y.size / min, z.size / min];\n    return new Matrix4().scale(ratio);\n  }\n  return new Matrix4().identity();\n}\n\n/* eslint-disable prefer-destructuring */\n\nconst SHADER_MODULES = [\n  { fs: fs1, fscmap: fsColormap1, vs: vs1 },\n  { fs: fs2, fscmap: fsColormap2, vs: vs2 }\n];\n\nfunction validateWebGL2Filter(gl, interpolation) {\n  const canShowFloat = hasFeature(gl, FEATURES.TEXTURE_FLOAT);\n  const canShowLinear = hasFeature(gl, FEATURES.TEXTURE_FILTER_LINEAR_FLOAT);\n\n  if (!canShowFloat) {\n    throw new Error(\n      'WebGL1 context does not support floating point textures.  Unable to display raster data.'\n    );\n  }\n\n  if (!canShowLinear && interpolation === GL.LINEAR) {\n    console.warn(\n      'LINEAR filtering not supported in WebGL1 context.  Falling back to NEAREST.'\n    );\n    return GL.NEAREST;\n  }\n\n  return interpolation;\n}\n\nfunction getRenderingAttrs$1(dtype, gl, interpolation) {\n  const isLinear = interpolation === GL.LINEAR;\n  if (!isWebGL2(gl)) {\n    return {\n      format: GL.LUMINANCE,\n      dataFormat: GL.LUMINANCE,\n      type: GL.FLOAT,\n      sampler: 'sampler2D',\n      shaderModule: SHADER_MODULES[0],\n      filter: validateWebGL2Filter(gl, interpolation),\n      cast: data => new Float32Array(data)\n    };\n  }\n  // Linear filtering only works when the data type is cast to Float32.\n  const values = getDtypeValues(isLinear ? 'Float32' : dtype);\n  return {\n    ...values,\n    shaderModule: SHADER_MODULES[1],\n    filter: interpolation,\n    cast: isLinear ? data => new Float32Array(data) : data => data\n  };\n}\n\nconst defaultProps$8 = {\n  pickable: { type: 'boolean', value: true, compare: true },\n  coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n  channelData: { type: 'object', value: {}, compare: true },\n  bounds: { type: 'array', value: [0, 0, 1, 1], compare: true },\n  colors: { type: 'array', value: [], compare: true },\n  contrastLimits: { type: 'array', value: [], compare: true },\n  channelsVisible: { type: 'array', value: [], compare: true },\n  opacity: { type: 'number', value: 1, compare: true },\n  dtype: { type: 'string', value: 'Uint16', compare: true },\n  colormap: { type: 'string', value: '', compare: true },\n  isLensOn: { type: 'boolean', value: false, compare: true },\n  lensSelection: { type: 'number', value: 0, compare: true },\n  lensBorderColor: { type: 'array', value: [255, 255, 255], compare: true },\n  lensBorderRadius: { type: 'number', value: 0.02, compare: true },\n  unprojectLensBounds: { type: 'array', value: [0, 0, 0, 0], compare: true },\n  transparentColor: { type: 'array', value: null, compare: true },\n  interpolation: {\n    type: 'number',\n    value: GL.NEAREST,\n    compare: true\n  }\n};\n\n/**\n * @typedef LayerProps\n * @type {object}\n * @property {Array.<Array.<number>>} contrastLimits List of [begin, end] values to control each channel's ramp function.\n * @property {Array.<Array.<number>>} colors List of [r, g, b] values for each channel.\n * @property {Array.<boolean>} channelsVisible List of boolean values for each channel for whether or not it is visible.\n * @property {string} dtype Dtype for the layer.\n * @property {number=} opacity Opacity of the layer.\n * @property {string=} colormap String indicating a colormap (default: '').  The full list of options is here: https://github.com/glslify/glsl-colormap#glsl-colormap\n * @property {Array.<number>=} domain Override for the possible max/min values (i.e something different than 65535 for uint16/'<u2').\n * @property {String=} id Unique identifier for this layer.\n * @property {function=} onHover Hook function from deck.gl to handle hover objects.\n * @property {boolean=} isLensOn Whether or not to use the lens.\n * @property {number=} lensSelection Numeric index of the channel to be focused on by the lens.\n * @property {number=} lensRadius Pixel radius of the lens (default: 100).\n * @property {Array.<number>=} lensBorderColor RGB color of the border of the lens (default [255, 255, 255]).\n * @property {number=} lensBorderRadius Percentage of the radius of the lens for a border (default 0.02).\n * @property {function=} onClick Hook function from deck.gl to handle clicked-on objects.\n * @property {Object=} modelMatrix Math.gl Matrix4 object containing an affine transformation to be applied to the image.\n * @property {Array.<number>=} transparentColor An RGB (0-255 range) color to be considered \"transparent\" if provided.\n * In other words, any fragment shader output equal transparentColor (before applying opacity) will have opacity 0.\n * This parameter only needs to be a truthy value when using colormaps because each colormap has its own transparent color that is calculated on the shader.\n * Thus setting this to a truthy value (with a colormap set) indicates that the shader should make that color transparent.\n * @property {number=} interpolation The TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER for WebGL rendering (see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter) - default is GL.NEAREST\n */\n/**\n * @type {{ new (...props: import('../../types').Viv<LayerProps>[]) }}\n * @ignore\n */\nconst XRLayer = class extends Layer {\n  /**\n   * This function chooses a shader (colormapping or not) and\n   * replaces `usampler` with `sampler` if the data is not an unsigned integer\n   */\n  getShaders() {\n    const { colormap, dtype, interpolation } = this.props;\n    const { shaderModule, sampler } = getRenderingAttrs$1(\n      dtype,\n      this.context.gl,\n      interpolation\n    );\n    return super.getShaders({\n      fs: colormap ? shaderModule.fscmap : shaderModule.fs,\n      vs: shaderModule.vs,\n      defines: {\n        SAMPLER_TYPE: sampler,\n        COLORMAP_FUNCTION: colormap || 'viridis'\n      },\n      modules: [project32, picking, channels$1, lens]\n    });\n  }\n\n  /**\n   * This function initializes the internal state.\n   */\n  initializeState() {\n    const { gl } = this.context;\n    // This tells WebGL how to read row data from the texture.  For example, the default here is 4 (i.e for RGBA, one byte per channel) so\n    // each row of data is expected to be a multiple of 4.  This setting (i.e 1) allows us to have non-multiple-of-4 row sizes.  For example, for 2 byte (16 bit data),\n    // we could use 2 as the value and it would still work, but 1 also works fine (and is more flexible for 8 bit - 1 byte - textures as well).\n    // https://stackoverflow.com/questions/42789896/webgl-error-arraybuffer-not-big-enough-for-request-in-case-of-gl-luminance\n    gl.pixelStorei(GL.UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(GL.PACK_ALIGNMENT, 1);\n    const attributeManager = this.getAttributeManager();\n    attributeManager.add({\n      positions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        update: this.calculatePositions,\n        noAlloc: true\n      }\n    });\n    this.setState({\n      numInstances: 1,\n      positions: new Float64Array(12)\n    });\n  }\n\n  /**\n   * This function finalizes state by clearing all textures from the WebGL context\n   */\n  finalizeState() {\n    super.finalizeState();\n\n    if (this.state.textures) {\n      Object.values(this.state.textures).forEach(tex => tex && tex.delete());\n    }\n  }\n\n  /**\n   * This function updates state by retriggering model creation (shader compilation and attribute binding)\n   * and loading any textures that need be loading.\n   */\n  updateState({ props, oldProps, changeFlags }) {\n    // setup model first\n    if (\n      changeFlags.extensionsChanged ||\n      props.colormap !== oldProps.colormap ||\n      props.interpolation !== oldProps.interpolation\n    ) {\n      const { gl } = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({ model: this._getModel(gl) });\n\n      this.getAttributeManager().invalidateAll();\n    }\n    if (\n      (props.channelData !== oldProps.channelData &&\n        props.channelData?.data !== oldProps.channelData?.data) ||\n      props.interpolation !== oldProps.interpolation\n    ) {\n      this.loadChannelTextures(props.channelData);\n    }\n    const attributeManager = this.getAttributeManager();\n    if (props.bounds !== oldProps.bounds) {\n      attributeManager.invalidate('positions');\n    }\n  }\n\n  /**\n   * This function creates the luma.gl model.\n   */\n  _getModel(gl) {\n    if (!gl) {\n      return null;\n    }\n\n    /*\n       0,0 --- 1,0\n        |       |\n       0,1 --- 1,1\n     */\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: GL.TRIANGLE_FAN,\n        vertexCount: 4,\n        attributes: {\n          texCoords: new Float32Array([0, 1, 0, 0, 1, 0, 1, 1])\n        }\n      }),\n      isInstanced: false\n    });\n  }\n\n  /**\n   * This function generates view positions for use as a vec3 in the shader\n   */\n  calculatePositions(attributes) {\n    const { positions } = this.state;\n    const { bounds } = this.props;\n    // bounds as [minX, minY, maxX, maxY]\n    /*\n      (minX0, maxY3) ---- (maxX2, maxY3)\n             |                  |\n             |                  |\n             |                  |\n      (minX0, minY1) ---- (maxX2, minY1)\n   */\n    positions[0] = bounds[0];\n    positions[1] = bounds[1];\n    positions[2] = 0;\n\n    positions[3] = bounds[0];\n    positions[4] = bounds[3];\n    positions[5] = 0;\n\n    positions[6] = bounds[2];\n    positions[7] = bounds[3];\n    positions[8] = 0;\n\n    positions[9] = bounds[2];\n    positions[10] = bounds[1];\n    positions[11] = 0;\n\n    // eslint-disable-next-line  no-param-reassign\n    attributes.value = positions;\n  }\n\n  /**\n   * This function runs the shaders and draws to the canvas\n   */\n  draw({ uniforms }) {\n    const { textures, model } = this.state;\n    if (textures && model) {\n      const {\n        contrastLimits,\n        colors,\n        opacity,\n        domain,\n        dtype,\n        channelsVisible,\n        unprojectLensBounds,\n        bounds,\n        isLensOn,\n        lensSelection,\n        lensBorderColor,\n        lensBorderRadius,\n        transparentColor\n      } = this.props;\n      // Check number of textures not null.\n      const numTextures = Object.values(textures).filter(t => t).length;\n      // Slider values and color values can come in before textures since their data is async.\n      // Thus we pad based on the number of textures bound.\n      const { paddedContrastLimits, paddedColors } = padColorsAndWindows({\n        contrastLimits: contrastLimits.slice(0, numTextures),\n        colors: colors.slice(0, numTextures),\n        channelsVisible: channelsVisible.slice(0, numTextures),\n        domain,\n        dtype\n      });\n      // Creating a unit-square scaled intersection box for rendering the lens.\n      // It is ok if these coordinates are outside the unit square since\n      // we check membership in or out of the lens on the fragment shader.\n      const [\n        leftMouseBound,\n        bottomMouseBound,\n        rightMouseBound,\n        topMouseBound\n      ] = unprojectLensBounds;\n      const [left, bottom, right, top] = bounds;\n      const leftMouseBoundScaled = (leftMouseBound - left) / (right - left);\n      const bottomMouseBoundScaled = (bottomMouseBound - top) / (bottom - top);\n      const rightMouseBoundScaled = (rightMouseBound - left) / (right - left);\n      const topMouseBoundScaled = (topMouseBound - top) / (bottom - top);\n      model\n        .setUniforms({\n          ...uniforms,\n          colors: paddedColors,\n          contrastLimits: paddedContrastLimits,\n          opacity,\n          majorLensAxis: (rightMouseBoundScaled - leftMouseBoundScaled) / 2,\n          minorLensAxis: (bottomMouseBoundScaled - topMouseBoundScaled) / 2,\n          lensCenter: [\n            (rightMouseBoundScaled + leftMouseBoundScaled) / 2,\n            (bottomMouseBoundScaled + topMouseBoundScaled) / 2\n          ],\n          isLensOn,\n          lensSelection,\n          lensBorderColor,\n          lensBorderRadius,\n          transparentColor: (transparentColor || [0, 0, 0]).map(i => i / 255),\n          useTransparentColor: Boolean(transparentColor),\n          ...textures\n        })\n        .draw();\n    }\n  }\n\n  /**\n   * This function loads all channel textures from incoming resolved promises/data from the loaders by calling `dataToTexture`\n   */\n  loadChannelTextures(channelData) {\n    const textures = {\n      channel0: null,\n      channel1: null,\n      channel2: null,\n      channel3: null,\n      channel4: null,\n      channel5: null\n    };\n    if (this.state.textures) {\n      Object.values(this.state.textures).forEach(tex => tex && tex.delete());\n    }\n    if (\n      channelData &&\n      Object.keys(channelData).length > 0 &&\n      channelData.data\n    ) {\n      channelData.data.forEach((d, i) => {\n        textures[`channel${i}`] = this.dataToTexture(\n          d,\n          channelData.width,\n          channelData.height\n        );\n      }, this);\n      this.setState({ textures });\n    }\n  }\n\n  /**\n   * This function creates textures from the data\n   */\n  dataToTexture(data, width, height) {\n    const { interpolation } = this.props;\n    const attrs = getRenderingAttrs$1(\n      this.props.dtype,\n      this.context.gl,\n      interpolation\n    );\n    return new Texture2D(this.context.gl, {\n      width,\n      height,\n      data: attrs.cast?.(data) ?? data,\n      // we don't want or need mimaps\n      mipmaps: false,\n      parameters: {\n        // NEAREST for integer data\n        [GL.TEXTURE_MIN_FILTER]: attrs.filter,\n        [GL.TEXTURE_MAG_FILTER]: attrs.filter,\n        // CLAMP_TO_EDGE to remove tile artifacts\n        [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n        [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE\n      },\n      format: attrs.format,\n      dataFormat: attrs.dataFormat,\n      type: attrs.type\n    });\n  }\n};\n\nXRLayer.layerName = 'XRLayer';\nXRLayer.defaultProps = defaultProps$8;\n\n// eslint-disable-next-line max-classes-per-file\n\nconst PHOTOMETRIC_INTERPRETATIONS = {\n  WhiteIsZero: 0,\n  BlackIsZero: 1,\n  RGB: 2,\n  Palette: 3,\n  TransparencyMask: 4,\n  CMYK: 5,\n  YCbCr: 6,\n  CIELab: 8,\n  ICCLab: 9\n};\n\nconst defaultProps$7 = {\n  ...BitmapLayer$1.defaultProps,\n  pickable: { type: 'boolean', value: true, compare: true },\n  coordinateSystem: COORDINATE_SYSTEM.CARTESIAN\n};\n\nconst getPhotometricInterpretationShader = (\n  photometricInterpretation,\n  transparentColorInHook\n) => {\n  const useTransparentColor = transparentColorInHook ? 'true' : 'false';\n  const transparentColorVector = `vec3(${(transparentColorInHook || [0, 0, 0])\n    .map(i => String(i / 255))\n    .join(',')})`;\n  switch (photometricInterpretation) {\n    case PHOTOMETRIC_INTERPRETATIONS.RGB:\n      return `color[3] = (${useTransparentColor} && (color.rgb == ${transparentColorVector})) ? 0.0 : color.a;`;\n    case PHOTOMETRIC_INTERPRETATIONS.WhiteIsZero:\n      return `\\\n          float value = 1.0 - (color.r / 256.0);\n          color = vec4(value, value, value, (${useTransparentColor} && vec3(value, value, value) == ${transparentColorVector}) ? 0.0 : color.a);\n        `;\n    case PHOTOMETRIC_INTERPRETATIONS.BlackIsZero:\n      return `\\\n          float value = (color.r / 256.0);\n          color = vec4(value, value, value, (${useTransparentColor} && vec3(value, value, value) == ${transparentColorVector}) ? 0.0 : color.a);\n        `;\n    case PHOTOMETRIC_INTERPRETATIONS.YCbCr:\n      // We need to use an epsilon because the conversion to RGB is not perfect.\n      return `\\\n          float y = color[0];\n          float cb = color[1];\n          float cr = color[2];\n          color[0] = (y + (1.40200 * (cr - .5)));\n          color[1] = (y - (0.34414 * (cb - .5)) - (0.71414 * (cr - .5)));\n          color[2] = (y + (1.77200 * (cb - .5)));\n          color[3] = (${useTransparentColor} && distance(color.rgb, ${transparentColorVector}) < 0.01) ? 0.0 : color.a;\n        `;\n    default:\n      console.error(\n        'Unsupported photometric interpretation or none provided.  No transformation will be done to image data'\n      );\n      return '';\n  }\n};\n\nconst getTransparentColor = photometricInterpretation => {\n  switch (photometricInterpretation) {\n    case PHOTOMETRIC_INTERPRETATIONS.RGB:\n      return [0, 0, 0, 0];\n    case PHOTOMETRIC_INTERPRETATIONS.WhiteIsZero:\n      return [255, 255, 255, 0];\n    case PHOTOMETRIC_INTERPRETATIONS.BlackIsZero:\n      return [0, 0, 0, 0];\n    case PHOTOMETRIC_INTERPRETATIONS.YCbCr:\n      return [16, 128, 128, 0];\n    default:\n      console.error(\n        'Unsupported photometric interpretation or none provided.  No transformation will be done to image data'\n      );\n      return [0, 0, 0, 0];\n  }\n};\n\nclass BitmapLayerWrapper extends BitmapLayer$1 {\n  _getModel(gl) {\n    const { photometricInterpretation, transparentColorInHook } = this.props;\n    // This is a port to the GPU of a subset of https://github.com/geotiffjs/geotiff.js/blob/master/src/rgb.js\n    // Safari was too slow doing this off of the GPU and it is noticably faster on other browsers as well.\n    const photometricInterpretationShader = getPhotometricInterpretationShader(\n      photometricInterpretation,\n      transparentColorInHook\n    );\n    if (!gl) {\n      return null;\n    }\n\n    /*\n      0,0 --- 1,0\n       |       |\n      0,1 --- 1,1\n    */\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: GL.TRIANGLES,\n        vertexCount: 6\n      }),\n      isInstanced: false,\n      inject: {\n        'fs:DECKGL_FILTER_COLOR': photometricInterpretationShader\n      }\n    });\n  }\n}\n\n/**\n * @typedef LayerProps\n * @type {object}\n * @property {number=} opacity Opacity of the layer.\n * @property {function=} onClick Hook function from deck.gl to handle clicked-on objects.\n * @property {Object=} modelMatrix Math.gl Matrix4 object containing an affine transformation to be applied to the image.\n * @property {number=} photometricInterpretation One of WhiteIsZero BlackIsZero YCbCr or RGB (default)\n * @property {Array.<number>=} transparentColor An RGB (0-255 range) color to be considered \"transparent\" if provided.\n * In other words, any fragment shader output equal transparentColor (before applying opacity) will have opacity 0.\n * This parameter only needs to be a truthy value when using colormaps because each colormap has its own transparent color that is calculated on the shader.\n * Thus setting this to a truthy value (with a colormap set) indicates that the shader should make that color transparent.\n * @property {String=} id Unique identifier for this layer.\n */\n/**\n * @type {{ new (...props: import('../types').Viv<LayerProps>[]) }}\n * @ignore\n */\nconst BitmapLayer = class extends CompositeLayer {\n  initializeState(args) {\n    const { gl } = this.context;\n    // This tells WebGL how to read row data from the texture.  For example, the default here is 4 (i.e for RGBA, one byte per channel) so\n    // each row of data is expected to be a multiple of 4.  This setting (i.e 1) allows us to have non-multiple-of-4 row sizes.  For example, for 2 byte (16 bit data),\n    // we could use 2 as the value and it would still work, but 1 also works fine (and is more flexible for 8 bit - 1 byte - textures as well).\n    // https://stackoverflow.com/questions/42789896/webgl-error-arraybuffer-not-big-enough-for-request-in-case-of-gl-luminance\n    // This needs to be called here and not in the BitmapLayerWrapper because the `image` prop is converted to a texture outside of the layer, as controlled by the `image` type.\n    // See: https://github.com/visgl/deck.gl/pull/5197\n    gl.pixelStorei(GL.UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(GL.PACK_ALIGNMENT, 1);\n    super.initializeState(args);\n  }\n\n  renderLayers() {\n    const {\n      photometricInterpretation,\n      transparentColor: transparentColorInHook\n    } = this.props;\n    const transparentColor = getTransparentColor(photometricInterpretation);\n    return new BitmapLayerWrapper(this.props, {\n      // transparentColor is a prop applied to the original image data by deck.gl's\n      // BitmapLayer and needs to be in the original colorspace.  It is used to determine\n      // what color is \"transparent\" in the original color space (i.e what shows when opacity is 0).\n      transparentColor,\n      // This is our transparentColor props which needs to be applied in the hook that converts to the RGB space.\n      transparentColorInHook,\n      id: `${this.props.id}-wrapped`\n    });\n  }\n};\n\nBitmapLayer.layerName = 'BitmapLayer';\n// From https://github.com/geotiffjs/geotiff.js/blob/8ef472f41b51d18074aece2300b6a8ad91a21ae1/src/globals.js#L202-L213\nBitmapLayer.PHOTOMETRIC_INTERPRETATIONS = PHOTOMETRIC_INTERPRETATIONS;\nBitmapLayer.defaultProps = {\n  ...defaultProps$7,\n  // We don't want this layer to bind the texture so the type should not be `image`.\n  image: { type: 'object', value: {}, compare: true },\n  transparentColor: { type: 'array', value: [0, 0, 0], compare: true },\n  photometricInterpretation: { type: 'number', value: 2, compare: true }\n};\nBitmapLayerWrapper.defaultProps = defaultProps$7;\nBitmapLayerWrapper.layerName = 'BitmapLayerWrapper';\n\nfunction getChannelStats(arr) {\n  let len = arr.length;\n  let min = Infinity;\n  let max = -Infinity;\n  let total = 0;\n  while (len--) {\n    if (arr[len] < min) {\n      min = arr[len];\n    }\n    if (arr[len] > max) {\n      max = arr[len];\n    }\n    total += arr[len];\n  }\n  const mean = total / arr.length;\n  len = arr.length;\n  let sumSquared = 0;\n  while (len--) {\n    sumSquared += (arr[len] - mean) ** 2;\n  }\n  const sd = (sumSquared / arr.length) ** 0.5;\n  const mid = Math.floor(arr.length / 2);\n  const firstQuartileLocation = Math.floor(arr.length / 4);\n  const thirdQuartileLocation = 3 * Math.floor(arr.length / 4);\n  quickselect(arr, mid);\n  const median = arr[mid];\n  quickselect(arr, firstQuartileLocation, 0, mid);\n  const q1 = arr[firstQuartileLocation];\n  quickselect(arr, thirdQuartileLocation, mid, arr.length - 1);\n  const q3 = arr[thirdQuartileLocation];\n  const cutoffArr = arr.filter((i) => i > 0);\n  const cutoffPercentile = 5e-4;\n  const topCutoffLocation = Math.floor(cutoffArr.length * (1 - cutoffPercentile));\n  const bottomCutoffLocation = Math.floor(cutoffArr.length * cutoffPercentile);\n  quickselect(cutoffArr, topCutoffLocation);\n  quickselect(cutoffArr, bottomCutoffLocation, 0, topCutoffLocation);\n  const contrastLimits = [\n    cutoffArr[bottomCutoffLocation] || 0,\n    cutoffArr[topCutoffLocation] || 0\n  ];\n  return {\n    mean,\n    sd,\n    q1,\n    q3,\n    median,\n    domain: [min, max],\n    contrastLimits\n  };\n}\nfunction ensureArray(x) {\n  return Array.isArray(x) ? x : [x];\n}\nfunction intToRgba(int) {\n  if (!Number.isInteger(int)) {\n    throw Error(\"Not an integer.\");\n  }\n  const buffer = new ArrayBuffer(4);\n  const view = new DataView(buffer);\n  view.setInt32(0, int, false);\n  const bytes = new Uint8Array(buffer);\n  return Array.from(bytes);\n}\nfunction isInterleaved(shape) {\n  const lastDimSize = shape[shape.length - 1];\n  return lastDimSize === 3 || lastDimSize === 4;\n}\nfunction getLabels(dimOrder) {\n  return dimOrder.toLowerCase().split(\"\").reverse();\n}\nfunction getDims(labels) {\n  const lookup = new Map(labels.map((name, i) => [name, i]));\n  if (lookup.size !== labels.length) {\n    throw Error(\"Labels must be unique, found duplicated label.\");\n  }\n  return (name) => {\n    const index = lookup.get(name);\n    if (index === void 0) {\n      throw Error(\"Invalid dimension.\");\n    }\n    return index;\n  };\n}\nfunction getImageSize(source) {\n  const interleaved = isInterleaved(source.shape);\n  const [height, width] = source.shape.slice(interleaved ? -3 : -2);\n  return { height, width };\n}\nfunction prevPowerOf2(x) {\n  return 2 ** Math.floor(Math.log2(x));\n}\nconst SIGNAL_ABORTED = \"__vivSignalAborted\";\n\nfunction renderSubLayers(props) {\n  const {\n    bbox: { left, top, right, bottom },\n    x,\n    y,\n    z\n  } = props.tile;\n  const { data, id, loader, maxZoom } = props;\n  // Only render in positive coorinate system\n  if ([left, bottom, right, top].some(v => v < 0) || !data) {\n    return null;\n  }\n  const base = loader[0];\n  const { height, width } = getImageSize(base);\n  // Tiles are exactly fitted to have height and width such that their bounds match that of the actual image (not some padded version).\n  // Thus the right/bottom given by deck.gl are incorrect since they assume tiles are of uniform sizes, which is not the case for us.\n  const bounds = [\n    left,\n    data.height < base.tileSize ? height : bottom,\n    data.width < base.tileSize ? width : right,\n    top\n  ];\n  if (isInterleaved(base.shape)) {\n    const { photometricInterpretation = 2 } = base.meta;\n    return new BitmapLayer(props, {\n      image: data,\n      photometricInterpretation,\n      // Shared props with XRLayer:\n      bounds,\n      id: `tile-sub-layer-${bounds}-${id}`,\n      tileId: { x, y, z }\n    });\n  }\n  return new XRLayer(props, {\n    channelData: data,\n    // Uncomment to help debugging - shades the tile being hovered over.\n    // autoHighlight: true,\n    // highlightColor: [80, 80, 80, 50],\n    // Shared props with BitmapLayer:\n    bounds,\n    id: `tile-sub-layer-${bounds}-${id}`,\n    tileId: { x, y, z },\n    // The auto setting is NEAREST at the highest resolution but LINEAR otherwise.\n    interpolation: z === maxZoom ? GL.NEAREST : GL.LINEAR\n  });\n}\n\nconst defaultProps$6 = {\n  pickable: { type: 'boolean', value: true, compare: true },\n  coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n  contrastLimits: { type: 'array', value: [], compare: true },\n  colors: { type: 'array', value: [], compare: true },\n  channelsVisible: { type: 'array', value: [], compare: true },\n  renderSubLayers: { type: 'function', value: renderSubLayers, compare: false },\n  colormap: { type: 'string', value: '', compare: true },\n  dtype: { type: 'string', value: 'Uint16', compare: true },\n  domain: { type: 'array', value: [], compare: true },\n  viewportId: { type: 'string', value: '', compare: true },\n  unprojectLensBounds: { type: 'array', value: [0, 0, 0, 0], compare: true },\n  isLensOn: { type: 'boolean', value: false, compare: true },\n  lensSelection: { type: 'number', value: 0, compare: true },\n  lensRadius: { type: 'number', value: 100, compare: true },\n  lensBorderColor: { type: 'array', value: [255, 255, 255], compare: true },\n  lensBorderRadius: { type: 'number', value: 0.02, compare: true },\n  transparentColor: { type: 'array', value: null, compare: true },\n  interpolation: { type: 'number', value: null, compare: true }\n};\n\n/**\n * This layer serves as a proxy of sorts to the rendering done in renderSubLayers, reacting to viewport changes in a custom manner.\n */\nclass MultiscaleImageLayerBase extends TileLayer {\n  /**\n   * This function allows us to controls which viewport gets to update the Tileset2D.\n   * This is a uniquely TileLayer issue since it updates based on viewport updates thanks\n   * to its ability to handle zoom-pan loading.  Essentially, with a picture-in-picture,\n   * this prevents it from detecting the update of some other viewport that is unwanted.\n   */\n  _updateTileset() {\n    if (!this.props.viewportId) {\n      super._updateTileset();\n    }\n    if (\n      (this.props.viewportId &&\n        this.context.viewport.id === this.props.viewportId) ||\n      // I don't know why, but DeckGL doesn't recognize multiple views on the first pass\n      // so we force update on the first pass by checking if there is a viewport in the tileset.\n      !this.state.tileset._viewport\n    ) {\n      super._updateTileset();\n    }\n  }\n}\n\nMultiscaleImageLayerBase.layerName = 'MultiscaleImageLayerBase';\nMultiscaleImageLayerBase.defaultProps = defaultProps$6;\n\nconst defaultProps$5 = {\n  pickable: { type: 'boolean', value: true, compare: true },\n  coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n  contrastLimits: { type: 'array', value: [], compare: true },\n  channelsVisible: { type: 'array', value: [], compare: true },\n  colors: { type: 'array', value: [], compare: true },\n  selections: { type: 'array', value: [], compare: true },\n  colormap: { type: 'string', value: '', compare: true },\n  domain: { type: 'array', value: [], compare: true },\n  viewportId: { type: 'string', value: '', compare: true },\n  loader: {\n    type: 'object',\n    value: {\n      getRaster: async () => ({ data: [], height: 0, width: 0 }),\n      dtype: 'Uint16'\n    },\n    compare: true\n  },\n  isLensOn: { type: 'boolean', value: false, compare: true },\n  lensSelection: { type: 'number', value: 0, compare: true },\n  lensRadius: { type: 'number', value: 100, compare: true },\n  lensBorderColor: { type: 'array', value: [255, 255, 255], compare: true },\n  lensBorderRadius: { type: 'number', value: 0.02, compare: true },\n  onClick: { type: 'function', value: null, compare: true },\n  transparentColor: { type: 'array', value: null, compare: true },\n  onViewportLoad: { type: 'function', value: null, compare: true },\n  interpolation: {\n    type: 'number',\n    value: GL.NEAREST,\n    compare: true\n  }\n};\n\n/**\n * @typedef LayerProps\n * @type {Object}\n * @property {Array.<Array.<number>>} contrastLimits List of [begin, end] values to control each channel's ramp function.\n * @property {Array.<Array.<number>>} colors List of [r, g, b] values for each channel.\n * @property {Array.<boolean>} channelsVisible List of boolean values for each channel for whether or not it is visible.\n * @property {Object} loader PixelSource. Represents an N-dimensional image.\n * @property {Array} selections Selection to be used for fetching data.\n * @property {number=} opacity Opacity of the layer.\n * @property {string=} colormap String indicating a colormap (default: '').  The full list of options is here: https://github.com/glslify/glsl-colormap#glsl-colormap\n * @property {Array.<Array.<number>>=} domain Override for the possible max/min values (i.e something different than 65535 for uint16/'<u2').\n * @property {string=} viewportId Id for the current view.  This needs to match the viewState id in deck.gl and is necessary for the lens.\n * @property {function=} onHover Hook function from deck.gl to handle hover objects.\n * @property {boolean=} isLensOn Whether or not to use the lens.\n * @property {number=} lensSelection Numeric index of the channel to be focused on by the lens.\n * @property {number=} lensRadius Pixel radius of the lens (default: 100).\n * @property {Array.<number>=} lensBorderColor RGB color of the border of the lens.\n * @property {number=} lensBorderRadius Percentage of the radius of the lens for a border (default 0.02).\n * @property {function=} onClick Hook function from deck.gl to handle clicked-on objects.\n * @property {Object=} modelMatrix Math.gl Matrix4 object containing an affine transformation to be applied to the image.\n * @property {Array.<number>=} transparentColor An RGB (0-255 range) color to be considered \"transparent\" if provided.\n * In other words, any fragment shader output equal transparentColor (before applying opacity) will have opacity 0.\n * This parameter only needs to be a truthy value when using colormaps because each colormap has its own transparent color that is calculated on the shader.\n * Thus setting this to a truthy value (with a colormap set) indicates that the shader should make that color transparent.\n * @property {function=} onViewportLoad Function that gets called when the data in the viewport loads.\n * @property {String=} id Unique identifier for this layer.\n */\n\n/**\n * @type {{ new <S extends string[]>(...props: import('../types').Viv<LayerProps, S>[]) }}\n * @ignore\n */\nconst ImageLayer = class extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      unprojectLensBounds: [0, 0, 0, 0],\n      width: 0,\n      height: 0,\n      data: []\n    };\n    if (this.context.deck) {\n      this.context.deck.eventManager.on({\n        pointermove: () => onPointer(this),\n        pointerleave: () => onPointer(this),\n        wheel: () => onPointer(this)\n      });\n    }\n  }\n\n  finalizeState() {\n    this.state.abortController.abort();\n  }\n\n  updateState({ props, oldProps }) {\n    const loaderChanged = props.loader !== oldProps.loader;\n    const selectionsChanged = props.selections !== oldProps.selections;\n\n    if (loaderChanged || selectionsChanged) {\n      // Only fetch new data to render if loader has changed\n      const { loader, selections = [], onViewportLoad } = this.props;\n      const abortController = new AbortController();\n      this.setState({ abortController });\n      const { signal } = abortController;\n      const getRaster = selection => loader.getRaster({ selection, signal });\n      const dataPromises = selections.map(getRaster);\n\n      Promise.all(dataPromises)\n        .then(rasters => {\n          const raster = {\n            data: rasters.map(d => d.data),\n            width: rasters[0].width,\n            height: rasters[0].height\n          };\n\n          if (isInterleaved(loader.shape)) {\n            // data is for BitmapLayer and needs to be of form { data: Uint8Array, width, height };\n            // eslint-disable-next-line prefer-destructuring\n            raster.data = raster.data[0];\n            if (raster.data.length === raster.width * raster.height * 3) {\n              // data is RGB (not RGBA) and need to update texture formats\n              raster.format = GL.RGB;\n              raster.dataFormat = GL.RGB;\n            }\n          }\n\n          if (onViewportLoad) {\n            onViewportLoad(raster);\n          }\n          this.setState({ ...raster });\n        })\n        .catch(e => {\n          if (e !== SIGNAL_ABORTED) {\n            throw e; // re-throws error if not our signal\n          }\n        });\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getPickingInfo({ info, sourceLayer }) {\n    // eslint-disable-next-line no-param-reassign\n    info.sourceLayer = sourceLayer;\n    // eslint-disable-next-line no-param-reassign\n    info.tile = sourceLayer.props.tile;\n    return info;\n  }\n\n  renderLayers() {\n    const { loader, id } = this.props;\n    const { dtype } = loader;\n    const { width, height, data, unprojectLensBounds } = this.state;\n    if (!(width && height)) return null;\n\n    const bounds = [0, height, width, 0];\n    if (isInterleaved(loader.shape)) {\n      const { photometricInterpretation = 2 } = loader.meta;\n      return new BitmapLayer(this.props, {\n        image: this.state,\n        photometricInterpretation,\n        // Shared props with XRLayer:\n        bounds,\n        id: `image-sub-layer-${bounds}-${id}`\n      });\n    }\n    return new XRLayer(this.props, {\n      channelData: { data, height, width },\n      // Shared props with BitmapLayer:\n      bounds,\n      id: `image-sub-layer-${bounds}-${id}`,\n      dtype,\n      unprojectLensBounds\n    });\n  }\n};\n\nImageLayer.layerName = 'ImageLayer';\nImageLayer.defaultProps = defaultProps$5;\n\nconst defaultProps$4 = {\n  pickable: { type: 'boolean', value: true, compare: true },\n  onHover: { type: 'function', value: null, compare: false },\n  contrastLimits: { type: 'array', value: [], compare: true },\n  colors: { type: 'array', value: [], compare: true },\n  channelsVisible: { type: 'array', value: [], compare: true },\n  opacity: { type: 'number', value: 1, compare: true },\n  colormap: { type: 'string', value: '', compare: true },\n  domain: { type: 'array', value: [], compare: true },\n  viewportId: { type: 'string', value: '', compare: true },\n  isLensOn: { type: 'boolean', value: false, compare: true },\n  lensSelection: { type: 'number', value: 0, compare: true },\n  lensRadius: { type: 'number', value: 100, compare: true },\n  lensBorderColor: { type: 'array', value: [255, 255, 255], compare: true },\n  lensBorderRadius: { type: 'number', value: 0.02, compare: true },\n  maxRequests: { type: 'number', value: 10, compare: true },\n  onClick: { type: 'function', value: null, compare: true },\n  transparentColor: { type: 'array', value: null, compare: true },\n  refinementStrategy: { type: 'string', value: null, compare: true },\n  excludeBackground: { type: 'boolean', value: false, compare: true }\n};\n\n/**\n * @typedef LayerProps\n * @type {object}\n * @property {Array.<Array.<number>>} contrastLimits List of [begin, end] values to control each channel's ramp function.\n * @property {Array.<Array.<number>>} colors List of [r, g, b] values for each channel.\n * @property {Array.<boolean>} channelsVisible List of boolean values for each channel for whether or not it is visible.\n * @property {Array} loader Image pyramid. PixelSource[], where each PixelSource is decreasing in shape.\n * @property {Array} selections Selection to be used for fetching data.\n * @property {number=} opacity Opacity of the layer.\n * @property {string=} colormap String indicating a colormap (default: '').  The full list of options is here: https://github.com/glslify/glsl-colormap#glsl-colormap\n * @property {Array.<Array.<number>>=} domain Override for the possible max/min values (i.e something different than 65535 for uint16/'<u2').\n * @property {string=} viewportId Id for the current view.  This needs to match the viewState id in deck.gl and is necessary for the lens.\n * @property {String=} id Unique identifier for this layer.\n * @property {function=} onTileError Custom override for handle tile fetching errors.\n * @property {function=} onHover Hook function from deck.gl to handle hover objects.\n * @property {boolean=} isLensOn Whether or not to use the lens.\n * @property {number=} lensSelection Numeric index of the channel to be focused on by the lens.\n * @property {number=} lensRadius Pixel radius of the lens (default: 100).\n * @property {Array.<number>=} lensBorderColor RGB color of the border of the lens (default [255, 255, 255]).\n * @property {number=} lensBorderRadius Percentage of the radius of the lens for a border (default 0.02).\n * @property {number=} maxRequests Maximum parallel ongoing requests allowed before aborting.\n * @property {function=} onClick Hook function from deck.gl to handle clicked-on objects.\n * @property {Object=} modelMatrix Math.gl Matrix4 object containing an affine transformation to be applied to the image.\n * @property {Array.<number>=} transparentColor An RGB (0-255 range) color to be considered \"transparent\" if provided.\n * In other words, any fragment shader output equal transparentColor (before applying opacity) will have opacity 0.\n * This parameter only needs to be a truthy value when using colormaps because each colormap has its own transparent color that is calculated on the shader.\n * Thus setting this to a truthy value (with a colormap set) indicates that the shader should make that color transparent.\n * @property {string=} refinementStrategy 'best-available' | 'no-overlap' | 'never' will be passed to TileLayer. A default will be chosen based on opacity.\n * @property {boolean=} excludeBackground Whether to exclude the background image. The background image is also excluded for opacity!=1.\n */\n\n/**\n * @type {{ new <S extends string[]>(...props: import('../../types').Viv<LayerProps, S>[]) }}\n * @ignore\n */\nconst MultiscaleImageLayer = class extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      unprojectLensBounds: [0, 0, 0, 0]\n    };\n    if (this.context.deck) {\n      this.context.deck.eventManager.on({\n        pointermove: () => onPointer(this),\n        pointerleave: () => onPointer(this),\n        wheel: () => onPointer(this)\n      });\n    }\n  }\n\n  renderLayers() {\n    const {\n      loader,\n      selections,\n      opacity,\n      viewportId,\n      onTileError,\n      onHover,\n      id,\n      onClick,\n      modelMatrix,\n      transparentColor,\n      excludeBackground,\n      refinementStrategy\n    } = this.props;\n\n    // Get properties from highest resolution\n    const { tileSize, dtype } = loader[0];\n\n    const { unprojectLensBounds } = this.state;\n    // This is basically to invert:\n    // https://github.com/visgl/deck.gl/pull/4616/files#diff-4d6a2e500c0e79e12e562c4f1217dc80R128\n    // The z level can be wrong for showing the correct scales because of the calculation deck.gl does\n    // so we need to invert it for fetching tiles and minZoom/maxZoom.\n    const getTileData = async ({ x, y, z, signal }) => {\n      // Early return if no selections\n      if (!selections || selections.length === 0) {\n        return null;\n      }\n\n      // I don't fully undertstand why this works, but I have a sense.\n      // It's basically to cancel out:\n      // https://github.com/visgl/deck.gl/pull/4616/files#diff-4d6a2e500c0e79e12e562c4f1217dc80R128,\n      // which felt odd to me to beign with.\n      // The image-tile example works without, this but I have a feeling there is something\n      // going on with our pyramids and/or rendering that is different.\n      const resolution = Math.round(-z);\n      const getTile = selection => {\n        const config = { x, y, selection, signal };\n        return loader[resolution].getTile(config);\n      };\n\n      try {\n        /*\n         * Try to request the tile data. The pixels sources can throw\n         * special SIGNAL_ABORTED string that we pick up in the catch\n         * block to return null to deck.gl.\n         *\n         * This means that our pixels sources _always_ have the same\n         * return type, and optional throw for performance.\n         */\n        const tiles = await Promise.all(selections.map(getTile));\n\n        const tile = {\n          data: tiles.map(d => d.data),\n          width: tiles[0].width,\n          height: tiles[0].height\n        };\n\n        if (isInterleaved(loader[resolution].shape)) {\n          // eslint-disable-next-line prefer-destructuring\n          tile.data = tile.data[0];\n          if (tile.data.length === tile.width * tile.height * 3) {\n            tile.format = GL.RGB;\n            tile.dataFormat = GL.RGB; // is this not properly inferred?\n          }\n          // can just return early, no need  to check for webgl2\n          return tile;\n        }\n\n        return tile;\n      } catch (err) {\n        /*\n         * Signal is aborted. We handle the custom value thrown\n         * by our pixel sources here and return falsy to deck.gl.\n         */\n        if (err === SIGNAL_ABORTED) {\n          return null;\n        }\n\n        // We should propagate all other thrown values/errors\n        throw err;\n      }\n    };\n\n    const { height, width } = getImageSize(loader[0]);\n    const tiledLayer = new MultiscaleImageLayerBase(this.props, {\n      id: `Tiled-Image-${id}`,\n      getTileData,\n      dtype,\n      tileSize,\n      // If you scale a matrix up or down, that is like zooming in or out.  zoomOffset controls\n      // how the zoom level you fetch tiles at is offset, allowing us to fetch higher resolution tiles\n      // while at a lower \"absolute\" zoom level.  If you didn't use this prop, an image that is scaled\n      // up would always look \"low resolution\" no matter the level of the image pyramid you are looking at.\n      zoomOffset: Math.round(\n        Math.log2(modelMatrix ? modelMatrix.getScale()[0] : 1)\n      ),\n      extent: [0, 0, width, height],\n      // See the above note within for why the use of zoomOffset and the rounding necessary.\n      minZoom: Math.round(-(loader.length - 1)),\n      maxZoom: 0,\n      // We want a no-overlap caching strategy with an opacity < 1 to prevent\n      // multiple rendered sublayers (some of which have been cached) from overlapping\n      refinementStrategy:\n        refinementStrategy || (opacity === 1 ? 'best-available' : 'no-overlap'),\n      // TileLayer checks `changeFlags.updateTriggersChanged.getTileData` to see if tile cache\n      // needs to be re-created. We want to trigger this behavior if the loader changes.\n      // https://github.com/uber/deck.gl/blob/3f67ea6dfd09a4d74122f93903cb6b819dd88d52/modules/geo-layers/src/tile-layer/tile-layer.js#L50\n      updateTriggers: {\n        getTileData: [loader, selections]\n      },\n      onTileError: onTileError || loader[0].onTileError,\n      unprojectLensBounds\n    });\n\n    // This gives us a background image and also solves the current\n    // minZoom funny business.  We don't use it for the background if we have an opacity\n    // paramteter set to anything but 1, but we always use it for situations where\n    // we are zoomed out too far.\n    const lowestResolution = loader[loader.length - 1];\n    const implementsGetRaster =\n      typeof lowestResolution.getRaster === 'function';\n    const layerModelMatrix = modelMatrix ? modelMatrix.clone() : new Matrix4();\n    const baseLayer =\n      implementsGetRaster &&\n      !excludeBackground &&\n      new ImageLayer(this.props, {\n        id: `Background-Image-${id}`,\n        loader: lowestResolution,\n        modelMatrix: layerModelMatrix.scale(2 ** (loader.length - 1)),\n        visible:\n          opacity === 1 &&\n          (!viewportId || this.context.viewport.id === viewportId) &&\n          // If we are using a transparent color, we shouldn't show the background image\n          // since the background image might not have the same color output from the fragment shader\n          // as the tiled layer at a higher resolution level.\n          !transparentColor,\n        pickable: { type: 'boolean', value: true, compare: true },\n        onHover,\n        onClick,\n        // Background image is nicest when LINEAR in my opinion.\n        interpolation: GL.LINEAR\n      });\n    const layers = [baseLayer, tiledLayer];\n    return layers;\n  }\n};\n\nMultiscaleImageLayer.layerName = 'MultiscaleImageLayer';\nMultiscaleImageLayer.defaultProps = defaultProps$4;\n\nconst defaultProps$3 = {\n  pickable: { type: 'boolean', value: true, compare: true },\n  loader: {\n    type: 'object',\n    value: {\n      getRaster: async () => ({ data: [], height: 0, width: 0 }),\n      getRasterSize: () => ({ height: 0, width: 0 }),\n      dtype: '<u2'\n    },\n    compare: true\n  },\n  id: { type: 'string', value: '', compare: true },\n  boundingBox: {\n    type: 'array',\n    value: [\n      [0, 0],\n      [0, 1],\n      [1, 1],\n      [1, 0]\n    ],\n    compare: true\n  },\n  boundingBoxColor: { type: 'array', value: [255, 0, 0], compare: true },\n  boundingBoxOutlineWidth: { type: 'number', value: 1, compare: true },\n  viewportOutlineColor: { type: 'array', value: [255, 190, 0], compare: true },\n  viewportOutlineWidth: { type: 'number', value: 2, compare: true },\n  overviewScale: { type: 'number', value: 1, compare: true },\n  zoom: { type: 'number', value: 1, compare: true }\n};\n\n/**\n * @typedef LayerProps\n * @type {Object}\n * @property {Array.<Array.<number>>} contrastLimits List of [begin, end] values to control each channel's ramp function.\n * @property {Array.<Array.<number>>} colors List of [r, g, b] values for each channel.\n * @property {Array.<boolean>} channelsVisible List of boolean values for each channel for whether or not it is visible.\n * @property {Array} loader PixelSource[]. Assumes multiscale if loader.length > 1.\n * @property {Array} selections Selection to be used for fetching data.\n * @property {number=} opacity Opacity of the layer.\n * @property {string=} colormap String indicating a colormap (default: '').  The full list of options is here: https://github.com/glslify/glsl-colormap#glsl-colormap\n * @property {Array.<Array.<number>>=} domain Override for the possible max/min values (i.e something different than 65535 for uint16/'<u2').\n * @property {Array.<number>=} boundingBoxColor [r, g, b] color of the bounding box (default: [255, 0, 0]).\n * @property {number=} boundingBoxOutlineWidth Width of the bounding box in px (default: 1).\n * @property {Array.<number>=} viewportOutlineColor [r, g, b] color of the outline (default: [255, 190, 0]).\n * @property {number=} viewportOutlineWidth Viewport outline width in px (default: 2).\n * @property {String=} id Unique identifier for this layer.\n */\n\n/**\n * @type {{ new <S extends string[]>(...props: import('../types').Viv<LayerProps, S>[]) }}\n * @ignore\n */\nconst OverviewLayer = class extends CompositeLayer {\n  renderLayers() {\n    const {\n      loader,\n      id,\n      zoom,\n      boundingBox,\n      boundingBoxColor,\n      boundingBoxOutlineWidth,\n      viewportOutlineColor,\n      viewportOutlineWidth,\n      overviewScale\n    } = this.props;\n\n    const { width, height } = getImageSize(loader[0]);\n    const z = loader.length - 1;\n    const lowestResolution = loader[z];\n\n    const overview = new ImageLayer(this.props, {\n      id: `viewport-${id}`,\n      modelMatrix: new Matrix4().scale(2 ** z * overviewScale),\n      loader: lowestResolution\n    });\n    const boundingBoxOutline = new PolygonLayer({\n      id: `bounding-box-overview-${id}`,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      data: [boundingBox],\n      getPolygon: f => f,\n      filled: false,\n      stroked: true,\n      getLineColor: boundingBoxColor,\n      getLineWidth: boundingBoxOutlineWidth * 2 ** zoom\n    });\n    const viewportOutline = new PolygonLayer({\n      id: `viewport-outline-${id}`,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      data: [\n        [\n          [0, 0],\n          [width * overviewScale, 0],\n          [width * overviewScale, height * overviewScale],\n          [0, height * overviewScale]\n        ]\n      ],\n      getPolygon: f => f,\n      filled: false,\n      stroked: true,\n      getLineColor: viewportOutlineColor,\n      getLineWidth: viewportOutlineWidth * 2 ** zoom\n    });\n    const layers = [overview, boundingBoxOutline, viewportOutline];\n    return layers;\n  }\n};\n\nOverviewLayer.layerName = 'OverviewLayer';\nOverviewLayer.defaultProps = defaultProps$3;\n\nfunction getVivId(id) {\n  return `-#${id}#`;\n}\n/**\n * Create a boudning box from a viewport based on passed-in viewState.\n * @param {viewState} Object The viewState for a certain viewport.\n * @returns {View} The DeckGL View for this viewport.\n */\nfunction makeBoundingBox(viewState) {\n  const viewport = new OrthographicView().makeViewport({\n    // From the current `detail` viewState, we need its projection matrix (actually the inverse).\n    viewState,\n    height: viewState.height,\n    width: viewState.width\n  });\n  // Use the inverse of the projection matrix to map screen to the view space.\n  return [\n    viewport.unproject([0, 0]),\n    viewport.unproject([viewport.width, 0]),\n    viewport.unproject([viewport.width, viewport.height]),\n    viewport.unproject([0, viewport.height])\n  ];\n}\n\n/**\n * Create an initial view state that centers the image in the viewport at the zoom level that fills the dimensions in `viewSize`.\n * @param {Object} loader (PixelSource[] | PixelSource)\n * @param {Object} viewSize { height, width } object giving dimensions of the viewport for deducing the right zoom level to center the image.\n * @param {Object=} zoomBackOff A positive number which controls how far zoomed out the view state is from filling the entire viewport (default is 0 so the image fully fills the view).\n * SideBySideViewer and PictureInPictureViewer use .5 when setting viewState automatically in their default behavior, so the viewport is slightly zoomed out from the image\n * filling the whole screen.  1 unit of zoomBackOff (so a passed-in value of 1) corresponds to a 2x zooming out.\n * @param {Boolean=} use3d Whether or not to return a view state that can be used with the 3d viewer\n * @param {Boolean=} modelMatrix If using a transformation matrix, passing it in here will allow this function to properly center the volume.\n * @returns {Object} A default initial view state that centers the image within the view: { target: [x, y, 0], zoom: -zoom }.\n */\nfunction getDefaultInitialViewState(\n  loader,\n  viewSize,\n  zoomBackOff = 0,\n  use3d = false,\n  modelMatrix\n) {\n  const source = Array.isArray(loader) ? loader[0] : loader;\n  const { width, height } = getImageSize(source);\n  const depth = source.shape[source.labels.indexOf('z')];\n  const zoom =\n    Math.log2(Math.min(viewSize.width / width, viewSize.height / height)) -\n    zoomBackOff;\n  const physicalSizeScalingMatrix = getPhysicalSizeScalingMatrix(source);\n  const loaderInitialViewState = {\n    target: (modelMatrix || new Matrix4()).transformPoint(\n      (use3d ? physicalSizeScalingMatrix : new Matrix4()).transformPoint([\n        width / 2,\n        height / 2,\n        use3d ? depth / 2 : 0\n      ])\n    ),\n    zoom\n  };\n  return loaderInitialViewState;\n}\n\n/**\n * Creates the layers for viewing an image in detail.\n * @param {String} id The identifier of the view.\n * @param {Object} props The layer properties.\n * @returns {Array} An array of layers.\n */\nfunction getImageLayers(id, props) {\n  const {\n    selections,\n    newselections,\n    transitionFields,\n    transitionOnViewportLoad,\n    onViewportLoad,\n    ...layerProps\n  } = props;\n  const { loader } = layerProps;\n  // Grab name of PixelSource if a class instance (works for Tiff & Zarr).\n  const sourceName = loader[0]?.constructor?.name;\n\n  // Create at least one layer even without selections so that the tests pass.\n  const Layer = loader.length > 1 ? MultiscaleImageLayer : ImageLayer;\n  const layerLoader = loader.length > 1 ? loader : loader[0];\n  const layers = [selections, newselections]\n    .filter((s, i) => i === 0 || s)\n    .map((s, i) => {\n      const suffix =\n        s && s[0] ? `-${transitionFields.map(f => s[0][f]).join('-')}` : '';\n      const newProps =\n        i !== 0\n          ? {\n              onViewportLoad: args => {\n                // Slightly delay to avoid issues with a render in the middle of a deck.gl layer state update.\n                setTimeout(() => {\n                  onViewportLoad(args);\n                  transitionOnViewportLoad(args);\n                }, 0);\n              }\n            }\n          : { onViewportLoad };\n      if (loader.length > 1 && i !== 0) {\n        newProps.refinementStrategy = 'never';\n        newProps.excludeBackground = true;\n      }\n      return new Layer({\n        ...layerProps,\n        ...newProps,\n        selections: s,\n        id: `${sourceName}${getVivId(id)}${suffix}`,\n        viewportId: id,\n        loader: layerLoader\n      });\n    });\n  return layers;\n}\n\nfunction getPosition(boundingBox, position, length) {\n  const viewLength = boundingBox[2][0] - boundingBox[0][0];\n  switch (position) {\n    case 'bottom-right': {\n      const yCoord =\n        boundingBox[2][1] - (boundingBox[2][1] - boundingBox[0][1]) * length;\n      const xLeftCoord = boundingBox[2][0] - viewLength * length;\n      return [yCoord, xLeftCoord];\n    }\n    case 'top-right': {\n      const yCoord = (boundingBox[2][1] - boundingBox[0][1]) * length;\n      const xLeftCoord = boundingBox[2][0] - viewLength * length;\n      return [yCoord, xLeftCoord];\n    }\n    case 'top-left': {\n      const yCoord = (boundingBox[2][1] - boundingBox[0][1]) * length;\n      const xLeftCoord = viewLength * length;\n      return [yCoord, xLeftCoord];\n    }\n    case 'bottom-left': {\n      const yCoord =\n        boundingBox[2][1] - (boundingBox[2][1] - boundingBox[0][1]) * length;\n      const xLeftCoord = viewLength * length;\n      return [yCoord, xLeftCoord];\n    }\n    default: {\n      throw new Error(`Position ${position} not found`);\n    }\n  }\n}\n\nconst defaultProps$2 = {\n  pickable: { type: 'boolean', value: true, compare: true },\n  viewState: {\n    type: 'object',\n    value: { zoom: 0, target: [0, 0, 0] },\n    compare: true\n  },\n  unit: { type: 'string', value: '', compare: true },\n  size: { type: 'number', value: 1, compare: true },\n  position: { type: 'string', value: 'bottom-right', compare: true },\n  length: { type: 'number', value: 0.085, compare: true }\n};\n/**\n * @typedef LayerProps\n * @type {Object}\n * @property {String} unit Physical unit size per pixel at full resolution.\n * @property {Number} size Physical size of a pixel.\n * @property {Object} viewState The current viewState for the desired view.  We cannot internally use this.context.viewport because it is one frame behind:\n * https://github.com/visgl/deck.gl/issues/4504\n * @property {Array=} boundingBox Boudning box of the view in which this should render.\n * @property {string=} id Id from the parent layer.\n * @property {number=} length Value from 0 to 1 representing the portion of the view to be used for the length part of the scale bar.\n */\n\n/**\n * @type {{ new(...props: LayerProps[]) }}\n * @ignore\n */\nconst ScaleBarLayer = class extends CompositeLayer {\n  renderLayers() {\n    const { id, unit, size, position, viewState, length } = this.props;\n    const boundingBox = makeBoundingBox(viewState);\n    const { zoom } = viewState;\n    const viewLength = boundingBox[2][0] - boundingBox[0][0];\n    const barLength = viewLength * 0.05;\n    // This is a good heuristic for stopping the bar tick marks from getting too small\n    // and/or the text squishing up into the bar.\n    const barHeight = Math.max(\n      2 ** (-zoom + 1.5),\n      (boundingBox[2][1] - boundingBox[0][1]) * 0.007\n    );\n    const numUnits = barLength * size;\n    const [yCoord, xLeftCoord] = getPosition(boundingBox, position, length);\n    const lengthBar = new LineLayer({\n      id: `scale-bar-length-${id}`,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      data: [\n        [\n          [xLeftCoord, yCoord],\n          [xLeftCoord + barLength, yCoord]\n        ]\n      ],\n      getSourcePosition: d => d[0],\n      getTargetPosition: d => d[1],\n      getWidth: 2,\n      getColor: [220, 220, 220]\n    });\n    const tickBoundsLeft = new LineLayer({\n      id: `scale-bar-height-left-${id}`,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      data: [\n        [\n          [xLeftCoord, yCoord - barHeight],\n          [xLeftCoord, yCoord + barHeight]\n        ]\n      ],\n      getSourcePosition: d => d[0],\n      getTargetPosition: d => d[1],\n      getWidth: 2,\n      getColor: [220, 220, 220]\n    });\n    const tickBoundsRight = new LineLayer({\n      id: `scale-bar-height-right-${id}`,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      data: [\n        [\n          [xLeftCoord + barLength, yCoord - barHeight],\n          [xLeftCoord + barLength, yCoord + barHeight]\n        ]\n      ],\n      getSourcePosition: d => d[0],\n      getTargetPosition: d => d[1],\n      getWidth: 2,\n      getColor: [220, 220, 220]\n    });\n    const textLayer = new TextLayer({\n      id: `units-label-layer-${id}`,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      data: [\n        {\n          text: String(numUnits).slice(0, 5).replace(/\\.$/, '') + unit,\n          position: [xLeftCoord + barLength * 0.5, yCoord + barHeight * 4]\n        }\n      ],\n      getColor: [220, 220, 220, 255],\n      getSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      sizeUnits: 'meters',\n      sizeScale: 2 ** -zoom,\n      characterSet: [...unit.split(''), ...range(10).map(i => String(i)), '.']\n    });\n    return [lengthBar, tickBoundsLeft, tickBoundsRight, textLayer];\n  }\n};\n\nScaleBarLayer.layerName = 'ScaleBarLayer';\nScaleBarLayer.defaultProps = defaultProps$2;\n\nvar vs = \"#version 300 es\\n#define GLSLIFY 1\\n#define SHADER_NAME xr-layer-vertex-shader\\nin vec3 positions;uniform vec3 eye_pos;uniform mat4 proj;uniform mat4 model;uniform mat4 view;uniform mat4 scale;uniform mat4 resolution;out vec3 vray_dir;flat out vec3 transformed_eye;void main(){gl_Position=proj*view*model*scale*resolution*vec4(positions,1.);/*This first diagram is a skewed volume(i.e a \\\"shear\\\" model matrix applied)top down with the eye marked as #,all in world space^___|__\\\\|\\\\\\\\|\\\\|____|||\\n#\\nThis next diagram shows the volume after the inverse model matrix has placed it back in model coordinates,but the eye still in world space.^___|___|||||||__|__||||\\n#\\nFinally,we apply the inverse model matrix transformation to the eye as well to bring it too into world space.Notice that the ray here matches the \\\"voxels\\\" through which the first ray also passes,as desired.^____/__|/||/||/____|///\\n#\\n*/transformed_eye=(inverse(resolution)*inverse(scale)*inverse(model)*(vec4(eye_pos,1.))).xyz;vray_dir=positions-transformed_eye;}\"; // eslint-disable-line\n\nvar fs$1 = \"#version 300 es\\nprecision highp int;precision highp float;precision highp SAMPLER_TYPE;\\n#define GLSLIFY 1\\nuniform highp SAMPLER_TYPE volume0;uniform highp SAMPLER_TYPE volume1;uniform highp SAMPLER_TYPE volume2;uniform highp SAMPLER_TYPE volume3;uniform highp SAMPLER_TYPE volume4;uniform highp SAMPLER_TYPE volume5;uniform vec3 scaledDimensions;uniform mat4 scale;uniform vec3 normals[NUM_PLANES];uniform float distances[NUM_PLANES];uniform vec2 contrastLimits[6];uniform vec3 colors[6];uniform vec2 xSlice;uniform vec2 ySlice;uniform vec2 zSlice;in vec3 vray_dir;flat in vec3 transformed_eye;out vec4 color;vec2 intersect_box(vec3 orig,vec3 dir){vec3 box_min=vec3(xSlice[0],ySlice[0],zSlice[0]);vec3 box_max=vec3(xSlice[1],ySlice[1],zSlice[1]);vec3 inv_dir=1./dir;vec3 tmin_tmp=(box_min-orig)*inv_dir;vec3 tmax_tmp=(box_max-orig)*inv_dir;vec3 tmin=min(tmin_tmp,tmax_tmp);vec3 tmax=max(tmin_tmp,tmax_tmp);float t0=max(tmin.x,max(tmin.y,tmin.z));float t1=min(tmax.x,min(tmax.y,tmax.z));vec2 val=vec2(t0,t1);return val;}float linear_to_srgb(float x){if(x<=0.0031308f){return 12.92f*x;}return 1.055f*pow(x,1.f/2.4f)-0.055f;}float wang_hash(int seed){seed=(seed ^ 61)^(seed>>16);seed*=9;seed=seed ^(seed>>4);seed*=0x27d4eb2d;seed=seed ^(seed>>15);return float(seed % 2147483647)/float(2147483647);}void main(void){vec3 ray_dir=normalize(vray_dir);vec2 t_hit=intersect_box(transformed_eye,ray_dir);if(t_hit.x>t_hit.y){discard;}t_hit.x=max(t_hit.x,0.);vec3 dt_vec=1./(scale*vec4(abs(ray_dir),1.)).xyz;float dt=1.*min(dt_vec.x,min(dt_vec.y,dt_vec.z));float offset=wang_hash(int(gl_FragCoord.x+640.*gl_FragCoord.y));vec3 p=transformed_eye+(t_hit.x+offset*dt)*ray_dir;_BEFORE_RENDERfor(float t=t_hit.x;t<t_hit.y;t+=dt){float canShow=1.;for(int i=0;i<NUM_PLANES;i+=1){canShow*=max(0.,sign(dot(normals[i],p)+distances[i]));}float canShowXCoordinate=max(p.x-0.,0.)*max(1.-p.x,0.);float canShowYCoordinate=max(p.y-0.,0.)*max(1.-p.y,0.);float canShowZCoordinate=max(p.z-0.,0.)*max(1.-p.z,0.);float canShowCoordinate=float(ceil(canShowXCoordinate*canShowYCoordinate*canShowZCoordinate));canShow=canShowCoordinate*canShow;float intensityValue0=canShow*sample_and_apply_contrast_limits(volume0,p,contrastLimits[0]);float intensityValue1=canShow*sample_and_apply_contrast_limits(volume1,p,contrastLimits[1]);float intensityValue2=canShow*sample_and_apply_contrast_limits(volume2,p,contrastLimits[2]);float intensityValue3=canShow*sample_and_apply_contrast_limits(volume3,p,contrastLimits[3]);float intensityValue4=canShow*sample_and_apply_contrast_limits(volume4,p,contrastLimits[4]);float intensityValue5=canShow*sample_and_apply_contrast_limits(volume5,p,contrastLimits[5]);_RENDERp+=ray_dir*dt;}_AFTER_RENDERcolor.r=linear_to_srgb(color.r);color.g=linear_to_srgb(color.g);color.b=linear_to_srgb(color.b);}\"; // eslint-disable-line\n\nvar fs = \"#define GLSLIFY 1\\nvec4 jet(float x_17){const float e0=0.0;const vec4 v0=vec4(0,0,0.5137254901960784,1);const float e1=0.125;const vec4 v1=vec4(0,0.23529411764705882,0.6666666666666666,1);const float e2=0.375;const vec4 v2=vec4(0.0196078431372549,1,1,1);const float e3=0.625;const vec4 v3=vec4(1,1,0,1);const float e4=0.875;const vec4 v4=vec4(0.9803921568627451,0,0,1);const float e5=1.0;const vec4 v5=vec4(0.5019607843137255,0,0,1);float a0=smoothstep(e0,e1,x_17);float a1=smoothstep(e1,e2,x_17);float a2=smoothstep(e2,e3,x_17);float a3=smoothstep(e3,e4,x_17);float a4=smoothstep(e4,e5,x_17);return max(mix(v0,v1,a0)*step(e0,x_17)*step(x_17,e1),max(mix(v1,v2,a1)*step(e1,x_17)*step(x_17,e2),max(mix(v2,v3,a2)*step(e2,x_17)*step(x_17,e3),max(mix(v3,v4,a3)*step(e3,x_17)*step(x_17,e4),mix(v4,v5,a4)*step(e4,x_17)*step(x_17,e5)))));}vec4 hsv(float x_18){const float e0=0.0;const vec4 v0=vec4(1,0,0,1);const float e1=0.169;const vec4 v1=vec4(0.9921568627450981,1,0.00784313725490196,1);const float e2=0.173;const vec4 v2=vec4(0.9686274509803922,1,0.00784313725490196,1);const float e3=0.337;const vec4 v3=vec4(0,0.9882352941176471,0.01568627450980392,1);const float e4=0.341;const vec4 v4=vec4(0,0.9882352941176471,0.0392156862745098,1);const float e5=0.506;const vec4 v5=vec4(0.00392156862745098,0.9764705882352941,1,1);const float e6=0.671;const vec4 v6=vec4(0.00784313725490196,0,0.9921568627450981,1);const float e7=0.675;const vec4 v7=vec4(0.03137254901960784,0,0.9921568627450981,1);const float e8=0.839;const vec4 v8=vec4(1,0,0.984313725490196,1);const float e9=0.843;const vec4 v9=vec4(1,0,0.9607843137254902,1);const float e10=1.0;const vec4 v10=vec4(1,0,0.023529411764705882,1);float a0=smoothstep(e0,e1,x_18);float a1=smoothstep(e1,e2,x_18);float a2=smoothstep(e2,e3,x_18);float a3=smoothstep(e3,e4,x_18);float a4=smoothstep(e4,e5,x_18);float a5=smoothstep(e5,e6,x_18);float a6=smoothstep(e6,e7,x_18);float a7=smoothstep(e7,e8,x_18);float a8=smoothstep(e8,e9,x_18);float a9=smoothstep(e9,e10,x_18);return max(mix(v0,v1,a0)*step(e0,x_18)*step(x_18,e1),max(mix(v1,v2,a1)*step(e1,x_18)*step(x_18,e2),max(mix(v2,v3,a2)*step(e2,x_18)*step(x_18,e3),max(mix(v3,v4,a3)*step(e3,x_18)*step(x_18,e4),max(mix(v4,v5,a4)*step(e4,x_18)*step(x_18,e5),max(mix(v5,v6,a5)*step(e5,x_18)*step(x_18,e6),max(mix(v6,v7,a6)*step(e6,x_18)*step(x_18,e7),max(mix(v7,v8,a7)*step(e7,x_18)*step(x_18,e8),max(mix(v8,v9,a8)*step(e8,x_18)*step(x_18,e9),mix(v9,v10,a9)*step(e9,x_18)*step(x_18,e10))))))))));}vec4 hot(float x_13){const float e0=0.0;const vec4 v0=vec4(0,0,0,1);const float e1=0.3;const vec4 v1=vec4(0.9019607843137255,0,0,1);const float e2=0.6;const vec4 v2=vec4(1,0.8235294117647058,0,1);const float e3=1.0;const vec4 v3=vec4(1,1,1,1);float a0=smoothstep(e0,e1,x_13);float a1=smoothstep(e1,e2,x_13);float a2=smoothstep(e2,e3,x_13);return max(mix(v0,v1,a0)*step(e0,x_13)*step(x_13,e1),max(mix(v1,v2,a1)*step(e1,x_13)*step(x_13,e2),mix(v2,v3,a2)*step(e2,x_13)*step(x_13,e3)));}vec4 cool(float x_24){const float e0=0.0;const vec4 v0=vec4(0.49019607843137253,0,0.7019607843137254,1);const float e1=0.13;const vec4 v1=vec4(0.4549019607843137,0,0.8549019607843137,1);const float e2=0.25;const vec4 v2=vec4(0.3843137254901961,0.2901960784313726,0.9294117647058824,1);const float e3=0.38;const vec4 v3=vec4(0.26666666666666666,0.5725490196078431,0.9058823529411765,1);const float e4=0.5;const vec4 v4=vec4(0,0.8,0.7725490196078432,1);const float e5=0.63;const vec4 v5=vec4(0,0.9686274509803922,0.5725490196078431,1);const float e6=0.75;const vec4 v6=vec4(0,1,0.34509803921568627,1);const float e7=0.88;const vec4 v7=vec4(0.1568627450980392,1,0.03137254901960784,1);const float e8=1.0;const vec4 v8=vec4(0.5764705882352941,1,0,1);float a0=smoothstep(e0,e1,x_24);float a1=smoothstep(e1,e2,x_24);float a2=smoothstep(e2,e3,x_24);float a3=smoothstep(e3,e4,x_24);float a4=smoothstep(e4,e5,x_24);float a5=smoothstep(e5,e6,x_24);float a6=smoothstep(e6,e7,x_24);float a7=smoothstep(e7,e8,x_24);return max(mix(v0,v1,a0)*step(e0,x_24)*step(x_24,e1),max(mix(v1,v2,a1)*step(e1,x_24)*step(x_24,e2),max(mix(v2,v3,a2)*step(e2,x_24)*step(x_24,e3),max(mix(v3,v4,a3)*step(e3,x_24)*step(x_24,e4),max(mix(v4,v5,a4)*step(e4,x_24)*step(x_24,e5),max(mix(v5,v6,a5)*step(e5,x_24)*step(x_24,e6),max(mix(v6,v7,a6)*step(e6,x_24)*step(x_24,e7),mix(v7,v8,a7)*step(e7,x_24)*step(x_24,e8))))))));}vec4 spring(float x_5){const float e0=0.0;const vec4 v0=vec4(1,0,1,1);const float e1=1.0;const vec4 v1=vec4(1,1,0,1);float a0=smoothstep(e0,e1,x_5);return mix(v0,v1,a0)*step(e0,x_5)*step(x_5,e1);}vec4 summer(float x_12){const float e0=0.0;const vec4 v0=vec4(0,0.5019607843137255,0.4,1);const float e1=1.0;const vec4 v1=vec4(1,1,0.4,1);float a0=smoothstep(e0,e1,x_12);return mix(v0,v1,a0)*step(e0,x_12)*step(x_12,e1);}vec4 autumn(float x_25){const float e0=0.0;const vec4 v0=vec4(1,0,0,1);const float e1=1.0;const vec4 v1=vec4(1,1,0,1);float a0=smoothstep(e0,e1,x_25);return mix(v0,v1,a0)*step(e0,x_25)*step(x_25,e1);}vec4 winter(float x_16){const float e0=0.0;const vec4 v0=vec4(0,0,1,1);const float e1=1.0;const vec4 v1=vec4(0,1,0.5019607843137255,1);float a0=smoothstep(e0,e1,x_16);return mix(v0,v1,a0)*step(e0,x_16)*step(x_16,e1);}vec4 bone(float x_15){const float e0=0.0;const vec4 v0=vec4(0,0,0,1);const float e1=0.376;const vec4 v1=vec4(0.32941176470588235,0.32941176470588235,0.4549019607843137,1);const float e2=0.753;const vec4 v2=vec4(0.6627450980392157,0.7843137254901961,0.7843137254901961,1);const float e3=1.0;const vec4 v3=vec4(1,1,1,1);float a0=smoothstep(e0,e1,x_15);float a1=smoothstep(e1,e2,x_15);float a2=smoothstep(e2,e3,x_15);return max(mix(v0,v1,a0)*step(e0,x_15)*step(x_15,e1),max(mix(v1,v2,a1)*step(e1,x_15)*step(x_15,e2),mix(v2,v3,a2)*step(e2,x_15)*step(x_15,e3)));}vec4 copper(float x_10){const float e0=0.0;const vec4 v0=vec4(0,0,0,1);const float e1=0.804;const vec4 v1=vec4(1,0.6274509803921569,0.4,1);const float e2=1.0;const vec4 v2=vec4(1,0.7803921568627451,0.4980392156862745,1);float a0=smoothstep(e0,e1,x_10);float a1=smoothstep(e1,e2,x_10);return max(mix(v0,v1,a0)*step(e0,x_10)*step(x_10,e1),mix(v1,v2,a1)*step(e1,x_10)*step(x_10,e2));}vec4 greys(float x_4){const float e0=0.0;const vec4 v0=vec4(0,0,0,1);const float e1=1.0;const vec4 v1=vec4(1,1,1,1);float a0=smoothstep(e0,e1,x_4);return mix(v0,v1,a0)*step(e0,x_4)*step(x_4,e1);}vec4 yignbu(float x_32){const float e0=0.0;const vec4 v0=vec4(0.03137254901960784,0.11372549019607843,0.34509803921568627,1);const float e1=0.125;const vec4 v1=vec4(0.1450980392156863,0.20392156862745098,0.5803921568627451,1);const float e2=0.25;const vec4 v2=vec4(0.13333333333333333,0.3686274509803922,0.6588235294117647,1);const float e3=0.375;const vec4 v3=vec4(0.11372549019607843,0.5686274509803921,0.7529411764705882,1);const float e4=0.5;const vec4 v4=vec4(0.2549019607843137,0.7137254901960784,0.7686274509803922,1);const float e5=0.625;const vec4 v5=vec4(0.4980392156862745,0.803921568627451,0.7333333333333333,1);const float e6=0.75;const vec4 v6=vec4(0.7803921568627451,0.9137254901960784,0.7058823529411765,1);const float e7=0.875;const vec4 v7=vec4(0.9294117647058824,0.9725490196078431,0.8509803921568627,1);const float e8=1.0;const vec4 v8=vec4(1,1,0.8509803921568627,1);float a0=smoothstep(e0,e1,x_32);float a1=smoothstep(e1,e2,x_32);float a2=smoothstep(e2,e3,x_32);float a3=smoothstep(e3,e4,x_32);float a4=smoothstep(e4,e5,x_32);float a5=smoothstep(e5,e6,x_32);float a6=smoothstep(e6,e7,x_32);float a7=smoothstep(e7,e8,x_32);return max(mix(v0,v1,a0)*step(e0,x_32)*step(x_32,e1),max(mix(v1,v2,a1)*step(e1,x_32)*step(x_32,e2),max(mix(v2,v3,a2)*step(e2,x_32)*step(x_32,e3),max(mix(v3,v4,a3)*step(e3,x_32)*step(x_32,e4),max(mix(v4,v5,a4)*step(e4,x_32)*step(x_32,e5),max(mix(v5,v6,a5)*step(e5,x_32)*step(x_32,e6),max(mix(v6,v7,a6)*step(e6,x_32)*step(x_32,e7),mix(v7,v8,a7)*step(e7,x_32)*step(x_32,e8))))))));}vec4 greens(float x_34){const float e0=0.0;const vec4 v0=vec4(0,0.26666666666666666,0.10588235294117647,1);const float e1=0.125;const vec4 v1=vec4(0,0.42745098039215684,0.17254901960784313,1);const float e2=0.25;const vec4 v2=vec4(0.13725490196078433,0.5450980392156862,0.27058823529411763,1);const float e3=0.375;const vec4 v3=vec4(0.2549019607843137,0.6705882352941176,0.36470588235294116,1);const float e4=0.5;const vec4 v4=vec4(0.4549019607843137,0.7686274509803922,0.4627450980392157,1);const float e5=0.625;const vec4 v5=vec4(0.6313725490196078,0.8509803921568627,0.6078431372549019,1);const float e6=0.75;const vec4 v6=vec4(0.7803921568627451,0.9137254901960784,0.7529411764705882,1);const float e7=0.875;const vec4 v7=vec4(0.8980392156862745,0.9607843137254902,0.8784313725490196,1);const float e8=1.0;const vec4 v8=vec4(0.9686274509803922,0.9882352941176471,0.9607843137254902,1);float a0=smoothstep(e0,e1,x_34);float a1=smoothstep(e1,e2,x_34);float a2=smoothstep(e2,e3,x_34);float a3=smoothstep(e3,e4,x_34);float a4=smoothstep(e4,e5,x_34);float a5=smoothstep(e5,e6,x_34);float a6=smoothstep(e6,e7,x_34);float a7=smoothstep(e7,e8,x_34);return max(mix(v0,v1,a0)*step(e0,x_34)*step(x_34,e1),max(mix(v1,v2,a1)*step(e1,x_34)*step(x_34,e2),max(mix(v2,v3,a2)*step(e2,x_34)*step(x_34,e3),max(mix(v3,v4,a3)*step(e3,x_34)*step(x_34,e4),max(mix(v4,v5,a4)*step(e4,x_34)*step(x_34,e5),max(mix(v5,v6,a5)*step(e5,x_34)*step(x_34,e6),max(mix(v6,v7,a6)*step(e6,x_34)*step(x_34,e7),mix(v7,v8,a7)*step(e7,x_34)*step(x_34,e8))))))));}vec4 yiorrd(float x_41){const float e0=0.0;const vec4 v0=vec4(0.5019607843137255,0,0.14901960784313725,1);const float e1=0.125;const vec4 v1=vec4(0.7411764705882353,0,0.14901960784313725,1);const float e2=0.25;const vec4 v2=vec4(0.8901960784313725,0.10196078431372549,0.10980392156862745,1);const float e3=0.375;const vec4 v3=vec4(0.9882352941176471,0.3058823529411765,0.16470588235294117,1);const float e4=0.5;const vec4 v4=vec4(0.9921568627450981,0.5529411764705883,0.23529411764705882,1);const float e5=0.625;const vec4 v5=vec4(0.996078431372549,0.6980392156862745,0.2980392156862745,1);const float e6=0.75;const vec4 v6=vec4(0.996078431372549,0.8509803921568627,0.4627450980392157,1);const float e7=0.875;const vec4 v7=vec4(1,0.9294117647058824,0.6274509803921569,1);const float e8=1.0;const vec4 v8=vec4(1,1,0.8,1);float a0=smoothstep(e0,e1,x_41);float a1=smoothstep(e1,e2,x_41);float a2=smoothstep(e2,e3,x_41);float a3=smoothstep(e3,e4,x_41);float a4=smoothstep(e4,e5,x_41);float a5=smoothstep(e5,e6,x_41);float a6=smoothstep(e6,e7,x_41);float a7=smoothstep(e7,e8,x_41);return max(mix(v0,v1,a0)*step(e0,x_41)*step(x_41,e1),max(mix(v1,v2,a1)*step(e1,x_41)*step(x_41,e2),max(mix(v2,v3,a2)*step(e2,x_41)*step(x_41,e3),max(mix(v3,v4,a3)*step(e3,x_41)*step(x_41,e4),max(mix(v4,v5,a4)*step(e4,x_41)*step(x_41,e5),max(mix(v5,v6,a5)*step(e5,x_41)*step(x_41,e6),max(mix(v6,v7,a6)*step(e6,x_41)*step(x_41,e7),mix(v7,v8,a7)*step(e7,x_41)*step(x_41,e8))))))));}vec4 bluered(float x_23){const float e0=0.0;const vec4 v0=vec4(0,0,1,1);const float e1=1.0;const vec4 v1=vec4(1,0,0,1);float a0=smoothstep(e0,e1,x_23);return mix(v0,v1,a0)*step(e0,x_23)*step(x_23,e1);}vec4 rdbu(float x_1){const float e0=0.0;const vec4 v0=vec4(0.0196078431372549,0.0392156862745098,0.6745098039215687,1);const float e1=0.35;const vec4 v1=vec4(0.41568627450980394,0.5372549019607843,0.9686274509803922,1);const float e2=0.5;const vec4 v2=vec4(0.7450980392156863,0.7450980392156863,0.7450980392156863,1);const float e3=0.6;const vec4 v3=vec4(0.8627450980392157,0.6666666666666666,0.5176470588235295,1);const float e4=0.7;const vec4 v4=vec4(0.9019607843137255,0.5686274509803921,0.35294117647058826,1);const float e5=1.0;const vec4 v5=vec4(0.6980392156862745,0.0392156862745098,0.10980392156862745,1);float a0=smoothstep(e0,e1,x_1);float a1=smoothstep(e1,e2,x_1);float a2=smoothstep(e2,e3,x_1);float a3=smoothstep(e3,e4,x_1);float a4=smoothstep(e4,e5,x_1);return max(mix(v0,v1,a0)*step(e0,x_1)*step(x_1,e1),max(mix(v1,v2,a1)*step(e1,x_1)*step(x_1,e2),max(mix(v2,v3,a2)*step(e2,x_1)*step(x_1,e3),max(mix(v3,v4,a3)*step(e3,x_1)*step(x_1,e4),mix(v4,v5,a4)*step(e4,x_1)*step(x_1,e5)))));}vec4 picnic(float x_42){const float e0=0.0;const vec4 v0=vec4(0,0,1,1);const float e1=0.1;const vec4 v1=vec4(0.2,0.6,1,1);const float e2=0.2;const vec4 v2=vec4(0.4,0.8,1,1);const float e3=0.3;const vec4 v3=vec4(0.6,0.8,1,1);const float e4=0.4;const vec4 v4=vec4(0.8,0.8,1,1);const float e5=0.5;const vec4 v5=vec4(1,1,1,1);const float e6=0.6;const vec4 v6=vec4(1,0.8,1,1);const float e7=0.7;const vec4 v7=vec4(1,0.6,1,1);const float e8=0.8;const vec4 v8=vec4(1,0.4,0.8,1);const float e9=0.9;const vec4 v9=vec4(1,0.4,0.4,1);const float e10=1.0;const vec4 v10=vec4(1,0,0,1);float a0=smoothstep(e0,e1,x_42);float a1=smoothstep(e1,e2,x_42);float a2=smoothstep(e2,e3,x_42);float a3=smoothstep(e3,e4,x_42);float a4=smoothstep(e4,e5,x_42);float a5=smoothstep(e5,e6,x_42);float a6=smoothstep(e6,e7,x_42);float a7=smoothstep(e7,e8,x_42);float a8=smoothstep(e8,e9,x_42);float a9=smoothstep(e9,e10,x_42);return max(mix(v0,v1,a0)*step(e0,x_42)*step(x_42,e1),max(mix(v1,v2,a1)*step(e1,x_42)*step(x_42,e2),max(mix(v2,v3,a2)*step(e2,x_42)*step(x_42,e3),max(mix(v3,v4,a3)*step(e3,x_42)*step(x_42,e4),max(mix(v4,v5,a4)*step(e4,x_42)*step(x_42,e5),max(mix(v5,v6,a5)*step(e5,x_42)*step(x_42,e6),max(mix(v6,v7,a6)*step(e6,x_42)*step(x_42,e7),max(mix(v7,v8,a7)*step(e7,x_42)*step(x_42,e8),max(mix(v8,v9,a8)*step(e8,x_42)*step(x_42,e9),mix(v9,v10,a9)*step(e9,x_42)*step(x_42,e10))))))))));}vec4 rainbow(float x_31){const float e0=0.0;const vec4 v0=vec4(0.5882352941176471,0,0.35294117647058826,1);const float e1=0.125;const vec4 v1=vec4(0,0,0.7843137254901961,1);const float e2=0.25;const vec4 v2=vec4(0,0.09803921568627451,1,1);const float e3=0.375;const vec4 v3=vec4(0,0.596078431372549,1,1);const float e4=0.5;const vec4 v4=vec4(0.17254901960784313,1,0.5882352941176471,1);const float e5=0.625;const vec4 v5=vec4(0.592156862745098,1,0,1);const float e6=0.75;const vec4 v6=vec4(1,0.9176470588235294,0,1);const float e7=0.875;const vec4 v7=vec4(1,0.43529411764705883,0,1);const float e8=1.0;const vec4 v8=vec4(1,0,0,1);float a0=smoothstep(e0,e1,x_31);float a1=smoothstep(e1,e2,x_31);float a2=smoothstep(e2,e3,x_31);float a3=smoothstep(e3,e4,x_31);float a4=smoothstep(e4,e5,x_31);float a5=smoothstep(e5,e6,x_31);float a6=smoothstep(e6,e7,x_31);float a7=smoothstep(e7,e8,x_31);return max(mix(v0,v1,a0)*step(e0,x_31)*step(x_31,e1),max(mix(v1,v2,a1)*step(e1,x_31)*step(x_31,e2),max(mix(v2,v3,a2)*step(e2,x_31)*step(x_31,e3),max(mix(v3,v4,a3)*step(e3,x_31)*step(x_31,e4),max(mix(v4,v5,a4)*step(e4,x_31)*step(x_31,e5),max(mix(v5,v6,a5)*step(e5,x_31)*step(x_31,e6),max(mix(v6,v7,a6)*step(e6,x_31)*step(x_31,e7),mix(v7,v8,a7)*step(e7,x_31)*step(x_31,e8))))))));}vec4 portland(float x_21){const float e0=0.0;const vec4 v0=vec4(0.047058823529411764,0.2,0.5137254901960784,1);const float e1=0.25;const vec4 v1=vec4(0.0392156862745098,0.5333333333333333,0.7294117647058823,1);const float e2=0.5;const vec4 v2=vec4(0.9490196078431372,0.8274509803921568,0.2196078431372549,1);const float e3=0.75;const vec4 v3=vec4(0.9490196078431372,0.5607843137254902,0.2196078431372549,1);const float e4=1.0;const vec4 v4=vec4(0.8509803921568627,0.11764705882352941,0.11764705882352941,1);float a0=smoothstep(e0,e1,x_21);float a1=smoothstep(e1,e2,x_21);float a2=smoothstep(e2,e3,x_21);float a3=smoothstep(e3,e4,x_21);return max(mix(v0,v1,a0)*step(e0,x_21)*step(x_21,e1),max(mix(v1,v2,a1)*step(e1,x_21)*step(x_21,e2),max(mix(v2,v3,a2)*step(e2,x_21)*step(x_21,e3),mix(v3,v4,a3)*step(e3,x_21)*step(x_21,e4))));}vec4 blackbody(float x_38){const float e0=0.0;const vec4 v0=vec4(0,0,0,1);const float e1=0.2;const vec4 v1=vec4(0.9019607843137255,0,0,1);const float e2=0.4;const vec4 v2=vec4(0.9019607843137255,0.8235294117647058,0,1);const float e3=0.7;const vec4 v3=vec4(1,1,1,1);const float e4=1.0;const vec4 v4=vec4(0.6274509803921569,0.7843137254901961,1,1);float a0=smoothstep(e0,e1,x_38);float a1=smoothstep(e1,e2,x_38);float a2=smoothstep(e2,e3,x_38);float a3=smoothstep(e3,e4,x_38);return max(mix(v0,v1,a0)*step(e0,x_38)*step(x_38,e1),max(mix(v1,v2,a1)*step(e1,x_38)*step(x_38,e2),max(mix(v2,v3,a2)*step(e2,x_38)*step(x_38,e3),mix(v3,v4,a3)*step(e3,x_38)*step(x_38,e4))));}vec4 earth(float x_29){const float e0=0.0;const vec4 v0=vec4(0,0,0.5098039215686274,1);const float e1=0.1;const vec4 v1=vec4(0,0.7058823529411765,0.7058823529411765,1);const float e2=0.2;const vec4 v2=vec4(0.1568627450980392,0.8235294117647058,0.1568627450980392,1);const float e3=0.4;const vec4 v3=vec4(0.9019607843137255,0.9019607843137255,0.19607843137254902,1);const float e4=0.6;const vec4 v4=vec4(0.47058823529411764,0.27450980392156865,0.0784313725490196,1);const float e5=1.0;const vec4 v5=vec4(1,1,1,1);float a0=smoothstep(e0,e1,x_29);float a1=smoothstep(e1,e2,x_29);float a2=smoothstep(e2,e3,x_29);float a3=smoothstep(e3,e4,x_29);float a4=smoothstep(e4,e5,x_29);return max(mix(v0,v1,a0)*step(e0,x_29)*step(x_29,e1),max(mix(v1,v2,a1)*step(e1,x_29)*step(x_29,e2),max(mix(v2,v3,a2)*step(e2,x_29)*step(x_29,e3),max(mix(v3,v4,a3)*step(e3,x_29)*step(x_29,e4),mix(v4,v5,a4)*step(e4,x_29)*step(x_29,e5)))));}vec4 electric(float x_9){const float e0=0.0;const vec4 v0=vec4(0,0,0,1);const float e1=0.15;const vec4 v1=vec4(0.11764705882352941,0,0.39215686274509803,1);const float e2=0.4;const vec4 v2=vec4(0.47058823529411764,0,0.39215686274509803,1);const float e3=0.6;const vec4 v3=vec4(0.6274509803921569,0.35294117647058826,0,1);const float e4=0.8;const vec4 v4=vec4(0.9019607843137255,0.7843137254901961,0,1);const float e5=1.0;const vec4 v5=vec4(1,0.9803921568627451,0.8627450980392157,1);float a0=smoothstep(e0,e1,x_9);float a1=smoothstep(e1,e2,x_9);float a2=smoothstep(e2,e3,x_9);float a3=smoothstep(e3,e4,x_9);float a4=smoothstep(e4,e5,x_9);return max(mix(v0,v1,a0)*step(e0,x_9)*step(x_9,e1),max(mix(v1,v2,a1)*step(e1,x_9)*step(x_9,e2),max(mix(v2,v3,a2)*step(e2,x_9)*step(x_9,e3),max(mix(v3,v4,a3)*step(e3,x_9)*step(x_9,e4),mix(v4,v5,a4)*step(e4,x_9)*step(x_9,e5)))));}vec4 alpha(float x_0){const float e0=0.0;const vec4 v0=vec4(1,1,1,0);const float e1=1.0;const vec4 v1=vec4(1,1,1,1);float a0=smoothstep(e0,e1,x_0);return mix(v0,v1,a0)*step(e0,x_0)*step(x_0,e1);}vec4 viridis(float x_22){const float e0=0.0;const vec4 v0=vec4(0.26666666666666666,0.00392156862745098,0.32941176470588235,1);const float e1=0.13;const vec4 v1=vec4(0.2784313725490196,0.17254901960784313,0.47843137254901963,1);const float e2=0.25;const vec4 v2=vec4(0.23137254901960785,0.3176470588235294,0.5450980392156862,1);const float e3=0.38;const vec4 v3=vec4(0.17254901960784313,0.44313725490196076,0.5568627450980392,1);const float e4=0.5;const vec4 v4=vec4(0.12941176470588237,0.5647058823529412,0.5529411764705883,1);const float e5=0.63;const vec4 v5=vec4(0.15294117647058825,0.6784313725490196,0.5058823529411764,1);const float e6=0.75;const vec4 v6=vec4(0.3607843137254902,0.7843137254901961,0.38823529411764707,1);const float e7=0.88;const vec4 v7=vec4(0.6666666666666666,0.8627450980392157,0.19607843137254902,1);const float e8=1.0;const vec4 v8=vec4(0.9921568627450981,0.9058823529411765,0.1450980392156863,1);float a0=smoothstep(e0,e1,x_22);float a1=smoothstep(e1,e2,x_22);float a2=smoothstep(e2,e3,x_22);float a3=smoothstep(e3,e4,x_22);float a4=smoothstep(e4,e5,x_22);float a5=smoothstep(e5,e6,x_22);float a6=smoothstep(e6,e7,x_22);float a7=smoothstep(e7,e8,x_22);return max(mix(v0,v1,a0)*step(e0,x_22)*step(x_22,e1),max(mix(v1,v2,a1)*step(e1,x_22)*step(x_22,e2),max(mix(v2,v3,a2)*step(e2,x_22)*step(x_22,e3),max(mix(v3,v4,a3)*step(e3,x_22)*step(x_22,e4),max(mix(v4,v5,a4)*step(e4,x_22)*step(x_22,e5),max(mix(v5,v6,a5)*step(e5,x_22)*step(x_22,e6),max(mix(v6,v7,a6)*step(e6,x_22)*step(x_22,e7),mix(v7,v8,a7)*step(e7,x_22)*step(x_22,e8))))))));}vec4 inferno(float x_30){const float e0=0.0;const vec4 v0=vec4(0,0,0.01568627450980392,1);const float e1=0.13;const vec4 v1=vec4(0.12156862745098039,0.047058823529411764,0.2823529411764706,1);const float e2=0.25;const vec4 v2=vec4(0.3333333333333333,0.058823529411764705,0.42745098039215684,1);const float e3=0.38;const vec4 v3=vec4(0.5333333333333333,0.13333333333333333,0.41568627450980394,1);const float e4=0.5;const vec4 v4=vec4(0.7294117647058823,0.21176470588235294,0.3333333333333333,1);const float e5=0.63;const vec4 v5=vec4(0.8901960784313725,0.34901960784313724,0.2,1);const float e6=0.75;const vec4 v6=vec4(0.9764705882352941,0.5490196078431373,0.0392156862745098,1);const float e7=0.88;const vec4 v7=vec4(0.9764705882352941,0.788235294117647,0.19607843137254902,1);const float e8=1.0;const vec4 v8=vec4(0.9882352941176471,1,0.6431372549019608,1);float a0=smoothstep(e0,e1,x_30);float a1=smoothstep(e1,e2,x_30);float a2=smoothstep(e2,e3,x_30);float a3=smoothstep(e3,e4,x_30);float a4=smoothstep(e4,e5,x_30);float a5=smoothstep(e5,e6,x_30);float a6=smoothstep(e6,e7,x_30);float a7=smoothstep(e7,e8,x_30);return max(mix(v0,v1,a0)*step(e0,x_30)*step(x_30,e1),max(mix(v1,v2,a1)*step(e1,x_30)*step(x_30,e2),max(mix(v2,v3,a2)*step(e2,x_30)*step(x_30,e3),max(mix(v3,v4,a3)*step(e3,x_30)*step(x_30,e4),max(mix(v4,v5,a4)*step(e4,x_30)*step(x_30,e5),max(mix(v5,v6,a5)*step(e5,x_30)*step(x_30,e6),max(mix(v6,v7,a6)*step(e6,x_30)*step(x_30,e7),mix(v7,v8,a7)*step(e7,x_30)*step(x_30,e8))))))));}vec4 magma(float x_33){const float e0=0.0;const vec4 v0=vec4(0,0,0.01568627450980392,1);const float e1=0.13;const vec4 v1=vec4(0.10980392156862745,0.06274509803921569,0.26666666666666666,1);const float e2=0.25;const vec4 v2=vec4(0.30980392156862746,0.07058823529411765,0.4823529411764706,1);const float e3=0.38;const vec4 v3=vec4(0.5058823529411764,0.1450980392156863,0.5058823529411764,1);const float e4=0.5;const vec4 v4=vec4(0.7098039215686275,0.21176470588235294,0.47843137254901963,1);const float e5=0.63;const vec4 v5=vec4(0.8980392156862745,0.3137254901960784,0.39215686274509803,1);const float e6=0.75;const vec4 v6=vec4(0.984313725490196,0.5294117647058824,0.3803921568627451,1);const float e7=0.88;const vec4 v7=vec4(0.996078431372549,0.7607843137254902,0.5294117647058824,1);const float e8=1.0;const vec4 v8=vec4(0.9882352941176471,0.9921568627450981,0.7490196078431373,1);float a0=smoothstep(e0,e1,x_33);float a1=smoothstep(e1,e2,x_33);float a2=smoothstep(e2,e3,x_33);float a3=smoothstep(e3,e4,x_33);float a4=smoothstep(e4,e5,x_33);float a5=smoothstep(e5,e6,x_33);float a6=smoothstep(e6,e7,x_33);float a7=smoothstep(e7,e8,x_33);return max(mix(v0,v1,a0)*step(e0,x_33)*step(x_33,e1),max(mix(v1,v2,a1)*step(e1,x_33)*step(x_33,e2),max(mix(v2,v3,a2)*step(e2,x_33)*step(x_33,e3),max(mix(v3,v4,a3)*step(e3,x_33)*step(x_33,e4),max(mix(v4,v5,a4)*step(e4,x_33)*step(x_33,e5),max(mix(v5,v6,a5)*step(e5,x_33)*step(x_33,e6),max(mix(v6,v7,a6)*step(e6,x_33)*step(x_33,e7),mix(v7,v8,a7)*step(e7,x_33)*step(x_33,e8))))))));}vec4 plasma(float x_3){const float e0=0.0;const vec4 v0=vec4(0.050980392156862744,0.03137254901960784,0.5294117647058824,1);const float e1=0.13;const vec4 v1=vec4(0.29411764705882354,0.011764705882352941,0.6313725490196078,1);const float e2=0.25;const vec4 v2=vec4(0.49019607843137253,0.011764705882352941,0.6588235294117647,1);const float e3=0.38;const vec4 v3=vec4(0.6588235294117647,0.13333333333333333,0.5882352941176471,1);const float e4=0.5;const vec4 v4=vec4(0.796078431372549,0.27450980392156865,0.4745098039215686,1);const float e5=0.63;const vec4 v5=vec4(0.8980392156862745,0.4196078431372549,0.36470588235294116,1);const float e6=0.75;const vec4 v6=vec4(0.9725490196078431,0.5803921568627451,0.2549019607843137,1);const float e7=0.88;const vec4 v7=vec4(0.9921568627450981,0.7647058823529411,0.1568627450980392,1);const float e8=1.0;const vec4 v8=vec4(0.9411764705882353,0.9764705882352941,0.12941176470588237,1);float a0=smoothstep(e0,e1,x_3);float a1=smoothstep(e1,e2,x_3);float a2=smoothstep(e2,e3,x_3);float a3=smoothstep(e3,e4,x_3);float a4=smoothstep(e4,e5,x_3);float a5=smoothstep(e5,e6,x_3);float a6=smoothstep(e6,e7,x_3);float a7=smoothstep(e7,e8,x_3);return max(mix(v0,v1,a0)*step(e0,x_3)*step(x_3,e1),max(mix(v1,v2,a1)*step(e1,x_3)*step(x_3,e2),max(mix(v2,v3,a2)*step(e2,x_3)*step(x_3,e3),max(mix(v3,v4,a3)*step(e3,x_3)*step(x_3,e4),max(mix(v4,v5,a4)*step(e4,x_3)*step(x_3,e5),max(mix(v5,v6,a5)*step(e5,x_3)*step(x_3,e6),max(mix(v6,v7,a6)*step(e6,x_3)*step(x_3,e7),mix(v7,v8,a7)*step(e7,x_3)*step(x_3,e8))))))));}vec4 warm(float x_43){const float e0=0.0;const vec4 v0=vec4(0.49019607843137253,0,0.7019607843137254,1);const float e1=0.13;const vec4 v1=vec4(0.6745098039215687,0,0.7333333333333333,1);const float e2=0.25;const vec4 v2=vec4(0.8588235294117647,0,0.6666666666666666,1);const float e3=0.38;const vec4 v3=vec4(1,0,0.5098039215686274,1);const float e4=0.5;const vec4 v4=vec4(1,0.24705882352941178,0.2901960784313726,1);const float e5=0.63;const vec4 v5=vec4(1,0.4823529411764706,0,1);const float e6=0.75;const vec4 v6=vec4(0.9176470588235294,0.6901960784313725,0,1);const float e7=0.88;const vec4 v7=vec4(0.7450980392156863,0.8941176470588236,0,1);const float e8=1.0;const vec4 v8=vec4(0.5764705882352941,1,0,1);float a0=smoothstep(e0,e1,x_43);float a1=smoothstep(e1,e2,x_43);float a2=smoothstep(e2,e3,x_43);float a3=smoothstep(e3,e4,x_43);float a4=smoothstep(e4,e5,x_43);float a5=smoothstep(e5,e6,x_43);float a6=smoothstep(e6,e7,x_43);float a7=smoothstep(e7,e8,x_43);return max(mix(v0,v1,a0)*step(e0,x_43)*step(x_43,e1),max(mix(v1,v2,a1)*step(e1,x_43)*step(x_43,e2),max(mix(v2,v3,a2)*step(e2,x_43)*step(x_43,e3),max(mix(v3,v4,a3)*step(e3,x_43)*step(x_43,e4),max(mix(v4,v5,a4)*step(e4,x_43)*step(x_43,e5),max(mix(v5,v6,a5)*step(e5,x_43)*step(x_43,e6),max(mix(v6,v7,a6)*step(e6,x_43)*step(x_43,e7),mix(v7,v8,a7)*step(e7,x_43)*step(x_43,e8))))))));}vec4 rainbow_soft_1310269270(float x_14){const float e0=0.0;const vec4 v0=vec4(0.49019607843137253,0,0.7019607843137254,1);const float e1=0.1;const vec4 v1=vec4(0.7803921568627451,0,0.7058823529411765,1);const float e2=0.2;const vec4 v2=vec4(1,0,0.4745098039215686,1);const float e3=0.3;const vec4 v3=vec4(1,0.4235294117647059,0,1);const float e4=0.4;const vec4 v4=vec4(0.8705882352941177,0.7607843137254902,0,1);const float e5=0.5;const vec4 v5=vec4(0.5882352941176471,1,0,1);const float e6=0.6;const vec4 v6=vec4(0,1,0.21568627450980393,1);const float e7=0.7;const vec4 v7=vec4(0,0.9647058823529412,0.5882352941176471,1);const float e8=0.8;const vec4 v8=vec4(0.19607843137254902,0.6549019607843137,0.8705882352941177,1);const float e9=0.9;const vec4 v9=vec4(0.403921568627451,0.2,0.9215686274509803,1);const float e10=1.0;const vec4 v10=vec4(0.48627450980392156,0,0.7294117647058823,1);float a0=smoothstep(e0,e1,x_14);float a1=smoothstep(e1,e2,x_14);float a2=smoothstep(e2,e3,x_14);float a3=smoothstep(e3,e4,x_14);float a4=smoothstep(e4,e5,x_14);float a5=smoothstep(e5,e6,x_14);float a6=smoothstep(e6,e7,x_14);float a7=smoothstep(e7,e8,x_14);float a8=smoothstep(e8,e9,x_14);float a9=smoothstep(e9,e10,x_14);return max(mix(v0,v1,a0)*step(e0,x_14)*step(x_14,e1),max(mix(v1,v2,a1)*step(e1,x_14)*step(x_14,e2),max(mix(v2,v3,a2)*step(e2,x_14)*step(x_14,e3),max(mix(v3,v4,a3)*step(e3,x_14)*step(x_14,e4),max(mix(v4,v5,a4)*step(e4,x_14)*step(x_14,e5),max(mix(v5,v6,a5)*step(e5,x_14)*step(x_14,e6),max(mix(v6,v7,a6)*step(e6,x_14)*step(x_14,e7),max(mix(v7,v8,a7)*step(e7,x_14)*step(x_14,e8),max(mix(v8,v9,a8)*step(e8,x_14)*step(x_14,e9),mix(v9,v10,a9)*step(e9,x_14)*step(x_14,e10))))))))));}vec4 bathymetry(float x_36){const float e0=0.0;const vec4 v0=vec4(0.1568627450980392,0.10196078431372549,0.17254901960784313,1);const float e1=0.13;const vec4 v1=vec4(0.23137254901960785,0.19215686274509805,0.35294117647058826,1);const float e2=0.25;const vec4 v2=vec4(0.25098039215686274,0.2980392156862745,0.5450980392156862,1);const float e3=0.38;const vec4 v3=vec4(0.24705882352941178,0.43137254901960786,0.592156862745098,1);const float e4=0.5;const vec4 v4=vec4(0.2823529411764706,0.5568627450980392,0.6196078431372549,1);const float e5=0.63;const vec4 v5=vec4(0.3333333333333333,0.6823529411764706,0.6392156862745098,1);const float e6=0.75;const vec4 v6=vec4(0.47058823529411764,0.807843137254902,0.6392156862745098,1);const float e7=0.88;const vec4 v7=vec4(0.7333333333333333,0.9019607843137255,0.6745098039215687,1);const float e8=1.0;const vec4 v8=vec4(0.9921568627450981,0.996078431372549,0.8,1);float a0=smoothstep(e0,e1,x_36);float a1=smoothstep(e1,e2,x_36);float a2=smoothstep(e2,e3,x_36);float a3=smoothstep(e3,e4,x_36);float a4=smoothstep(e4,e5,x_36);float a5=smoothstep(e5,e6,x_36);float a6=smoothstep(e6,e7,x_36);float a7=smoothstep(e7,e8,x_36);return max(mix(v0,v1,a0)*step(e0,x_36)*step(x_36,e1),max(mix(v1,v2,a1)*step(e1,x_36)*step(x_36,e2),max(mix(v2,v3,a2)*step(e2,x_36)*step(x_36,e3),max(mix(v3,v4,a3)*step(e3,x_36)*step(x_36,e4),max(mix(v4,v5,a4)*step(e4,x_36)*step(x_36,e5),max(mix(v5,v6,a5)*step(e5,x_36)*step(x_36,e6),max(mix(v6,v7,a6)*step(e6,x_36)*step(x_36,e7),mix(v7,v8,a7)*step(e7,x_36)*step(x_36,e8))))))));}vec4 cdom(float x_7){const float e0=0.0;const vec4 v0=vec4(0.1843137254901961,0.058823529411764705,0.24313725490196078,1);const float e1=0.13;const vec4 v1=vec4(0.3411764705882353,0.09019607843137255,0.33725490196078434,1);const float e2=0.25;const vec4 v2=vec4(0.5098039215686274,0.10980392156862745,0.38823529411764707,1);const float e3=0.38;const vec4 v3=vec4(0.6705882352941176,0.1607843137254902,0.3764705882352941,1);const float e4=0.5;const vec4 v4=vec4(0.807843137254902,0.2627450980392157,0.33725490196078434,1);const float e5=0.63;const vec4 v5=vec4(0.9019607843137255,0.41568627450980394,0.32941176470588235,1);const float e6=0.75;const vec4 v6=vec4(0.9490196078431372,0.5843137254901961,0.403921568627451,1);const float e7=0.88;const vec4 v7=vec4(0.9764705882352941,0.7568627450980392,0.5294117647058824,1);const float e8=1.0;const vec4 v8=vec4(0.996078431372549,0.9294117647058824,0.6901960784313725,1);float a0=smoothstep(e0,e1,x_7);float a1=smoothstep(e1,e2,x_7);float a2=smoothstep(e2,e3,x_7);float a3=smoothstep(e3,e4,x_7);float a4=smoothstep(e4,e5,x_7);float a5=smoothstep(e5,e6,x_7);float a6=smoothstep(e6,e7,x_7);float a7=smoothstep(e7,e8,x_7);return max(mix(v0,v1,a0)*step(e0,x_7)*step(x_7,e1),max(mix(v1,v2,a1)*step(e1,x_7)*step(x_7,e2),max(mix(v2,v3,a2)*step(e2,x_7)*step(x_7,e3),max(mix(v3,v4,a3)*step(e3,x_7)*step(x_7,e4),max(mix(v4,v5,a4)*step(e4,x_7)*step(x_7,e5),max(mix(v5,v6,a5)*step(e5,x_7)*step(x_7,e6),max(mix(v6,v7,a6)*step(e6,x_7)*step(x_7,e7),mix(v7,v8,a7)*step(e7,x_7)*step(x_7,e8))))))));}vec4 chlorophyll(float x_6){const float e0=0.0;const vec4 v0=vec4(0.07058823529411765,0.1411764705882353,0.0784313725490196,1);const float e1=0.13;const vec4 v1=vec4(0.09803921568627451,0.24705882352941178,0.1607843137254902,1);const float e2=0.25;const vec4 v2=vec4(0.09411764705882353,0.3568627450980392,0.23137254901960785,1);const float e3=0.38;const vec4 v3=vec4(0.050980392156862744,0.4666666666666667,0.2823529411764706,1);const float e4=0.5;const vec4 v4=vec4(0.07058823529411765,0.5803921568627451,0.3137254901960784,1);const float e5=0.63;const vec4 v5=vec4(0.3137254901960784,0.6784313725490196,0.34901960784313724,1);const float e6=0.75;const vec4 v6=vec4(0.5176470588235295,0.7686274509803922,0.47843137254901963,1);const float e7=0.88;const vec4 v7=vec4(0.6862745098039216,0.8666666666666667,0.6352941176470588,1);const float e8=1.0;const vec4 v8=vec4(0.8431372549019608,0.9764705882352941,0.8156862745098039,1);float a0=smoothstep(e0,e1,x_6);float a1=smoothstep(e1,e2,x_6);float a2=smoothstep(e2,e3,x_6);float a3=smoothstep(e3,e4,x_6);float a4=smoothstep(e4,e5,x_6);float a5=smoothstep(e5,e6,x_6);float a6=smoothstep(e6,e7,x_6);float a7=smoothstep(e7,e8,x_6);return max(mix(v0,v1,a0)*step(e0,x_6)*step(x_6,e1),max(mix(v1,v2,a1)*step(e1,x_6)*step(x_6,e2),max(mix(v2,v3,a2)*step(e2,x_6)*step(x_6,e3),max(mix(v3,v4,a3)*step(e3,x_6)*step(x_6,e4),max(mix(v4,v5,a4)*step(e4,x_6)*step(x_6,e5),max(mix(v5,v6,a5)*step(e5,x_6)*step(x_6,e6),max(mix(v6,v7,a6)*step(e6,x_6)*step(x_6,e7),mix(v7,v8,a7)*step(e7,x_6)*step(x_6,e8))))))));}vec4 density(float x_19){const float e0=0.0;const vec4 v0=vec4(0.21176470588235294,0.054901960784313725,0.1411764705882353,1);const float e1=0.13;const vec4 v1=vec4(0.34901960784313724,0.09019607843137255,0.3137254901960784,1);const float e2=0.25;const vec4 v2=vec4(0.43137254901960786,0.17647058823529413,0.5176470588235295,1);const float e3=0.38;const vec4 v3=vec4(0.47058823529411764,0.30196078431372547,0.6980392156862745,1);const float e4=0.5;const vec4 v4=vec4(0.47058823529411764,0.44313725490196076,0.8352941176470589,1);const float e5=0.63;const vec4 v5=vec4(0.45098039215686275,0.592156862745098,0.8941176470588236,1);const float e6=0.75;const vec4 v6=vec4(0.5254901960784314,0.7254901960784313,0.8901960784313725,1);const float e7=0.88;const vec4 v7=vec4(0.6941176470588235,0.8392156862745098,0.8901960784313725,1);const float e8=1.0;const vec4 v8=vec4(0.9019607843137255,0.9450980392156862,0.9450980392156862,1);float a0=smoothstep(e0,e1,x_19);float a1=smoothstep(e1,e2,x_19);float a2=smoothstep(e2,e3,x_19);float a3=smoothstep(e3,e4,x_19);float a4=smoothstep(e4,e5,x_19);float a5=smoothstep(e5,e6,x_19);float a6=smoothstep(e6,e7,x_19);float a7=smoothstep(e7,e8,x_19);return max(mix(v0,v1,a0)*step(e0,x_19)*step(x_19,e1),max(mix(v1,v2,a1)*step(e1,x_19)*step(x_19,e2),max(mix(v2,v3,a2)*step(e2,x_19)*step(x_19,e3),max(mix(v3,v4,a3)*step(e3,x_19)*step(x_19,e4),max(mix(v4,v5,a4)*step(e4,x_19)*step(x_19,e5),max(mix(v5,v6,a5)*step(e5,x_19)*step(x_19,e6),max(mix(v6,v7,a6)*step(e6,x_19)*step(x_19,e7),mix(v7,v8,a7)*step(e7,x_19)*step(x_19,e8))))))));}vec4 freesurface_blue_3154355989(float x_35){const float e0=0.0;const vec4 v0=vec4(0.11764705882352941,0.01568627450980392,0.43137254901960786,1);const float e1=0.13;const vec4 v1=vec4(0.1843137254901961,0.054901960784313725,0.6901960784313725,1);const float e2=0.25;const vec4 v2=vec4(0.1607843137254902,0.17647058823529413,0.9254901960784314,1);const float e3=0.38;const vec4 v3=vec4(0.09803921568627451,0.38823529411764707,0.8313725490196079,1);const float e4=0.5;const vec4 v4=vec4(0.26666666666666666,0.5137254901960784,0.7843137254901961,1);const float e5=0.63;const vec4 v5=vec4(0.4470588235294118,0.611764705882353,0.7725490196078432,1);const float e6=0.75;const vec4 v6=vec4(0.615686274509804,0.7098039215686275,0.796078431372549,1);const float e7=0.88;const vec4 v7=vec4(0.7843137254901961,0.8156862745098039,0.8470588235294118,1);const float e8=1.0;const vec4 v8=vec4(0.9450980392156862,0.9294117647058824,0.9254901960784314,1);float a0=smoothstep(e0,e1,x_35);float a1=smoothstep(e1,e2,x_35);float a2=smoothstep(e2,e3,x_35);float a3=smoothstep(e3,e4,x_35);float a4=smoothstep(e4,e5,x_35);float a5=smoothstep(e5,e6,x_35);float a6=smoothstep(e6,e7,x_35);float a7=smoothstep(e7,e8,x_35);return max(mix(v0,v1,a0)*step(e0,x_35)*step(x_35,e1),max(mix(v1,v2,a1)*step(e1,x_35)*step(x_35,e2),max(mix(v2,v3,a2)*step(e2,x_35)*step(x_35,e3),max(mix(v3,v4,a3)*step(e3,x_35)*step(x_35,e4),max(mix(v4,v5,a4)*step(e4,x_35)*step(x_35,e5),max(mix(v5,v6,a5)*step(e5,x_35)*step(x_35,e6),max(mix(v6,v7,a6)*step(e6,x_35)*step(x_35,e7),mix(v7,v8,a7)*step(e7,x_35)*step(x_35,e8))))))));}vec4 freesurface_red_1679163293(float x_20){const float e0=0.0;const vec4 v0=vec4(0.23529411764705882,0.03529411764705882,0.07058823529411765,1);const float e1=0.13;const vec4 v1=vec4(0.39215686274509803,0.06666666666666667,0.10588235294117647,1);const float e2=0.25;const vec4 v2=vec4(0.5568627450980392,0.0784313725490196,0.11372549019607843,1);const float e3=0.38;const vec4 v3=vec4(0.6941176470588235,0.16862745098039217,0.10588235294117647,1);const float e4=0.5;const vec4 v4=vec4(0.7529411764705882,0.3411764705882353,0.24705882352941178,1);const float e5=0.63;const vec4 v5=vec4(0.803921568627451,0.49019607843137253,0.4117647058823529,1);const float e6=0.75;const vec4 v6=vec4(0.8470588235294118,0.6352941176470588,0.5803921568627451,1);const float e7=0.88;const vec4 v7=vec4(0.8901960784313725,0.7803921568627451,0.7568627450980392,1);const float e8=1.0;const vec4 v8=vec4(0.9450980392156862,0.9294117647058824,0.9254901960784314,1);float a0=smoothstep(e0,e1,x_20);float a1=smoothstep(e1,e2,x_20);float a2=smoothstep(e2,e3,x_20);float a3=smoothstep(e3,e4,x_20);float a4=smoothstep(e4,e5,x_20);float a5=smoothstep(e5,e6,x_20);float a6=smoothstep(e6,e7,x_20);float a7=smoothstep(e7,e8,x_20);return max(mix(v0,v1,a0)*step(e0,x_20)*step(x_20,e1),max(mix(v1,v2,a1)*step(e1,x_20)*step(x_20,e2),max(mix(v2,v3,a2)*step(e2,x_20)*step(x_20,e3),max(mix(v3,v4,a3)*step(e3,x_20)*step(x_20,e4),max(mix(v4,v5,a4)*step(e4,x_20)*step(x_20,e5),max(mix(v5,v6,a5)*step(e5,x_20)*step(x_20,e6),max(mix(v6,v7,a6)*step(e6,x_20)*step(x_20,e7),mix(v7,v8,a7)*step(e7,x_20)*step(x_20,e8))))))));}vec4 oxygen(float x_11){const float e0=0.0;const vec4 v0=vec4(0.25098039215686274,0.0196078431372549,0.0196078431372549,1);const float e1=0.13;const vec4 v1=vec4(0.41568627450980394,0.023529411764705882,0.058823529411764705,1);const float e2=0.25;const vec4 v2=vec4(0.5647058823529412,0.10196078431372549,0.027450980392156862,1);const float e3=0.38;const vec4 v3=vec4(0.6588235294117647,0.25098039215686274,0.011764705882352941,1);const float e4=0.5;const vec4 v4=vec4(0.7372549019607844,0.39215686274509803,0.01568627450980392,1);const float e5=0.63;const vec4 v5=vec4(0.807843137254902,0.5333333333333333,0.043137254901960784,1);const float e6=0.75;const vec4 v6=vec4(0.8627450980392157,0.6823529411764706,0.09803921568627451,1);const float e7=0.88;const vec4 v7=vec4(0.9058823529411765,0.8431372549019608,0.17254901960784313,1);const float e8=1.0;const vec4 v8=vec4(0.9725490196078431,0.996078431372549,0.4117647058823529,1);float a0=smoothstep(e0,e1,x_11);float a1=smoothstep(e1,e2,x_11);float a2=smoothstep(e2,e3,x_11);float a3=smoothstep(e3,e4,x_11);float a4=smoothstep(e4,e5,x_11);float a5=smoothstep(e5,e6,x_11);float a6=smoothstep(e6,e7,x_11);float a7=smoothstep(e7,e8,x_11);return max(mix(v0,v1,a0)*step(e0,x_11)*step(x_11,e1),max(mix(v1,v2,a1)*step(e1,x_11)*step(x_11,e2),max(mix(v2,v3,a2)*step(e2,x_11)*step(x_11,e3),max(mix(v3,v4,a3)*step(e3,x_11)*step(x_11,e4),max(mix(v4,v5,a4)*step(e4,x_11)*step(x_11,e5),max(mix(v5,v6,a5)*step(e5,x_11)*step(x_11,e6),max(mix(v6,v7,a6)*step(e6,x_11)*step(x_11,e7),mix(v7,v8,a7)*step(e7,x_11)*step(x_11,e8))))))));}vec4 par(float x_28){const float e0=0.0;const vec4 v0=vec4(0.2,0.0784313725490196,0.09411764705882353,1);const float e1=0.13;const vec4 v1=vec4(0.35294117647058826,0.12549019607843137,0.13725490196078433,1);const float e2=0.25;const vec4 v2=vec4(0.5058823529411764,0.17254901960784313,0.13333333333333333,1);const float e3=0.38;const vec4 v3=vec4(0.6235294117647059,0.26666666666666666,0.09803921568627451,1);const float e4=0.5;const vec4 v4=vec4(0.7137254901960784,0.38823529411764707,0.07450980392156863,1);const float e5=0.63;const vec4 v5=vec4(0.7803921568627451,0.5254901960784314,0.08627450980392157,1);const float e6=0.75;const vec4 v6=vec4(0.8313725490196079,0.6705882352941176,0.13725490196078433,1);const float e7=0.88;const vec4 v7=vec4(0.8666666666666667,0.8235294117647058,0.21176470588235294,1);const float e8=1.0;const vec4 v8=vec4(0.8823529411764706,0.9921568627450981,0.29411764705882354,1);float a0=smoothstep(e0,e1,x_28);float a1=smoothstep(e1,e2,x_28);float a2=smoothstep(e2,e3,x_28);float a3=smoothstep(e3,e4,x_28);float a4=smoothstep(e4,e5,x_28);float a5=smoothstep(e5,e6,x_28);float a6=smoothstep(e6,e7,x_28);float a7=smoothstep(e7,e8,x_28);return max(mix(v0,v1,a0)*step(e0,x_28)*step(x_28,e1),max(mix(v1,v2,a1)*step(e1,x_28)*step(x_28,e2),max(mix(v2,v3,a2)*step(e2,x_28)*step(x_28,e3),max(mix(v3,v4,a3)*step(e3,x_28)*step(x_28,e4),max(mix(v4,v5,a4)*step(e4,x_28)*step(x_28,e5),max(mix(v5,v6,a5)*step(e5,x_28)*step(x_28,e6),max(mix(v6,v7,a6)*step(e6,x_28)*step(x_28,e7),mix(v7,v8,a7)*step(e7,x_28)*step(x_28,e8))))))));}vec4 phase(float x_39){const float e0=0.0;const vec4 v0=vec4(0.5686274509803921,0.4117647058823529,0.07058823529411765,1);const float e1=0.13;const vec4 v1=vec4(0.7215686274509804,0.2784313725490196,0.14901960784313725,1);const float e2=0.25;const vec4 v2=vec4(0.7294117647058823,0.22745098039215686,0.45098039215686275,1);const float e3=0.38;const vec4 v3=vec4(0.6274509803921569,0.2784313725490196,0.7254901960784313,1);const float e4=0.5;const vec4 v4=vec4(0.43137254901960786,0.3803921568627451,0.8549019607843137,1);const float e5=0.63;const vec4 v5=vec4(0.19607843137254902,0.4823529411764706,0.6431372549019608,1);const float e6=0.75;const vec4 v6=vec4(0.12156862745098039,0.5137254901960784,0.43137254901960786,1);const float e7=0.88;const vec4 v7=vec4(0.30196078431372547,0.5058823529411764,0.13333333333333333,1);const float e8=1.0;const vec4 v8=vec4(0.5686274509803921,0.4117647058823529,0.07058823529411765,1);float a0=smoothstep(e0,e1,x_39);float a1=smoothstep(e1,e2,x_39);float a2=smoothstep(e2,e3,x_39);float a3=smoothstep(e3,e4,x_39);float a4=smoothstep(e4,e5,x_39);float a5=smoothstep(e5,e6,x_39);float a6=smoothstep(e6,e7,x_39);float a7=smoothstep(e7,e8,x_39);return max(mix(v0,v1,a0)*step(e0,x_39)*step(x_39,e1),max(mix(v1,v2,a1)*step(e1,x_39)*step(x_39,e2),max(mix(v2,v3,a2)*step(e2,x_39)*step(x_39,e3),max(mix(v3,v4,a3)*step(e3,x_39)*step(x_39,e4),max(mix(v4,v5,a4)*step(e4,x_39)*step(x_39,e5),max(mix(v5,v6,a5)*step(e5,x_39)*step(x_39,e6),max(mix(v6,v7,a6)*step(e6,x_39)*step(x_39,e7),mix(v7,v8,a7)*step(e7,x_39)*step(x_39,e8))))))));}vec4 salinity(float x_26){const float e0=0.0;const vec4 v0=vec4(0.16470588235294117,0.09411764705882353,0.4235294117647059,1);const float e1=0.13;const vec4 v1=vec4(0.12941176470588237,0.19607843137254902,0.6352941176470588,1);const float e2=0.25;const vec4 v2=vec4(0.058823529411764705,0.35294117647058826,0.5686274509803921,1);const float e3=0.38;const vec4 v3=vec4(0.1568627450980392,0.4627450980392157,0.5372549019607843,1);const float e4=0.5;const vec4 v4=vec4(0.23137254901960785,0.5725490196078431,0.5294117647058824,1);const float e5=0.63;const vec4 v5=vec4(0.30980392156862746,0.6862745098039216,0.49411764705882355,1);const float e6=0.75;const vec4 v6=vec4(0.47058823529411764,0.796078431372549,0.40784313725490196,1);const float e7=0.88;const vec4 v7=vec4(0.7568627450980392,0.8666666666666667,0.39215686274509803,1);const float e8=1.0;const vec4 v8=vec4(0.9921568627450981,0.9372549019607843,0.6039215686274509,1);float a0=smoothstep(e0,e1,x_26);float a1=smoothstep(e1,e2,x_26);float a2=smoothstep(e2,e3,x_26);float a3=smoothstep(e3,e4,x_26);float a4=smoothstep(e4,e5,x_26);float a5=smoothstep(e5,e6,x_26);float a6=smoothstep(e6,e7,x_26);float a7=smoothstep(e7,e8,x_26);return max(mix(v0,v1,a0)*step(e0,x_26)*step(x_26,e1),max(mix(v1,v2,a1)*step(e1,x_26)*step(x_26,e2),max(mix(v2,v3,a2)*step(e2,x_26)*step(x_26,e3),max(mix(v3,v4,a3)*step(e3,x_26)*step(x_26,e4),max(mix(v4,v5,a4)*step(e4,x_26)*step(x_26,e5),max(mix(v5,v6,a5)*step(e5,x_26)*step(x_26,e6),max(mix(v6,v7,a6)*step(e6,x_26)*step(x_26,e7),mix(v7,v8,a7)*step(e7,x_26)*step(x_26,e8))))))));}vec4 temperature(float x_8){const float e0=0.0;const vec4 v0=vec4(0.01568627450980392,0.13725490196078433,0.2,1);const float e1=0.13;const vec4 v1=vec4(0.09019607843137255,0.2,0.47843137254901963,1);const float e2=0.25;const vec4 v2=vec4(0.3333333333333333,0.23137254901960785,0.615686274509804,1);const float e3=0.38;const vec4 v3=vec4(0.5058823529411764,0.30980392156862746,0.5607843137254902,1);const float e4=0.5;const vec4 v4=vec4(0.6862745098039216,0.37254901960784315,0.5098039215686274,1);const float e5=0.63;const vec4 v5=vec4(0.8705882352941177,0.4392156862745098,0.396078431372549,1);const float e6=0.75;const vec4 v6=vec4(0.9764705882352941,0.5725490196078431,0.25882352941176473,1);const float e7=0.88;const vec4 v7=vec4(0.9764705882352941,0.7686274509803922,0.2549019607843137,1);const float e8=1.0;const vec4 v8=vec4(0.9098039215686274,0.9803921568627451,0.3568627450980392,1);float a0=smoothstep(e0,e1,x_8);float a1=smoothstep(e1,e2,x_8);float a2=smoothstep(e2,e3,x_8);float a3=smoothstep(e3,e4,x_8);float a4=smoothstep(e4,e5,x_8);float a5=smoothstep(e5,e6,x_8);float a6=smoothstep(e6,e7,x_8);float a7=smoothstep(e7,e8,x_8);return max(mix(v0,v1,a0)*step(e0,x_8)*step(x_8,e1),max(mix(v1,v2,a1)*step(e1,x_8)*step(x_8,e2),max(mix(v2,v3,a2)*step(e2,x_8)*step(x_8,e3),max(mix(v3,v4,a3)*step(e3,x_8)*step(x_8,e4),max(mix(v4,v5,a4)*step(e4,x_8)*step(x_8,e5),max(mix(v5,v6,a5)*step(e5,x_8)*step(x_8,e6),max(mix(v6,v7,a6)*step(e6,x_8)*step(x_8,e7),mix(v7,v8,a7)*step(e7,x_8)*step(x_8,e8))))))));}vec4 turbidity(float x_40){const float e0=0.0;const vec4 v0=vec4(0.13333333333333333,0.12156862745098039,0.10588235294117647,1);const float e1=0.13;const vec4 v1=vec4(0.2549019607843137,0.19607843137254902,0.1607843137254902,1);const float e2=0.25;const vec4 v2=vec4(0.3843137254901961,0.27058823529411763,0.20392156862745098,1);const float e3=0.38;const vec4 v3=vec4(0.5137254901960784,0.34901960784313724,0.2235294117647059,1);const float e4=0.5;const vec4 v4=vec4(0.6313725490196078,0.4392156862745098,0.23137254901960785,1);const float e5=0.63;const vec4 v5=vec4(0.7254901960784313,0.5490196078431373,0.25882352941176473,1);const float e6=0.75;const vec4 v6=vec4(0.792156862745098,0.6823529411764706,0.34509803921568627,1);const float e7=0.88;const vec4 v7=vec4(0.8470588235294118,0.8196078431372549,0.49411764705882355,1);const float e8=1.0;const vec4 v8=vec4(0.9137254901960784,0.9647058823529412,0.6705882352941176,1);float a0=smoothstep(e0,e1,x_40);float a1=smoothstep(e1,e2,x_40);float a2=smoothstep(e2,e3,x_40);float a3=smoothstep(e3,e4,x_40);float a4=smoothstep(e4,e5,x_40);float a5=smoothstep(e5,e6,x_40);float a6=smoothstep(e6,e7,x_40);float a7=smoothstep(e7,e8,x_40);return max(mix(v0,v1,a0)*step(e0,x_40)*step(x_40,e1),max(mix(v1,v2,a1)*step(e1,x_40)*step(x_40,e2),max(mix(v2,v3,a2)*step(e2,x_40)*step(x_40,e3),max(mix(v3,v4,a3)*step(e3,x_40)*step(x_40,e4),max(mix(v4,v5,a4)*step(e4,x_40)*step(x_40,e5),max(mix(v5,v6,a5)*step(e5,x_40)*step(x_40,e6),max(mix(v6,v7,a6)*step(e6,x_40)*step(x_40,e7),mix(v7,v8,a7)*step(e7,x_40)*step(x_40,e8))))))));}vec4 velocity_blue_297387650(float x_2){const float e0=0.0;const vec4 v0=vec4(0.06666666666666667,0.12549019607843137,0.25098039215686274,1);const float e1=0.13;const vec4 v1=vec4(0.13725490196078433,0.20392156862745098,0.4549019607843137,1);const float e2=0.25;const vec4 v2=vec4(0.11372549019607843,0.3176470588235294,0.611764705882353,1);const float e3=0.38;const vec4 v3=vec4(0.12156862745098039,0.44313725490196076,0.6352941176470588,1);const float e4=0.5;const vec4 v4=vec4(0.19607843137254902,0.5647058823529412,0.6627450980392157,1);const float e5=0.63;const vec4 v5=vec4(0.3411764705882353,0.6784313725490196,0.6901960784313725,1);const float e6=0.75;const vec4 v6=vec4(0.5843137254901961,0.7686274509803922,0.7411764705882353,1);const float e7=0.88;const vec4 v7=vec4(0.796078431372549,0.8666666666666667,0.8274509803921568,1);const float e8=1.0;const vec4 v8=vec4(0.996078431372549,0.984313725490196,0.9019607843137255,1);float a0=smoothstep(e0,e1,x_2);float a1=smoothstep(e1,e2,x_2);float a2=smoothstep(e2,e3,x_2);float a3=smoothstep(e3,e4,x_2);float a4=smoothstep(e4,e5,x_2);float a5=smoothstep(e5,e6,x_2);float a6=smoothstep(e6,e7,x_2);float a7=smoothstep(e7,e8,x_2);return max(mix(v0,v1,a0)*step(e0,x_2)*step(x_2,e1),max(mix(v1,v2,a1)*step(e1,x_2)*step(x_2,e2),max(mix(v2,v3,a2)*step(e2,x_2)*step(x_2,e3),max(mix(v3,v4,a3)*step(e3,x_2)*step(x_2,e4),max(mix(v4,v5,a4)*step(e4,x_2)*step(x_2,e5),max(mix(v5,v6,a5)*step(e5,x_2)*step(x_2,e6),max(mix(v6,v7,a6)*step(e6,x_2)*step(x_2,e7),mix(v7,v8,a7)*step(e7,x_2)*step(x_2,e8))))))));}vec4 velocity_green_2558432129(float x_27){const float e0=0.0;const vec4 v0=vec4(0.09019607843137255,0.13725490196078433,0.07450980392156863,1);const float e1=0.13;const vec4 v1=vec4(0.09411764705882353,0.25098039215686274,0.14901960784313725,1);const float e2=0.25;const vec4 v2=vec4(0.043137254901960784,0.37254901960784315,0.17647058823529413,1);const float e3=0.38;const vec4 v3=vec4(0.15294117647058825,0.4823529411764706,0.13725490196078433,1);const float e4=0.5;const vec4 v4=vec4(0.37254901960784315,0.5725490196078431,0.047058823529411764,1);const float e5=0.63;const vec4 v5=vec4(0.596078431372549,0.6470588235294118,0.07058823529411765,1);const float e6=0.75;const vec4 v6=vec4(0.788235294117647,0.7294117647058823,0.27058823529411763,1);const float e7=0.88;const vec4 v7=vec4(0.9137254901960784,0.8470588235294118,0.5372549019607843,1);const float e8=1.0;const vec4 v8=vec4(1,0.9921568627450981,0.803921568627451,1);float a0=smoothstep(e0,e1,x_27);float a1=smoothstep(e1,e2,x_27);float a2=smoothstep(e2,e3,x_27);float a3=smoothstep(e3,e4,x_27);float a4=smoothstep(e4,e5,x_27);float a5=smoothstep(e5,e6,x_27);float a6=smoothstep(e6,e7,x_27);float a7=smoothstep(e7,e8,x_27);return max(mix(v0,v1,a0)*step(e0,x_27)*step(x_27,e1),max(mix(v1,v2,a1)*step(e1,x_27)*step(x_27,e2),max(mix(v2,v3,a2)*step(e2,x_27)*step(x_27,e3),max(mix(v3,v4,a3)*step(e3,x_27)*step(x_27,e4),max(mix(v4,v5,a4)*step(e4,x_27)*step(x_27,e5),max(mix(v5,v6,a5)*step(e5,x_27)*step(x_27,e6),max(mix(v6,v7,a6)*step(e6,x_27)*step(x_27,e7),mix(v7,v8,a7)*step(e7,x_27)*step(x_27,e8))))))));}vec4 cubehelix(float x_37){const float e0=0.0;const vec4 v0=vec4(0,0,0,1);const float e1=0.07;const vec4 v1=vec4(0.08627450980392157,0.0196078431372549,0.23137254901960785,1);const float e2=0.13;const vec4 v2=vec4(0.23529411764705882,0.01568627450980392,0.4117647058823529,1);const float e3=0.2;const vec4 v3=vec4(0.42745098039215684,0.00392156862745098,0.5294117647058824,1);const float e4=0.27;const vec4 v4=vec4(0.6313725490196078,0,0.5764705882352941,1);const float e5=0.33;const vec4 v5=vec4(0.8235294117647058,0.00784313725490196,0.5568627450980392,1);const float e6=0.4;const vec4 v6=vec4(0.984313725490196,0.043137254901960784,0.4823529411764706,1);const float e7=0.47;const vec4 v7=vec4(1,0.11372549019607843,0.3803921568627451,1);const float e8=0.53;const vec4 v8=vec4(1,0.21176470588235294,0.27058823529411763,1);const float e9=0.6;const vec4 v9=vec4(1,0.3333333333333333,0.1803921568627451,1);const float e10=0.67;const vec4 v10=vec4(1,0.47058823529411764,0.13333333333333333,1);const float e11=0.73;const vec4 v11=vec4(1,0.615686274509804,0.1450980392156863,1);const float e12=0.8;const vec4 v12=vec4(0.9450980392156862,0.7490196078431373,0.2235294117647059,1);const float e13=0.87;const vec4 v13=vec4(0.8784313725490196,0.8627450980392157,0.36470588235294116,1);const float e14=0.93;const vec4 v14=vec4(0.8549019607843137,0.9450980392156862,0.5568627450980392,1);const float e15=1.0;const vec4 v15=vec4(0.8901960784313725,0.9921568627450981,0.7764705882352941,1);float a0=smoothstep(e0,e1,x_37);float a1=smoothstep(e1,e2,x_37);float a2=smoothstep(e2,e3,x_37);float a3=smoothstep(e3,e4,x_37);float a4=smoothstep(e4,e5,x_37);float a5=smoothstep(e5,e6,x_37);float a6=smoothstep(e6,e7,x_37);float a7=smoothstep(e7,e8,x_37);float a8=smoothstep(e8,e9,x_37);float a9=smoothstep(e9,e10,x_37);float a10=smoothstep(e10,e11,x_37);float a11=smoothstep(e11,e12,x_37);float a12=smoothstep(e12,e13,x_37);float a13=smoothstep(e13,e14,x_37);float a14=smoothstep(e14,e15,x_37);return max(mix(v0,v1,a0)*step(e0,x_37)*step(x_37,e1),max(mix(v1,v2,a1)*step(e1,x_37)*step(x_37,e2),max(mix(v2,v3,a2)*step(e2,x_37)*step(x_37,e3),max(mix(v3,v4,a3)*step(e3,x_37)*step(x_37,e4),max(mix(v4,v5,a4)*step(e4,x_37)*step(x_37,e5),max(mix(v5,v6,a5)*step(e5,x_37)*step(x_37,e6),max(mix(v6,v7,a6)*step(e6,x_37)*step(x_37,e7),max(mix(v7,v8,a7)*step(e7,x_37)*step(x_37,e8),max(mix(v8,v9,a8)*step(e8,x_37)*step(x_37,e9),max(mix(v9,v10,a9)*step(e9,x_37)*step(x_37,e10),max(mix(v10,v11,a10)*step(e10,x_37)*step(x_37,e11),max(mix(v11,v12,a11)*step(e11,x_37)*step(x_37,e12),max(mix(v12,v13,a12)*step(e12,x_37)*step(x_37,e13),max(mix(v13,v14,a13)*step(e13,x_37)*step(x_37,e14),mix(v14,v15,a14)*step(e14,x_37)*step(x_37,e15)))))))))))))));}float sample_and_apply_contrast_limits(SAMPLER_TYPE channel,vec3 vTexCoord,vec2 contrastLimits){float fragIntensity=float(texture(channel,vTexCoord).r);float contrastLimitsAppliedToIntensity=(fragIntensity-contrastLimits[0])/max(0.0005,(contrastLimits[1]-contrastLimits[0]));return max(0.,contrastLimitsAppliedToIntensity);}vec4 colormap(float intensity,float opacity){return vec4(COLORMAP_FUNCTION(min(1.,intensity)).xyz,opacity);}\"; // eslint-disable-line\n\nvar channels = {\n  name: 'channel-intensity-module',\n  fs\n};\n\nconst RENDERING_MODES_BLEND = {\n  [RENDERING_MODES.MAX_INTENSITY_PROJECTION]: {\n    _BEFORE_RENDER: `\\\n      float maxVals[6] = float[6](-1.0, -1.0, -1.0, -1.0, -1.0, -1.0);\n    `,\n    _RENDER: `\\\n    \n      float intensityArray[6] = float[6](intensityValue0, intensityValue1, intensityValue2, intensityValue3, intensityValue4, intensityValue5);\n\n      for(int i = 0; i < 6; i++) {\n        if(intensityArray[i] > maxVals[i]) {\n          maxVals[i] = intensityArray[i];\n        }\n      }\n    `,\n    _AFTER_RENDER: `\\\n      vec3 rgbCombo = vec3(0.0);\n      for(int i = 0; i < 6; i++) {\n        rgbCombo += max(0.0, min(1.0, maxVals[i])) * vec3(colors[i]);\n      }\n      color = vec4(rgbCombo, 1.0);\n    `\n  },\n  [RENDERING_MODES.MIN_INTENSITY_PROJECTION]: {\n    _BEFORE_RENDER: `\\\n      float minVals[6] = float[6](1. / 0., 1. / 0., 1. / 0., 1. / 0., 1. / 0., 1. / 0.);\n    `,\n    _RENDER: `\\\n    \n      float intensityArray[6] = float[6](intensityValue0, intensityValue1, intensityValue2, intensityValue3, intensityValue4, intensityValue5);\n\n      for(int i = 0; i < 6; i++) {\n        if(intensityArray[i] < minVals[i]) {\n          minVals[i] = intensityArray[i];\n        }\n      }\n    `,\n    _AFTER_RENDER: `\\\n      vec3 rgbCombo = vec3(0.0);\n      for(int i = 0; i < 6; i++) {\n        rgbCombo += max(0.0, min(1.0, minVals[i])) * vec3(colors[i]);\n      }\n      color = vec4(rgbCombo, 1.0);\n    `\n  },\n  [RENDERING_MODES.ADDITIVE]: {\n    _BEFORE_RENDER: ``,\n    _RENDER: `\\\n      vec3 rgbCombo = vec3(0.0);\n      vec3 hsvCombo = vec3(0.0);\n      float intensityArray[6] = float[6](intensityValue0, intensityValue1, intensityValue2, intensityValue3, intensityValue4, intensityValue5);\n      float total = 0.0;\n      for(int i = 0; i < 6; i++) {\n        float intensityValue = intensityArray[i];\n        rgbCombo += max(0.0, min(1.0, intensityValue)) * colors[i];\n        total += intensityValue;\n      }\n      // Do not go past 1 in opacity.\n      total = min(total, 1.0);\n      vec4 val_color = vec4(rgbCombo, total);\n      // Opacity correction\n      val_color.a = 1.0 - pow(1.0 - val_color.a, 1.0);\n      color.rgb += (1.0 - color.a) * val_color.a * val_color.rgb;\n      color.a += (1.0 - color.a) * val_color.a;\n      if (color.a >= 0.95) {\n        break;\n      }\n    `,\n    _AFTER_RENDER: ``\n  }\n};\n\nconst RENDERING_MODES_COLORMAP = {\n  [RENDERING_MODES.MAX_INTENSITY_PROJECTION]: {\n    _BEFORE_RENDER: `\\\n      float maxVals[6] = float[6](-1.0, -1.0, -1.0, -1.0, -1.0, -1.0);\n    `,\n    _RENDER: `\\\n    \n      float intensityArray[6] = float[6](intensityValue0, intensityValue1, intensityValue2, intensityValue3, intensityValue4, intensityValue5);\n\n      for(int i = 0; i < 6; i++) {\n        if(intensityArray[i] > maxVals[i]) {\n          maxVals[i] = intensityArray[i];\n        }\n      }\n    `,\n    _AFTER_RENDER: `\\\n      float total = 0.0;\n      for(int i = 0; i < 6; i++) {\n        total += maxVals[i];\n      }\n      // Do not go past 1 in opacity/colormap value.\n      total = min(total, 1.0);\n      color = colormap(total, total);\n    `\n  },\n  [RENDERING_MODES.MIN_INTENSITY_PROJECTION]: {\n    _BEFORE_RENDER: `\\\n      float minVals[6] = float[6](1. / 0., 1. / 0., 1. / 0., 1. / 0., 1. / 0., 1. / 0.);\n    `,\n    _RENDER: `\\\n    \n      float intensityArray[6] = float[6](intensityValue0, intensityValue1, intensityValue2, intensityValue3, intensityValue4, intensityValue5);\n\n      for(int i = 0; i < 6; i++) {\n        if(intensityArray[i] < minVals[i]) {\n          minVals[i] = intensityArray[i];\n        }\n      }\n    `,\n    _AFTER_RENDER: `\\\n      float total = 0.0;\n      for(int i = 0; i < 6; i++) {\n        total += minVals[i];\n      }\n      // Do not go past 1 in opacity/colormap value.\n      total = min(total, 1.0);\n      color = colormap(total, total);\n    `\n  },\n  [RENDERING_MODES.ADDITIVE]: {\n    _BEFORE_RENDER: ``,\n    _RENDER: `\\\n    float intensityArray[6] = float[6](intensityValue0, intensityValue1, intensityValue2, intensityValue3, intensityValue4, intensityValue5);\n\t\tfloat total = 0.0;\n\n\t\tfor(int i = 0; i < 6; i++) {\n\t\t\ttotal += intensityArray[i];\n\t\t}\n\t\t// Do not go past 1 in opacity/colormap value.\n\t\ttotal = min(total, 1.0);\n\n\t\tvec4 val_color = colormap(total, total);\n\n\t\t// Opacity correction\n\t\tval_color.a = 1.0 - pow(1.0 - val_color.a, 1.0);\n\t\tcolor.rgb += (1.0 - color.a) * val_color.a * val_color.rgb;\n\t\tcolor.a += (1.0 - color.a) * val_color.a;\n\t\tif (color.a >= 0.95) {\n\t\t\tbreak;\n\t\t}\n    p += ray_dir * dt;\n    `,\n    _AFTER_RENDER: ``\n  }\n};\n\n/* This is largely an adaptation of Will Usher's excellent blog post/code:\nhttps://github.com/Twinklebear/webgl-volume-raycaster\nWithout his app, this would have been exponentially more difficult to do, so we thank him dearly.\n\nThe major changes are:\n\n- Code has been adapted to the luma.gl/deck.gl framework instead of more-or-less pure WebGL.\n\n- We use a coordinate system that will allow overlays/other figures on our vertex shader/javascript via the `uniform mat4 scale` that matches raw pixel size multiplied by\nthe ratio of physical sizes (if present) to the world space, just like our 2D layers.  Will implements everything in a unit cube (I think?) centered at the origin.\n\n- We use an OrbitView which is a similar camera to what Will has, but stops gimbal lock from happening\nby stopping full rotations whereas Will implements a camera that allows for full rotations without gimbal lock via quaternions.\nWe have an open issue for implementing this deck.gl: https://github.com/visgl/deck.gl/issues/5364\n\n- We have a multi-channel use case and have a few tweaks in the fragment shader to handle that.\n\n- We convert all of our data to Float32Array so we can use LINEAR sampling while also maintaing the dynamic range and integrity of the data.\n\n- Will uses a colormap via a sampled texture, which is a very good idea, but not something we are geared up for in 2D, so not something we will do in 3D either: \nhttps://github.com/visgl/luma.gl/issues/1415\n\n- We allow for multiple rendering settings (Max/Min Int. Proj., Additive, etc.)\n\n- We allow for arbtirary affine transformations via deck.gl's modelMatrix prop and have updated the vertex shader accordingly.\nMore information about that is detailed in the comments there.\n*/\n\n// prettier-ignore\nconst CUBE_STRIP = [\n\t1, 1, 0,\n\t0, 1, 0,\n\t1, 1, 1,\n\t0, 1, 1,\n\t0, 0, 1,\n\t0, 1, 0,\n\t0, 0, 0,\n\t1, 1, 0,\n\t1, 0, 0,\n\t1, 1, 1,\n\t1, 0, 1,\n\t0, 0, 1,\n\t1, 0, 0,\n\t0, 0, 0\n];\nconst NUM_PLANES_DEFAULT = 1;\n\nconst defaultProps$1 = {\n  pickable: false,\n  coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n  channelData: { type: 'object', value: {}, compare: true },\n  colors: { type: 'array', value: [], compare: true },\n  contrastLimits: { type: 'array', value: [], compare: true },\n  dtype: { type: 'string', value: 'Uint8', compare: true },\n  colormap: { type: 'string', value: '', compare: true },\n  xSlice: { type: 'array', value: null, compare: true },\n  ySlice: { type: 'array', value: null, compare: true },\n  zSlice: { type: 'array', value: null, compare: true },\n  clippingPlanes: { type: 'array', value: [], compare: true },\n  renderingMode: {\n    type: 'string',\n    value: RENDERING_MODES.ADDITIVE,\n    compare: true\n  },\n  resolutionMatrix: { type: 'object', value: new Matrix4(), compare: true }\n};\n\nfunction getRenderingAttrs() {\n  const values = getDtypeValues('Float32');\n  return {\n    ...values,\n    sampler: values.sampler.replace('2D', '3D'),\n    cast: data => new Float32Array(data)\n  };\n}\n\nfunction removeExtraColormapFunctionsFromShader(colormap) {\n  // Always include viridis so shaders compile,\n  // but otherwise we discard all other colormaps via a regex.\n  // With all the colormaps, the shaders were too large\n  // and crashed our computers when we loaded volumes too large.\n  const discardColormaps = COLORMAPS.filter(\n    i => i !== (colormap || 'viridis')\n  ).map(i => i.replace(/-/g, '_'));\n  const discardRegex = new RegExp(\n    `vec4 (${discardColormaps.join(\n      '(_([0-9]*))?|'\n    )})\\\\(float x_[0-9]+\\\\){([^}]+)}`,\n    'g'\n  );\n  const channelsModules = {\n    ...channels,\n    fs: channels.fs.replace(discardRegex, ''),\n    defines: {\n      COLORMAP_FUNCTION: colormap || 'viridis'\n    }\n  };\n  return channelsModules;\n}\n\n/**\n * @typedef LayerProps\n * @type {Object}\n * @property {Array.<Array.<number>>} contrastLimits List of [begin, end] values to control each channel's ramp function.\n * @property {Array.<Array.<number>>} colors List of [r, g, b] values for each channel.\n * @property {Array.<boolean>} channelsVisible List of boolean values for each channel for whether or not it is visible.\n * @property {string} dtype Dtype for the layer.\n * @property {string=} colormap String indicating a colormap (default: '').  The full list of options is here: https://github.com/glslify/glsl-colormap#glsl-colormap\n * @property {Array.<Array.<number>>=} domain Override for the possible max/min values (i.e something different than 65535 for uint16/'<u2').\n * @property {string=} renderingMode One of Maximum Intensity Projection, Minimum Intensity Projection, or Additive\n * @property {Object=} modelMatrix A column major affine transformation to be applied to the volume.\n * @property {Array.<number>=} xSlice 0-width (physical coordinates) interval on which to slice the volume.\n * @property {Array.<number>=} ySlice 0-height (physical coordinates) interval on which to slice the volume.\n * @property {Array.<number>=} zSlice 0-depth (physical coordinates) interval on which to slice the volume.\n * @property {Array.<Object>=} clippingPlanes List of math.gl [Plane](https://math.gl/modules/culling/docs/api-reference/plane) objects.\n * @property {Object=} resolutionMatrix Matrix for scaling the volume based on the (downsampled) resolution being displayed.\n */\n\n/**\n * @type {{ new <S extends string[]>(...props: import('../../../types').Viv<LayerProps>[]) }}\n * @ignore\n */\nconst XR3DLayer = class extends Layer {\n  initializeState() {\n    const { gl } = this.context;\n    this.setState({\n      model: this._getModel(gl)\n    });\n    // This tells WebGL how to read row data from the texture.  For example, the default here is 4 (i.e for RGBA, one byte per channel) so\n    // each row of data is expected to be a multiple of 4.  This setting (i.e 1) allows us to have non-multiple-of-4 row sizes.  For example, for 2 byte (16 bit data),\n    // we could use 2 as the value and it would still work, but 1 also works fine (and is more flexible for 8 bit - 1 byte - textures as well).\n    // https://stackoverflow.com/questions/42789896/webgl-error-arraybuffer-not-big-enough-for-request-in-case-of-gl-luminance\n    gl.pixelStorei(GL.UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(GL.PACK_ALIGNMENT, 1);\n  }\n\n  /**\n   * This function compiles the shaders and the projection module.\n   */\n  getShaders() {\n    const { colormap, renderingMode, clippingPlanes } = this.props;\n    const { sampler } = getRenderingAttrs();\n    const { _BEFORE_RENDER, _RENDER, _AFTER_RENDER } = colormap\n      ? RENDERING_MODES_COLORMAP[renderingMode]\n      : RENDERING_MODES_BLEND[renderingMode];\n    const channelsModules = removeExtraColormapFunctionsFromShader(colormap);\n    return super.getShaders({\n      vs,\n      fs: fs$1\n        .replace('_BEFORE_RENDER', _BEFORE_RENDER)\n        .replace('_RENDER', _RENDER)\n        .replace('_AFTER_RENDER', _AFTER_RENDER),\n      defines: {\n        SAMPLER_TYPE: sampler,\n        COLORMAP_FUNCTION: colormap || 'viridis',\n        NUM_PLANES: String(clippingPlanes.length || NUM_PLANES_DEFAULT)\n      },\n      modules: [channelsModules]\n    });\n  }\n\n  /**\n   * This function finalizes state by clearing all textures from the WebGL context\n   */\n  finalizeState() {\n    super.finalizeState();\n\n    if (this.state.textures) {\n      Object.values(this.state.textures).forEach(tex => tex && tex.delete());\n    }\n  }\n\n  /**\n   * This function updates state by retriggering model creation (shader compilation and attribute binding)\n   * and loading any textures that need be loading.\n   */\n  updateState({ props, oldProps, changeFlags }) {\n    // setup model first\n    if (\n      changeFlags.extensionsChanged ||\n      props.colormap !== oldProps.colormap ||\n      props.renderingMode !== oldProps.renderingMode ||\n      props.clippingPlanes.length !== oldProps.clippingPlanes.length\n    ) {\n      const { gl } = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({ model: this._getModel(gl) });\n    }\n    if (\n      props.channelData &&\n      props?.channelData?.data !== oldProps?.channelData?.data\n    ) {\n      this.loadTexture(props.channelData);\n    }\n  }\n\n  /**\n   * This function creates the luma.gl model.\n   */\n  _getModel(gl) {\n    if (!gl) {\n      return null;\n    }\n    return new Model(gl, {\n      ...this.getShaders(),\n      geometry: new Geometry({\n        drawMode: gl.TRIANGLE_STRIP,\n        attributes: {\n          positions: new Float32Array(CUBE_STRIP)\n        }\n      })\n    });\n  }\n\n  /**\n   * This function runs the shaders and draws to the canvas\n   */\n  draw({ uniforms }) {\n    const { textures, model, scaleMatrix } = this.state;\n    const {\n      contrastLimits,\n      colors,\n      xSlice,\n      ySlice,\n      zSlice,\n      modelMatrix,\n      channelsVisible,\n      domain,\n      dtype,\n      clippingPlanes,\n      resolutionMatrix\n    } = this.props;\n    const {\n      viewMatrix,\n      viewMatrixInverse,\n      projectionMatrix\n    } = this.context.viewport;\n    if (textures && model && scaleMatrix) {\n      const { paddedContrastLimits, paddedColors } = padColorsAndWindows({\n        contrastLimits,\n        colors,\n        channelsVisible,\n        domain,\n        dtype\n      });\n      const invertedScaleMatrix = scaleMatrix.clone().invert();\n      const invertedResolutionMatrix = resolutionMatrix.clone().invert();\n      const paddedClippingPlanes = padWithDefault(\n        clippingPlanes.map(p =>\n          p\n            .clone()\n            .transform(invertedScaleMatrix)\n            .transform(invertedResolutionMatrix)\n        ),\n        new Plane([1, 0, 0]),\n        clippingPlanes.length || NUM_PLANES_DEFAULT\n      );\n      // Need to flatten for shaders.\n      const normals = paddedClippingPlanes.map(plane => plane.normal).flat();\n      const distances = paddedClippingPlanes.map(plane => plane.distance);\n      model\n        .setUniforms({\n          ...uniforms,\n          ...textures,\n          contrastLimits: paddedContrastLimits,\n          colors: paddedColors,\n          xSlice: new Float32Array(\n            xSlice\n              ? xSlice.map(i => i / scaleMatrix[0] / resolutionMatrix[0])\n              : [0, 1]\n          ),\n          ySlice: new Float32Array(\n            ySlice\n              ? ySlice.map(i => i / scaleMatrix[5] / resolutionMatrix[5])\n              : [0, 1]\n          ),\n          zSlice: new Float32Array(\n            zSlice\n              ? zSlice.map(i => i / scaleMatrix[10] / resolutionMatrix[10])\n              : [0, 1]\n          ),\n          eye_pos: new Float32Array([\n            viewMatrixInverse[12],\n            viewMatrixInverse[13],\n            viewMatrixInverse[14]\n          ]),\n          view: viewMatrix,\n          proj: projectionMatrix,\n          scale: scaleMatrix,\n          resolution: resolutionMatrix,\n          model: modelMatrix || new Matrix4(),\n          normals,\n          distances\n        })\n        .draw();\n    }\n  }\n\n  /**\n   * This function loads all textures from incoming resolved promises/data from the loaders by calling `dataToTexture`\n   */\n  loadTexture(channelData) {\n    const textures = {\n      volume0: null,\n      volume1: null,\n      volume2: null,\n      volume3: null,\n      volume4: null,\n      volume5: null\n    };\n    if (this.state.textures) {\n      Object.values(this.state.textures).forEach(tex => tex && tex.delete());\n    }\n    if (\n      channelData &&\n      Object.keys(channelData).length > 0 &&\n      channelData.data\n    ) {\n      const { height, width, depth } = channelData;\n      channelData.data.forEach((d, i) => {\n        textures[`volume${i}`] = this.dataToTexture(d, width, height, depth);\n      }, this);\n      this.setState({\n        textures,\n        scaleMatrix: new Matrix4().scale(\n          this.props.physicalSizeScalingMatrix.transformPoint([\n            width,\n            height,\n            depth\n          ])\n        )\n      });\n    }\n  }\n\n  /**\n   * This function creates textures from the data\n   */\n  dataToTexture(data, width, height, depth) {\n    const attrs = getRenderingAttrs();\n    const texture = new Texture3D(this.context.gl, {\n      width,\n      height,\n      depth,\n      data: attrs.cast?.(data) ?? data,\n      // ? Seems to be a luma.gl bug.  Looks like Texture2D is wrong or this is but these are flipped somewhere.\n      format: attrs.dataFormat,\n      dataFormat: attrs.format,\n      type: attrs.type,\n      mipmaps: false,\n      parameters: {\n        [GL.TEXTURE_MIN_FILTER]: GL.LINEAR,\n        [GL.TEXTURE_MAG_FILTER]: GL.LINEAR,\n        [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n        [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n        [GL.TEXTURE_WRAP_R]: GL.CLAMP_TO_EDGE\n      }\n    });\n    return texture;\n  }\n};\n\nXR3DLayer.layerName = 'XR3DLayer';\nXR3DLayer.defaultProps = defaultProps$1;\n\n/* global globalThis */\n\n/**\n * Creates a single continguous TypedArray that can visualized as a volume in 3D space where the y-axis going up is positive,\n * the x-axis going right is positive, and the z-axis coming out of the screen is positive.\n * To do this, and keep the orientation, we must anti-diagonally transpose each slice of raster data so that the (0, 0) data point is transformed\n * to the top right.  If you start the camera looking at the 0th slice (or rotate from looking at the final slice) in 3D, this becomes more apparent.\n * Of note here is that in 2D rendering, the y-axis is positive in the downward direction.\n *\n * @param {object} props\n * @param {object} props.source PixelSource\n * @param {object} props.selection A single selection for the PixelSource\n * @param {object} props.onUpdate A callback for progress that is called twice during the loading of each plane, once when the promsie resolves and once when it is loaded into the final contiguous buffer.\n * @param {object} props.downsampleDepth This is the number by which to downsample on the z direction, usually `2 ** resolution` where `resolution` is that of the `PixelSource` in the image pyramid.\n * The idea here is to get every `downsampleDepth` raster slice so that proper scaling is maintained (just liek a 2D image pyramid).\n * @return {TypedArray}\n * @ignore\n */\nasync function getVolume({\n  source,\n  selection,\n  onUpdate = () => {},\n  downsampleDepth = 1,\n  signal\n}) {\n  const { shape, labels, dtype } = source;\n  const { height, width } = getImageSize(source);\n  const depth = shape[labels.indexOf('z')];\n  const depthDownsampled = Math.max(1, Math.floor(depth / downsampleDepth));\n  const rasterSize = height * width;\n  const name = `${dtype}Array`;\n  const TypedArray = globalThis[name];\n  const volumeData = new TypedArray(rasterSize * depthDownsampled);\n  await Promise.all(\n    new Array(depthDownsampled).fill(0).map(async (_, z) => {\n      const depthSelection = {\n        ...selection,\n        z: z * downsampleDepth\n      };\n      const { data: rasterData } = await source.getRaster({\n        selection: depthSelection,\n        signal\n      });\n      let r = 0;\n      onUpdate();\n      // For now this process fills in each raster plane anti-diagonally transposed.\n      // This is to ensure that the image looks right in three dimensional space.\n      while (r < rasterSize) {\n        const volIndex = z * rasterSize + (rasterSize - r - 1);\n        const rasterIndex =\n          ((width - r - 1) % width) + width * Math.floor(r / width);\n        volumeData[volIndex] = rasterData[rasterIndex];\n        r += 1;\n      }\n      onUpdate();\n    })\n  );\n  return {\n    data: volumeData,\n    height,\n    width,\n    depth: depthDownsampled\n  };\n}\n\nconst getTextLayer = (text, viewport, id) => {\n  return new TextLayer({\n    id: `text-${id}`,\n    coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n    data: [\n      {\n        text,\n        position: viewport.position\n      }\n    ],\n    getColor: [220, 220, 220, 255],\n    getSize: 25,\n    sizeUnits: 'meters',\n    sizeScale: 2 ** -viewport.zoom,\n    fontFamily: 'Helvetica'\n  });\n};\n\nconst defaultProps = {\n  pickable: false,\n  coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n  contrastLimits: { type: 'array', value: [], compare: true },\n  channelsVisible: { type: 'array', value: [], compare: true },\n  colors: { type: 'array', value: [], compare: true },\n  colormap: { type: 'string', value: '', compare: true },\n  selections: { type: 'array', value: [], compare: true },\n  resolution: { type: 'number', value: 0, compare: true },\n  domain: { type: 'array', value: [], compare: true },\n  loader: {\n    type: 'object',\n    value: [\n      {\n        getRaster: async () => ({ data: [], height: 0, width: 0 }),\n        dtype: 'Uint16',\n        shape: [1],\n        labels: ['z']\n      }\n    ],\n    compare: true\n  },\n  xSlice: { type: 'array', value: null, compare: true },\n  ySlice: { type: 'array', value: null, compare: true },\n  zSlice: { type: 'array', value: null, compare: true },\n  clippingPlanes: { type: 'array', value: [], compare: true },\n  renderingMode: {\n    type: 'string',\n    value: RENDERING_MODES.MAX_INTENSITY_PROJECTION,\n    compare: true\n  },\n  onUpdate: { type: 'function', value: () => {}, compare: true },\n  useProgressIndicator: { type: 'boolean', value: true, compare: true },\n  useWebGL1Warning: { type: 'boolean', value: true, compare: true }\n};\n\n/**\n * @typedef LayerProps\n * @type {Object}\n * @property {Array.<Array.<number>>} contrastLimits List of [begin, end] values to control each channel's ramp function.\n * @property {Array.<Array.<number>>} colors List of [r, g, b] values for each channel.\n * @property {Array.<boolean>} channelsVisible List of boolean values for each channel for whether or not it is visible.\n * @property {Array} loader PixelSource[]. Represents an N-dimensional image.\n * @property {Array} selections Selection to be used for fetching data.\n * @property {string=} colormap String indicating a colormap (default: '').  The full list of options is here: https://github.com/glslify/glsl-colormap#glsl-colormap\n * @property {Array.<Array.<number>>=} domain Override for the possible max/min values (i.e something different than 65535 for uint16/'<u2').\n * @property {number=} resolution Resolution at which you would like to see the volume and load it into memory (0 highest, loader.length -1 the lowest default 0)\n * @property {string=} renderingMode One of Maximum Intensity Projection, Minimum Intensity Projection, or Additive\n * @property {Object=} modelMatrix A column major affine transformation to be applied to the volume.\n * @property {Array.<number>=} xSlice 0-width (physical coordinates) interval on which to slice the volume.\n * @property {Array.<number>=} ySlice 0-height (physical coordinates) interval on which to slice the volume.\n * @property {Array.<number>=} zSlice 0-depth (physical coordinates) interval on which to slice the volume.\n * @property {function=} onViewportLoad Function that gets called when the data in the viewport loads.\n * @property {Array.<Object>=} clippingPlanes List of math.gl [Plane](https://math.gl/modules/culling/docs/api-reference/plane) objects.\n * @property {boolean=} useProgressIndicator Whether or not to use the default progress text + indicator (default is true)\n * @property {boolean=} useWebGL1Warning Whether or not to use the default WebGL1 warning (default is true)\n * @property {function=} onUpdate A callback to be used for getting updates of the progress, ({ progress }) => {}\n */\n\n/**\n * @type {{ new <S extends string[]>(...props: import('../../types').Viv<LayerProps, S>[]) }}\n * @ignore\n */\nconst VolumeLayer = class extends CompositeLayer {\n  clearState() {\n    this.setState({\n      height: null,\n      width: null,\n      depth: null,\n      data: null,\n      physicalSizeScalingMatrix: null,\n      resolutionMatrix: null,\n      progress: 0,\n      abortController: null\n    });\n  }\n\n  finalizeState() {\n    this.state.abortController.abort();\n  }\n\n  updateState({ oldProps, props }) {\n    const loaderChanged = props.loader !== oldProps.loader;\n    const resolutionChanged = props.resolution !== oldProps.resolution;\n    const selectionsChanged = props.selections !== oldProps.selections;\n    // Only fetch new data to render if loader has changed\n    if (resolutionChanged) {\n      // Clear last volume.\n      this.clearState();\n    }\n    if (loaderChanged || selectionsChanged || resolutionChanged) {\n      const {\n        loader,\n        selections = [],\n        resolution,\n        onViewportLoad\n      } = this.props;\n      const source = loader[resolution];\n      let progress = 0;\n      const totalRequests =\n        // eslint-disable-next-line no-bitwise\n        (source.shape[source.labels.indexOf('z')] >> resolution) *\n        selections.length;\n      const onUpdate = () => {\n        progress += 0.5 / totalRequests;\n        if (this.props.onUpdate) {\n          this.props.onUpdate({ progress });\n        }\n        this.setState({ progress });\n      };\n      const abortController = new AbortController();\n      this.setState({ abortController });\n      const { signal } = abortController;\n      const volumePromises = selections.map(selection =>\n        getVolume({\n          selection,\n          source,\n          onUpdate,\n          downsampleDepth: 2 ** resolution,\n          signal\n        })\n      );\n      const physicalSizeScalingMatrix = getPhysicalSizeScalingMatrix(\n        loader[resolution]\n      );\n\n      Promise.all(volumePromises).then(volumes => {\n        if (onViewportLoad) {\n          onViewportLoad(volumes);\n        }\n        const volume = {\n          data: volumes.map(d => d.data),\n          width: volumes[0].width,\n          height: volumes[0].height,\n          depth: volumes[0].depth\n        };\n\n        this.setState({\n          ...volume,\n          physicalSizeScalingMatrix,\n          resolutionMatrix: new Matrix4().scale(2 ** resolution)\n        });\n      });\n    }\n  }\n\n  renderLayers() {\n    const {\n      loader,\n      id,\n      resolution,\n      useProgressIndicator,\n      useWebGL1Warning\n    } = this.props;\n    const { dtype } = loader[resolution];\n    const {\n      data,\n      width,\n      height,\n      depth,\n      progress,\n      physicalSizeScalingMatrix,\n      resolutionMatrix\n    } = this.state;\n    const { gl } = this.context;\n    if (!isWebGL2(gl) && useWebGL1Warning) {\n      const { viewport } = this.context;\n      return getTextLayer(\n        [\n          'Volume rendering is only available on browsers that support WebGL2. If you',\n          'are using Safari, you can turn on WebGL2 by navigating in the top menubar',\n          'to check Develop > Experimental Features > WebGL 2.0 and then refreshing',\n          'the page.'\n        ].join('\\n'),\n        viewport,\n        id\n      );\n    }\n    if (!(width && height) && useProgressIndicator) {\n      const { viewport } = this.context;\n      return getTextLayer(\n        `Loading Volume ${String((progress || 0) * 100).slice(0, 5)}%...`,\n        viewport,\n        id\n      );\n    }\n    return new XR3DLayer(this.props, {\n      channelData: { data, width, height, depth },\n      id: `XR3DLayer-${0}-${height}-${width}-${0}-${resolution}-${id}`,\n      physicalSizeScalingMatrix,\n      parameters: {\n        [GL.CULL_FACE]: true,\n        [GL.CULL_FACE_MODE]: GL.FRONT,\n        [GL.DEPTH_TEST]: false,\n        blendFunc: [GL.SRC_ALPHA, GL.ONE],\n        blend: true\n      },\n      resolutionMatrix,\n      dtype\n    });\n  }\n};\n\nVolumeLayer.layerName = 'VolumeLayer';\nVolumeLayer.defaultProps = defaultProps;\n\nconst areViewStatesEqual = (viewState, otherViewState) => {\n  return otherViewState === viewState || viewState?.zoom === otherViewState?.zoom && viewState?.rotationX === otherViewState?.rotationX && viewState?.rotationOrbit === otherViewState?.rotationOrbit && equal(viewState?.target, otherViewState?.target);\n};\nclass VivViewerWrapper extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewStates: {}\n    };\n    const { viewStates } = this.state;\n    const { views, viewStates: initialViewStates } = this.props;\n    views.forEach((view) => {\n      viewStates[view.id] = view.filterViewState({\n        viewState: initialViewStates.find((v) => v.id === view.id)\n      });\n    });\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n    this.layerFilter = this.layerFilter.bind(this);\n    this.onHover = this.onHover.bind(this);\n  }\n  layerFilter({ layer, viewport }) {\n    return layer.id.includes(getVivId(viewport.id));\n  }\n  _onViewStateChange({ viewId, viewState, interactionState, oldViewState }) {\n    const { views, onViewStateChange } = this.props;\n    viewState = onViewStateChange && onViewStateChange({\n      viewId,\n      viewState,\n      interactionState,\n      oldViewState\n    }) || viewState;\n    this.setState((prevState) => {\n      const viewStates = {};\n      views.forEach((view) => {\n        const currentViewState = prevState.viewStates[view.id];\n        viewStates[view.id] = view.filterViewState({\n          viewState: { ...viewState, id: viewId },\n          oldViewState,\n          currentViewState\n        });\n      });\n      return { viewStates };\n    });\n    return viewState;\n  }\n  componentDidUpdate(prevProps) {\n    const { props } = this;\n    const { views } = props;\n    const viewStates = { ...this.state.viewStates };\n    let anyChanged = false;\n    views.forEach((view) => {\n      const currViewState = props.viewStates?.find((viewState) => viewState.id === view.id);\n      if (!currViewState) {\n        return;\n      }\n      const prevViewState = prevProps.viewStates?.find((viewState) => viewState.id === view.id);\n      if (areViewStatesEqual(currViewState, prevViewState)) {\n        return;\n      }\n      anyChanged = true;\n      const { height, width } = view;\n      viewStates[view.id] = view.filterViewState({\n        viewState: {\n          ...currViewState,\n          height,\n          width,\n          id: view.id\n        }\n      });\n    });\n    if (anyChanged) {\n      this.setState({ viewStates });\n    }\n  }\n  static getDerivedStateFromProps(props, prevState) {\n    const { views, viewStates: viewStatesProps } = props;\n    if (views.some((view) => !prevState.viewStates[view.id] || view.height !== prevState.viewStates[view.id].height || view.width !== prevState.viewStates[view.id].width)) {\n      const viewStates = {};\n      views.forEach((view) => {\n        const { height, width } = view;\n        const currentViewState = prevState.viewStates[view.id];\n        viewStates[view.id] = view.filterViewState({\n          viewState: {\n            ...currentViewState || viewStatesProps.find((v) => v.id === view.id),\n            height,\n            width,\n            id: view.id\n          }\n        });\n      });\n      return { viewStates };\n    }\n    return prevState;\n  }\n  onHover(info, event) {\n    const { tile, coordinate, sourceLayer: layer } = info;\n    const { onHover, hoverHooks } = this.props;\n    if (onHover) {\n      onHover(info, event);\n    }\n    if (!hoverHooks || !coordinate || !layer) {\n      return null;\n    }\n    const { handleValue = () => {\n    }, handleCoordnate = () => {\n    } } = hoverHooks;\n    let hoverData;\n    if (layer.id.includes(\"Tiled\")) {\n      if (!tile?.content) {\n        return null;\n      }\n      const { content, bbox, z } = tile;\n      if (!content.data || !bbox) {\n        return null;\n      }\n      const { data, width, height } = content;\n      const { left, right, top, bottom } = bbox;\n      const bounds = [\n        left,\n        data.height < layer.tileSize ? height : bottom,\n        data.width < layer.tileSize ? width : right,\n        top\n      ];\n      if (!data) {\n        return null;\n      }\n      const layerZoomScale = Math.max(1, 2 ** Math.round(-z));\n      const dataCoords = [\n        Math.floor((coordinate[0] - bounds[0]) / layerZoomScale),\n        Math.floor((coordinate[1] - bounds[3]) / layerZoomScale)\n      ];\n      const coords = dataCoords[1] * width + dataCoords[0];\n      hoverData = data.map((d) => d[coords]);\n    } else {\n      const { channelData } = layer.props;\n      if (!channelData) {\n        return null;\n      }\n      const { data, width, height } = channelData;\n      if (!data || !width || !height) {\n        return null;\n      }\n      const bounds = [0, height, width, 0];\n      const { zoom } = layer.context.viewport;\n      const layerZoomScale = Math.max(1, 2 ** Math.floor(-zoom));\n      const dataCoords = [\n        Math.floor((coordinate[0] - bounds[0]) / layerZoomScale),\n        Math.floor((coordinate[1] - bounds[3]) / layerZoomScale)\n      ];\n      const coords = dataCoords[1] * width + dataCoords[0];\n      hoverData = data.map((d) => d[coords]);\n    }\n    handleValue(hoverData);\n    handleCoordnate(coordinate);\n  }\n  _renderLayers() {\n    const { onHover } = this;\n    const { viewStates } = this.state;\n    const { views, layerProps } = this.props;\n    return views.map((view, i) => view.getLayers({\n      viewStates,\n      props: {\n        ...layerProps[i],\n        onHover\n      }\n    }));\n  }\n  render() {\n    const { views, randomize, useDevicePixels = true, deckProps } = this.props;\n    const { viewStates } = this.state;\n    const deckGLViews = views.map((view) => view.getDeckGlView());\n    if (randomize) {\n      const random = Math.random();\n      const holdFirstElement = deckGLViews[0];\n      const randomWieghted = random * 1.49;\n      const randomizedIndex = Math.round(randomWieghted * (views.length - 1));\n      deckGLViews[0] = deckGLViews[randomizedIndex];\n      deckGLViews[randomizedIndex] = holdFirstElement;\n    }\n    return /* @__PURE__ */ React.createElement(DeckGL, {\n      ...deckProps ?? {},\n      layerFilter: this.layerFilter,\n      layers: this._renderLayers(),\n      onViewStateChange: this._onViewStateChange,\n      views: deckGLViews,\n      viewState: viewStates,\n      useDevicePixels,\n      getCursor: ({ isDragging }) => {\n        return isDragging ? \"grabbing\" : \"crosshair\";\n      }\n    });\n  }\n}\nconst VivViewer = (props) => /* @__PURE__ */ React.createElement(VivViewerWrapper, {\n  ...props\n});\n\n/**\n * This class generates a layer and a view for use in the VivViewer\n * @param {Object} args\n * @param {string} args.id id for this VivView.\n * @param {Object} args.height Width of the view.\n * @param {Object} args.width Height of the view.\n * @param {string} args.id Id for the current view\n * @param {number=} args.x X (top-left) location on the screen for the current view\n * @param {number=} args.y Y (top-left) location on the screen for the current view\n */\nclass VivView {\n  constructor({ id, x = 0, y = 0, height, width }) {\n    this.width = width;\n    this.height = height;\n    this.id = id;\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Create a DeckGL view based on this class.\n   * @returns {View} The DeckGL View for this class.\n   */\n  getDeckGlView() {\n    return new OrthographicView({\n      controller: true,\n      id: this.id,\n      height: this.height,\n      width: this.width,\n      x: this.x,\n      y: this.y\n    });\n  }\n\n  /**\n   * Create a viewState for this class, checking the id to make sure this class and veiwState match.\n   * @param {Object} args\n   * @param {object} [args.viewState] incoming ViewState object from deck.gl update.\n   * @param {object} [args.oldViewState] old ViewState object from deck.gl.\n   * @param {object} [args.currentViewState] current ViewState object in react state.\n   * @returns {?object} ViewState for this class (or null by default if the ids do not match).\n   */\n  filterViewState({ viewState }) {\n    const { id, height, width } = this;\n    return viewState.id === id ? { height, width, ...viewState } : null;\n  }\n\n  /**\n   * Create a layer for this instance.\n   * @param {Object} args\n   * @param {Object<string,Object>} args.viewStates ViewStates for all current views.\n   * @param {Object} args.props Props for this instance.\n   * @returns {Layer} Instance of a layer.\n   */\n  // eslint-disable-next-line class-methods-use-this,no-unused-vars\n  getLayers({ viewStates, props }) {}\n}\n\n/* eslint-disable max-classes-per-file */\n\nconst OVERVIEW_VIEW_ID = 'overview';\n\nclass OverviewState {}\n\nclass OverviewController extends Controller {\n  constructor(props) {\n    super(OverviewState, props);\n    this.events = ['click'];\n  }\n\n  handleEvent(event) {\n    if (event.type !== 'click') {\n      return;\n    }\n    let [x, y] = this.getCenter(event);\n    const { width, height, zoom, scale } = this.controllerStateProps;\n    if (x < 0 || y < 0 || x > width || y > height) {\n      return;\n    }\n    const scaleFactor = 1 / (2 ** zoom * scale);\n    x *= scaleFactor;\n    y *= scaleFactor;\n    if (this.onViewStateChange) {\n      this.onViewStateChange({ viewState: { target: [x, y, 0] } });\n    }\n  }\n}\n\n/**\n * This class generates a OverviewLayer and a view for use in the VivViewer as an overview to a Detailview (they must be used in conjection).\n * From the base class VivView, only the initialViewState argument is used.  This class uses private methods to position its x and y from the\n * additional arguments:\n * @param {Object} args\n * @param {Object} args.id for thie VivView\n * @param {Object} args.loader PixelSource[], where each PixelSource is decreasing in shape. If length == 1, not multiscale.\n * @param {number} args.detailHeight Height of the detail view.\n * @param {number} args.detailWidth Width of the detail view.\n * @param {number} [args.scale] Scale of this viewport relative to the detail. Default is .2.\n * @param {number} [args.margin] Margin to be offset from the the corner of the other viewport. Default is 25.\n * @param {string} [args.position] Location of the viewport - one of \"bottom-right\", \"top-right\", \"top-left\", \"bottom-left.\"  Default is 'bottom-right'.\n * @param {number} [args.minimumWidth] Absolute lower bound for how small the viewport should scale. Default is 150.\n * @param {number} [args.maximumWidth] Absolute upper bound for how large the viewport should scale. Default is 350.\n * @param {number} [args.minimumHeight] Absolute lower bound for how small the viewport should scale. Default is 150.\n * @param {number} [args.maximumHeight] Absolute upper bound for how large the viewport should scale. Default is 350.\n * @param {Boolean} [args.clickCenter] Click to center the default view. Default is true.\n * */\nclass OverviewView extends VivView {\n  constructor({\n    id,\n    loader,\n    detailHeight,\n    detailWidth,\n    scale = 0.2,\n    margin = 25,\n    position = 'bottom-right',\n    minimumWidth = 150,\n    maximumWidth = 350,\n    minimumHeight = 150,\n    maximumHeight = 350,\n    clickCenter = true\n  }) {\n    super({ id });\n    this.margin = margin;\n    this.loader = loader;\n    this.position = position;\n    this.detailHeight = detailHeight;\n    this.detailWidth = detailWidth;\n    this._setHeightWidthScale({\n      detailWidth,\n      detailHeight,\n      scale,\n      minimumWidth,\n      maximumWidth,\n      minimumHeight,\n      maximumHeight\n    });\n    this._setXY();\n    this.clickCenter = clickCenter;\n  }\n\n  /**\n   * Set the image-pixel scale and height and width based on detail view.\n   */\n  _setHeightWidthScale({\n    detailWidth,\n    detailHeight,\n    scale,\n    minimumWidth,\n    maximumWidth,\n    minimumHeight,\n    maximumHeight\n  }) {\n    const numLevels = this.loader.length;\n    const { width: rasterWidth, height: rasterHeight } = getImageSize(\n      this.loader[0]\n    );\n\n    this._imageWidth = rasterWidth;\n    this._imageHeight = rasterHeight;\n\n    if (rasterWidth > rasterHeight) {\n      const heightWidthRatio = rasterHeight / rasterWidth;\n      this.width = Math.min(\n        maximumWidth,\n        Math.max(detailWidth * scale, minimumWidth)\n      );\n      this.height = this.width * heightWidthRatio;\n      this.scale = (2 ** (numLevels - 1) / rasterWidth) * this.width;\n    } else {\n      const widthHeightRatio = rasterWidth / rasterHeight;\n      this.height = Math.min(\n        maximumHeight,\n        Math.max(detailHeight * scale, minimumHeight)\n      );\n      this.width = this.height * widthHeightRatio;\n      this.scale = (2 ** (numLevels - 1) / rasterHeight) * this.height;\n    }\n  }\n\n  /**\n   * Set the x and y (top left corner) of this overview relative to the detail.\n   */\n  _setXY() {\n    const { height, width, margin, position, detailWidth, detailHeight } = this;\n    switch (position) {\n      case 'bottom-right': {\n        this.x = detailWidth - width - margin;\n        this.y = detailHeight - height - margin;\n        break;\n      }\n      case 'top-right': {\n        this.x = detailWidth - width - margin;\n        this.y = margin;\n        break;\n      }\n      case 'top-left': {\n        this.x = margin;\n        this.y = margin;\n        break;\n      }\n      case 'bottom-left': {\n        this.x = margin;\n        this.y = detailHeight - height - margin;\n        break;\n      }\n      default: {\n        throw new Error(\n          `overviewLocation prop needs to be one of ['bottom-right', 'top-right', 'top-left', 'bottom-left']`\n        );\n      }\n    }\n  }\n\n  getDeckGlView() {\n    const { scale, clickCenter } = this;\n    const controller = clickCenter && { type: OverviewController, scale };\n    return new OrthographicView({\n      controller,\n      id: this.id,\n      height: this.height,\n      width: this.width,\n      x: this.x,\n      y: this.y,\n      clear: true\n    });\n  }\n\n  filterViewState({ viewState }) {\n    // Scale the view as the overviewScale changes with screen resizing - basically, do not react to any view state changes.\n    const { _imageWidth, _imageHeight, scale } = this;\n    return {\n      ...viewState,\n      height: this.height,\n      width: this.width,\n      id: this.id,\n      target: [(_imageWidth * scale) / 2, (_imageHeight * scale) / 2, 0],\n      zoom: -(this.loader.length - 1)\n    };\n  }\n\n  getLayers({ viewStates, props }) {\n    const { detail, overview } = viewStates;\n    if (!detail) {\n      throw new Error('Overview requires a viewState with id detail');\n    }\n    // Scale the bounding box.\n    const boundingBox = makeBoundingBox(detail).map(coords =>\n      coords.map(e => e * this.scale)\n    );\n    const overviewLayer = new OverviewLayer(props, {\n      id: getVivId(this.id),\n      boundingBox,\n      overviewScale: this.scale,\n      zoom: -overview.zoom\n    });\n    return [overviewLayer];\n  }\n}\n\nconst DETAIL_VIEW_ID = 'detail';\n\n/**\n * This class generates a MultiscaleImageLayer and a view for use in the VivViewer as a detailed view.\n * It takes the same arguments for its constructor as its base class VivView.\n * */\nclass DetailView extends VivView {\n  getLayers({ props, viewStates }) {\n    const { loader } = props;\n    const { id, height, width } = this;\n    const layerViewState = viewStates[id];\n    const layers = getImageLayers(id, props);\n\n    // Inspect the first pixel source for physical sizes\n    if (loader[0]?.meta?.physicalSizes?.x) {\n      const { size, unit } = loader[0].meta.physicalSizes.x;\n      layers.push(\n        new ScaleBarLayer({\n          id: getVivId(id),\n          loader,\n          unit,\n          size,\n          viewState: { ...layerViewState, height, width }\n        })\n      );\n    }\n\n    return layers;\n  }\n\n  filterViewState({ viewState, currentViewState }) {\n    if (viewState.id === OVERVIEW_VIEW_ID) {\n      const { target } = viewState;\n      if (target) {\n        return { ...currentViewState, target };\n      }\n    }\n    return super.filterViewState({ viewState });\n  }\n}\n\n/**\n * This class generates a MultiscaleImageLayer and a view for use in the SideBySideViewer.\n * It is linked with its other views as controlled by `linkedIds`, `zoomLock`, and `panLock` parameters.\n * It takes the same arguments for its constructor as its base class VivView plus the following:\n * @param {Object} args\n * @param {Array<String>} args.linkedIds Ids of the other views to which this could be locked via zoom/pan.\n * @param {Boolean} args.panLock Whether or not we lock pan.\n * @param {Boolean} args.zoomLock Whether or not we lock zoom.\n * @param {Array=} args.viewportOutlineColor Outline color of the border (default [255, 255, 255])\n * @param {number=} args.viewportOutlineWidth Default outline width (default 10)\n * @param {number=} args.x X (top-left) location on the screen for the current view\n * @param {number=} args.y Y (top-left) location on the screen for the current view\n * @param {number} args.height Width of the view.\n * @param {number} args.width Height of the view.\n * @param {string} args.id id of the View\n * */\nclass SideBySideView extends VivView {\n  constructor({\n    id,\n    x = 0,\n    y = 0,\n    height,\n    width,\n    linkedIds = [],\n    panLock = true,\n    zoomLock = true,\n    viewportOutlineColor = [255, 255, 255],\n    viewportOutlineWidth = 10\n  }) {\n    super({ id, x, y, height, width });\n    this.linkedIds = linkedIds;\n    this.panLock = panLock;\n    this.zoomLock = zoomLock;\n    this.viewportOutlineColor = viewportOutlineColor;\n    this.viewportOutlineWidth = viewportOutlineWidth;\n  }\n\n  filterViewState({ viewState, oldViewState, currentViewState }) {\n    const { id: viewStateId } = viewState;\n    const { id, linkedIds, panLock, zoomLock } = this;\n    if (\n      oldViewState &&\n      linkedIds.indexOf(viewStateId) !== -1 &&\n      (zoomLock || panLock)\n    ) {\n      const thisViewState = {\n        height: currentViewState.height,\n        width: currentViewState.width,\n        target: [],\n        zoom: null\n      };\n      const [currentX, currentY] = currentViewState.target;\n      if (zoomLock) {\n        const dZoom = viewState.zoom - oldViewState.zoom;\n        thisViewState.zoom = currentViewState.zoom + dZoom;\n      } else {\n        thisViewState.zoom = currentViewState.zoom;\n      }\n      if (panLock) {\n        const [oldX, oldY] = oldViewState.target;\n        const [newX, newY] = viewState.target;\n        const dx = newX - oldX;\n        const dy = newY - oldY;\n        thisViewState.target.push(currentX + dx);\n        thisViewState.target.push(currentY + dy);\n      } else {\n        thisViewState.target.push(currentX);\n        thisViewState.target.push(currentY);\n      }\n      return {\n        id,\n        target: thisViewState.target,\n        zoom: thisViewState.zoom,\n        height: thisViewState.height,\n        width: thisViewState.width\n      };\n    }\n    return viewState.id === id\n      ? {\n          id,\n          target: viewState.target,\n          zoom: viewState.zoom,\n          height: viewState.height,\n          width: viewState.width\n        }\n      : {\n          id,\n          target: currentViewState.target,\n          zoom: currentViewState.zoom,\n          height: currentViewState.height,\n          width: currentViewState.width\n        };\n  }\n\n  getLayers({ props, viewStates }) {\n    const { loader } = props;\n    const {\n      id,\n      viewportOutlineColor,\n      viewportOutlineWidth,\n      height,\n      width\n    } = this;\n    const layerViewState = viewStates[id];\n    const boundingBox = makeBoundingBox({ ...layerViewState, height, width });\n    const layers = getImageLayers(id, props);\n\n    const border = new PolygonLayer({\n      id: `viewport-outline-${getVivId(id)}`,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      data: [boundingBox],\n      getPolygon: f => f,\n      filled: false,\n      stroked: true,\n      getLineColor: viewportOutlineColor,\n      getLineWidth: viewportOutlineWidth * 2 ** -layerViewState.zoom\n    });\n    layers.push(border);\n\n    if (loader[0]?.meta?.physicalSizes?.x) {\n      const { size, unit } = loader[0].meta.physicalSizes.x;\n      layers.push(\n        new ScaleBarLayer({\n          id: getVivId(id),\n          loader,\n          unit,\n          size,\n          viewState: { ...layerViewState, height, width }\n        })\n      );\n    }\n\n    return layers;\n  }\n}\n\n/**\n * This class generates a VolumeLayer and a view for use in the VivViewer as volumetric rendering.\n * @param {Object} args\n * @param {Array<number>} args.target Centered target for the camera (used if useFixedAxis is true)\n * @param {Boolean} args.useFixedAxis Whether or not to fix the axis of the camera.\n * */\nclass VolumeView extends VivView {\n  constructor({ target, useFixedAxis, ...args }) {\n    super(args);\n    this.target = target;\n    this.useFixedAxis = useFixedAxis;\n  }\n\n  getDeckGlView() {\n    const { height, width, id, x, y } = this;\n    return new OrbitView({\n      id,\n      controller: true,\n      height,\n      width,\n      x,\n      y,\n      orbitAxis: 'Y'\n    });\n  }\n\n  filterViewState({ viewState }) {\n    const { id, target, useFixedAxis } = this;\n    return viewState.id === id\n      ? {\n          ...viewState,\n          // fix the center of the camera if desired\n          target: useFixedAxis ? target : viewState.target\n        }\n      : null;\n  }\n\n  getLayers({ props }) {\n    const { loader } = props;\n    const { id } = this;\n\n    const layers = [\n      new VolumeLayer(props, {\n        id: `${loader.type}${getVivId(id)}`\n      })\n    ];\n\n    return layers;\n  }\n}\n\nfunction useGlobalSelection(selections, transitionFields) {\n  // viewportSelection is the last selection that had an onViewportLoad callback.\n  const [viewportSelection, setViewportSelection] = useState(selections);\n  let onViewportLoad;\n  let newselections = null;\n  let oldselections = selections;\n  if (\n    selections?.length &&\n    viewportSelection?.length &&\n    transitionFields.some(f => selections[0][f] !== viewportSelection[0][f])\n  ) {\n    // onViewportLoad is a property of TileLayer that is passed through:\n    // https://deck.gl/docs/api-reference/geo-layers/tile-layer#onviewportload\n    onViewportLoad = () => setViewportSelection(selections);\n    // Set newselections to cause the creation of an extra tile layer.\n    newselections = selections;\n    oldselections = viewportSelection;\n  }\n  return { newselections, oldselections, onViewportLoad };\n}\n\nconst PictureInPictureViewer = (props) => {\n  const {\n    loader,\n    contrastLimits,\n    colors,\n    channelsVisible,\n    viewStates: viewStatesProp,\n    colormap,\n    overview,\n    overviewOn,\n    selections,\n    hoverHooks = { handleValue: () => {\n    }, handleCoordinate: () => {\n    } },\n    height,\n    width,\n    isLensOn = false,\n    lensSelection = 0,\n    lensRadius = 100,\n    lensBorderColor = [255, 255, 255],\n    lensBorderRadius = 0.02,\n    clickCenter = true,\n    transparentColor,\n    onViewStateChange,\n    onHover,\n    transitionFields = GLOBAL_SLIDER_DIMENSION_FIELDS,\n    onViewportLoad,\n    deckProps\n  } = props;\n  const {\n    newselections,\n    oldselections,\n    onViewportLoad: transitionOnViewportLoad\n  } = useGlobalSelection(selections, transitionFields);\n  const detailViewState = viewStatesProp?.find((v) => v.id === DETAIL_VIEW_ID);\n  const baseViewState = useMemo(() => {\n    return detailViewState || getDefaultInitialViewState(loader, { height, width }, 0.5);\n  }, [loader, detailViewState]);\n  const detailView = new DetailView({\n    id: DETAIL_VIEW_ID,\n    height,\n    width\n  });\n  const layerConfig = {\n    loader,\n    contrastLimits,\n    colors,\n    channelsVisible,\n    selections: oldselections,\n    newselections,\n    onViewportLoad,\n    transitionOnViewportLoad,\n    transitionFields,\n    colormap,\n    isLensOn,\n    lensSelection,\n    lensRadius,\n    lensBorderColor,\n    lensBorderRadius,\n    transparentColor\n  };\n  const views = [detailView];\n  const layerProps = [layerConfig];\n  const viewStates = [{ ...baseViewState, id: DETAIL_VIEW_ID }];\n  if (overviewOn && loader) {\n    const overviewViewState = viewStatesProp?.find((v) => v.id === OVERVIEW_VIEW_ID) || { ...baseViewState, id: OVERVIEW_VIEW_ID };\n    const overviewView = new OverviewView({\n      id: OVERVIEW_VIEW_ID,\n      loader,\n      detailHeight: height,\n      detailWidth: width,\n      clickCenter,\n      ...overview\n    });\n    views.push(overviewView);\n    layerProps.push(layerConfig);\n    viewStates.push(overviewViewState);\n  }\n  if (!loader)\n    return null;\n  return /* @__PURE__ */ React.createElement(VivViewer, {\n    layerProps,\n    views,\n    viewStates,\n    hoverHooks,\n    onViewStateChange,\n    onHover,\n    deckProps\n  });\n};\n\nconst SideBySideViewer = (props) => {\n  const {\n    loader,\n    contrastLimits,\n    colors,\n    channelsVisible,\n    viewStates: viewStatesProp,\n    colormap,\n    panLock,\n    selections,\n    zoomLock,\n    height,\n    width,\n    isLensOn = false,\n    lensSelection = 0,\n    lensRadius = 100,\n    lensBorderColor = [255, 255, 255],\n    lensBorderRadius = 0.02,\n    transparentColor,\n    onViewStateChange,\n    onHover,\n    transitionFields = GLOBAL_SLIDER_DIMENSION_FIELDS,\n    onViewportLoad,\n    deckProps\n  } = props;\n  const {\n    newselections,\n    oldselections,\n    onViewportLoad: transitionOnViewportLoad\n  } = useGlobalSelection(selections, transitionFields);\n  const leftViewState = viewStatesProp?.find((v) => v.id === \"left\");\n  const rightViewState = viewStatesProp?.find((v) => v.id === \"right\");\n  const viewStates = useMemo(() => {\n    if (leftViewState && rightViewState) {\n      return viewStatesProp;\n    }\n    const defaultViewState = getDefaultInitialViewState(loader, { height, width: width / 2 }, 0.5);\n    return [\n      leftViewState || { ...defaultViewState, id: \"left\" },\n      rightViewState || { ...defaultViewState, id: \"right\" }\n    ];\n  }, [loader, leftViewState, rightViewState]);\n  const detailViewLeft = new SideBySideView({\n    id: \"left\",\n    linkedIds: [\"right\"],\n    panLock,\n    zoomLock,\n    height,\n    width: width / 2\n  });\n  const detailViewRight = new SideBySideView({\n    id: \"right\",\n    x: width / 2,\n    linkedIds: [\"left\"],\n    panLock,\n    zoomLock,\n    height,\n    width: width / 2\n  });\n  const layerConfig = {\n    loader,\n    contrastLimits,\n    colors,\n    channelsVisible,\n    selections: oldselections,\n    newselections,\n    onViewportLoad,\n    transitionOnViewportLoad,\n    transitionFields,\n    colormap,\n    isLensOn,\n    lensSelection,\n    lensRadius,\n    lensBorderColor,\n    lensBorderRadius,\n    transparentColor\n  };\n  const views = [detailViewRight, detailViewLeft];\n  const layerProps = [layerConfig, layerConfig];\n  return loader ? /* @__PURE__ */ React.createElement(VivViewer, {\n    layerProps,\n    views,\n    randomize: true,\n    onViewStateChange,\n    onHover,\n    viewStates,\n    deckProps\n  }) : null;\n};\n\nconst VolumeViewer = (props) => {\n  const {\n    loader,\n    contrastLimits,\n    colors,\n    channelsVisible,\n    selections,\n    colormap,\n    resolution = Math.max(0, loader.length - 1),\n    modelMatrix,\n    onViewStateChange,\n    renderingMode = RENDERING_MODES.ADDITIVE,\n    xSlice = null,\n    ySlice = null,\n    zSlice = null,\n    onViewportLoad,\n    height: screenHeight,\n    width: screenWidth,\n    viewStates: viewStatesProp,\n    clippingPlanes = [],\n    useFixedAxis = true\n  } = props;\n  const volumeViewState = viewStatesProp?.find((state) => state?.id === \"3d\");\n  const initialViewState = useMemo(() => {\n    if (volumeViewState) {\n      return volumeViewState;\n    }\n    const viewState = getDefaultInitialViewState(loader, { height: screenHeight, width: screenWidth }, 1, true, modelMatrix);\n    return {\n      ...viewState,\n      rotationX: 0,\n      rotationOrbit: 0\n    };\n  }, [loader, resolution, modelMatrix]);\n  const viewStates = [volumeViewState || { ...initialViewState, id: \"3d\" }];\n  const volumeView = new VolumeView({\n    id: \"3d\",\n    target: viewStates[0].target,\n    useFixedAxis\n  });\n  const layerConfig = {\n    loader,\n    contrastLimits,\n    colors,\n    channelsVisible,\n    selections,\n    colormap,\n    xSlice,\n    ySlice,\n    zSlice,\n    resolution,\n    renderingMode,\n    modelMatrix,\n    onViewportLoad: () => setTimeout(onViewportLoad, 0),\n    clippingPlanes\n  };\n  const views = [volumeView];\n  const layerProps = [layerConfig];\n  return loader ? /* @__PURE__ */ React.createElement(VivViewer, {\n    layerProps,\n    views,\n    viewStates,\n    onViewStateChange,\n    useDevicePixels: false\n  }) : null;\n};\n\nconst VIV_PROXY_KEY = \"__viv\";\nconst OFFSETS_PROXY_KEY = `${VIV_PROXY_KEY}-offsets`;\nfunction checkProxies(tiff) {\n  if (!isProxy(tiff, OFFSETS_PROXY_KEY)) {\n    console.warn(\"GeoTIFF source is missing offsets proxy.\");\n  }\n}\nfunction isProxy(tiff, proxyFlag) {\n  return tiff[proxyFlag];\n}\nfunction createOffsetsProxy(tiff, offsets) {\n  const get = (target, key) => {\n    if (key === \"getImage\") {\n      return (index) => {\n        if (!(index in target.ifdRequests) && index in offsets) {\n          const offset = offsets[index];\n          target.ifdRequests[index] = target.parseFileDirectoryAt(offset);\n        }\n        return target.getImage(index);\n      };\n    }\n    if (key === OFFSETS_PROXY_KEY) {\n      return true;\n    }\n    return Reflect.get(target, key);\n  };\n  return new Proxy(tiff, { get });\n}\n\nconst encodedJs = \"\";\n            const blob = typeof window !== \"undefined\" && window.Blob && new Blob([atob(encodedJs)], { type: \"text/javascript;charset=utf-8\" });\n            function WorkerWrapper() {\n              const objURL = blob && (window.URL || window.webkitURL).createObjectURL(blob);\n              try {\n                return objURL ? new Worker(objURL) : new Worker(\"data:application/javascript;base64,\" + encodedJs, {type: \"module\"});\n              } finally {\n                objURL && (window.URL || window.webkitURL).revokeObjectURL(objURL);\n              }\n            }\n\nconst defaultPoolSize = globalThis?.navigator?.hardwareConcurrency ?? 4;\nclass Pool {\n  workers;\n  idleWorkers;\n  waitQueue;\n  decoder;\n  constructor(size = defaultPoolSize) {\n    this.workers = [];\n    this.idleWorkers = [];\n    this.waitQueue = [];\n    this.decoder = null;\n    for (let i = 0; i < size; ++i) {\n      const w = new WorkerWrapper();\n      this.workers.push(w);\n      this.idleWorkers.push(w);\n    }\n  }\n  async decode(fileDirectory, buffer) {\n    const currentWorker = await this.waitForWorker();\n    return new Promise((resolve, reject) => {\n      currentWorker.onmessage = (event) => {\n        this.finishTask(currentWorker);\n        resolve(event.data);\n      };\n      currentWorker.onerror = (error) => {\n        this.finishTask(currentWorker);\n        reject(error);\n      };\n      currentWorker.postMessage([\"decode\", fileDirectory, buffer], [buffer]);\n    });\n  }\n  async waitForWorker() {\n    const idleWorker = this.idleWorkers.pop();\n    if (idleWorker) {\n      return idleWorker;\n    }\n    const waiter = {};\n    const promise = new Promise((resolve) => {\n      waiter.resolve = resolve;\n    });\n    this.waitQueue.push(waiter);\n    return promise;\n  }\n  async finishTask(currentWorker) {\n    const waiter = this.waitQueue.pop();\n    if (waiter) {\n      waiter.resolve(currentWorker);\n    } else {\n      this.idleWorkers.push(currentWorker);\n    }\n  }\n  destroy() {\n    for (let i = 0; i < this.workers.length; ++i) {\n      this.workers[i].terminate();\n    }\n  }\n}\n\nconst PARSER_OPTIONS = {\n  attributeNamePrefix: \"\",\n  attrNodeName: \"attr\",\n  parseNodeValue: true,\n  parseAttributeValue: true,\n  ignoreAttributes: false\n};\nconst parse = (str) => parser.parse(str, PARSER_OPTIONS);\nfunction fromString(str) {\n  const res = parse(str);\n  if (!res.OME) {\n    throw Error(\"Failed to parse OME-XML metadata.\");\n  }\n  return ensureArray(res.OME.Image).map((img) => {\n    const Channels = ensureArray(img.Pixels.Channel).map((c) => {\n      if (\"Color\" in c.attr) {\n        return { ...c.attr, Color: intToRgba(c.attr.Color) };\n      }\n      return { ...c.attr };\n    });\n    const { AquisitionDate = \"\", Description = \"\" } = img;\n    const image = {\n      ...img.attr,\n      AquisitionDate,\n      Description,\n      Pixels: {\n        ...img.Pixels.attr,\n        Channels\n      }\n    };\n    return {\n      ...image,\n      format() {\n        const { Pixels } = image;\n        const sizes = [\"X\", \"Y\", \"Z\"].map((name) => {\n          const size = Pixels[`PhysicalSize${name}`];\n          const unit = Pixels[`PhysicalSize${name}Unit`];\n          return size && unit ? `${size} ${unit}` : \"-\";\n        }).join(\" x \");\n        return {\n          \"Acquisition Date\": image.AquisitionDate,\n          \"Dimensions (XY)\": `${Pixels.SizeX} x ${Pixels.SizeY}`,\n          \"Pixels Type\": Pixels.Type,\n          \"Pixels Size (XYZ)\": sizes,\n          \"Z-sections/Timepoints\": `${Pixels.SizeZ} x ${Pixels.SizeT}`,\n          Channels: Pixels.SizeC\n        };\n      }\n    };\n  });\n}\n\nclass TiffPixelSource {\n  constructor(indexer, dtype, tileSize, shape, labels, meta, pool) {\n    this.dtype = dtype;\n    this.tileSize = tileSize;\n    this.shape = shape;\n    this.labels = labels;\n    this.meta = meta;\n    this.pool = pool;\n    this._indexer = indexer;\n  }\n  _indexer;\n  async getRaster({ selection, signal }) {\n    const image = await this._indexer(selection);\n    return this._readRasters(image, { signal });\n  }\n  async getTile({ x, y, selection, signal }) {\n    const { height, width } = this._getTileExtent(x, y);\n    const x0 = x * this.tileSize;\n    const y0 = y * this.tileSize;\n    const window = [x0, y0, x0 + width, y0 + height];\n    const image = await this._indexer(selection);\n    return this._readRasters(image, { window, width, height, signal });\n  }\n  async _readRasters(image, props) {\n    const interleave = isInterleaved(this.shape);\n    const raster = await image.readRasters({\n      interleave,\n      ...props,\n      pool: this.pool\n    });\n    if (props?.signal?.aborted) {\n      throw SIGNAL_ABORTED;\n    }\n    const data = interleave ? raster : raster[0];\n    return {\n      data,\n      width: raster.width,\n      height: raster.height\n    };\n  }\n  _getTileExtent(x, y) {\n    const { height: zoomLevelHeight, width: zoomLevelWidth } = getImageSize(this);\n    let height = this.tileSize;\n    let width = this.tileSize;\n    const maxXTileCoord = Math.floor(zoomLevelWidth / this.tileSize);\n    const maxYTileCoord = Math.floor(zoomLevelHeight / this.tileSize);\n    if (x === maxXTileCoord) {\n      width = zoomLevelWidth % this.tileSize;\n    }\n    if (y === maxYTileCoord) {\n      height = zoomLevelHeight % this.tileSize;\n    }\n    return { height, width };\n  }\n  onTileError(err) {\n    console.error(err);\n  }\n}\n\nfunction getOmeLegacyIndexer(tiff, rootMeta) {\n  const imgMeta = rootMeta[0];\n  const { SizeT, SizeC, SizeZ } = imgMeta.Pixels;\n  const ifdIndexer = getOmeIFDIndexer(imgMeta);\n  return (sel, pyramidLevel) => {\n    const index = ifdIndexer(sel);\n    const pyramidIndex = pyramidLevel * SizeZ * SizeT * SizeC;\n    return tiff.getImage(index + pyramidIndex);\n  };\n}\nfunction getOmeSubIFDIndexer(tiff, rootMeta) {\n  const imgMeta = rootMeta[0];\n  const ifdIndexer = getOmeIFDIndexer(imgMeta);\n  const ifdCache = new Map();\n  return async (sel, pyramidLevel) => {\n    const index = ifdIndexer(sel);\n    const baseImage = await tiff.getImage(index);\n    if (pyramidLevel === 0) {\n      return baseImage;\n    }\n    const { SubIFDs } = baseImage.fileDirectory;\n    if (!SubIFDs) {\n      throw Error(\"Indexing Error: OME-TIFF is missing SubIFDs.\");\n    }\n    const key = `${sel.t}-${sel.c}-${sel.z}-${pyramidLevel}`;\n    if (!ifdCache.has(key)) {\n      const subIfdOffset = SubIFDs[pyramidLevel - 1];\n      ifdCache.set(key, tiff.parseFileDirectoryAt(subIfdOffset));\n    }\n    const ifd = await ifdCache.get(key);\n    return new baseImage.constructor(ifd.fileDirectory, ifd.geoKeyDirectory, tiff.dataView, tiff.littleEndian, tiff.cache, tiff.source);\n  };\n}\nfunction getOmeIFDIndexer(imgMeta) {\n  const { SizeC, SizeZ, SizeT, DimensionOrder } = imgMeta.Pixels;\n  switch (DimensionOrder) {\n    case \"XYZCT\": {\n      return ({ t, c, z }) => t * SizeZ * SizeC + c * SizeZ + z;\n    }\n    case \"XYZTC\": {\n      return ({ t, c, z }) => c * SizeZ * SizeT + t * SizeZ + z;\n    }\n    case \"XYCTZ\": {\n      return ({ t, c, z }) => z * SizeC * SizeT + t * SizeC + c;\n    }\n    case \"XYCZT\": {\n      return ({ t, c, z }) => t * SizeC * SizeZ + z * SizeC + c;\n    }\n    case \"XYTCZ\": {\n      return ({ t, c, z }) => z * SizeT * SizeC + c * SizeT + t;\n    }\n    case \"XYTZC\": {\n      return ({ t, c, z }) => c * SizeT * SizeZ + z * SizeT + t;\n    }\n    default: {\n      throw new Error(`Invalid OME-XML DimensionOrder, got ${DimensionOrder}.`);\n    }\n  }\n}\n\nconst DTYPE_LOOKUP$1 = {\n  uint8: \"Uint8\",\n  uint16: \"Uint16\",\n  uint32: \"Uint32\",\n  float: \"Float32\",\n  double: \"Float64\",\n  int8: \"Int8\",\n  int16: \"Int16\",\n  int32: \"Int32\"\n};\nfunction getOmePixelSourceMeta({ Pixels }) {\n  const labels = getLabels(Pixels.DimensionOrder);\n  const dims = getDims(labels);\n  const shape = Array(labels.length).fill(0);\n  shape[dims(\"t\")] = Pixels.SizeT;\n  shape[dims(\"c\")] = Pixels.SizeC;\n  shape[dims(\"z\")] = Pixels.SizeZ;\n  if (Pixels.Interleaved) {\n    labels.push(\"_c\");\n    shape.push(3);\n  }\n  const getShape = (level) => {\n    const s = [...shape];\n    s[dims(\"x\")] = Pixels.SizeX >> level;\n    s[dims(\"y\")] = Pixels.SizeY >> level;\n    return s;\n  };\n  if (!(Pixels.Type in DTYPE_LOOKUP$1)) {\n    throw Error(`Pixel type ${Pixels.Type} not supported.`);\n  }\n  const dtype = DTYPE_LOOKUP$1[Pixels.Type];\n  if (Pixels.PhysicalSizeX && Pixels.PhysicalSizeY) {\n    const physicalSizes = {\n      x: {\n        size: Pixels.PhysicalSizeX,\n        unit: Pixels.PhysicalSizeXUnit\n      },\n      y: {\n        size: Pixels.PhysicalSizeY,\n        unit: Pixels.PhysicalSizeYUnit\n      }\n    };\n    if (Pixels.PhysicalSizeZ) {\n      physicalSizes.z = {\n        size: Pixels.PhysicalSizeZ,\n        unit: Pixels.PhysicalSizeZUnit\n      };\n    }\n    return { labels, getShape, physicalSizes, dtype };\n  }\n  return { labels, getShape, dtype };\n}\nfunction guessTileSize$1(image) {\n  const tileWidth = image.getTileWidth();\n  const tileHeight = image.getTileHeight();\n  const size = Math.min(tileWidth, tileHeight);\n  return prevPowerOf2(size);\n}\n\nasync function load$2(tiff, pool) {\n  const firstImage = await tiff.getImage(0);\n  const {\n    ImageDescription,\n    SubIFDs,\n    PhotometricInterpretation: photometricInterpretation\n  } = firstImage.fileDirectory;\n  const omexml = fromString(ImageDescription);\n  let levels;\n  let pyramidIndexer;\n  if (SubIFDs) {\n    levels = SubIFDs.length + 1;\n    pyramidIndexer = getOmeSubIFDIndexer(tiff, omexml);\n  } else {\n    levels = omexml.length;\n    pyramidIndexer = getOmeLegacyIndexer(tiff, omexml);\n  }\n  const imgMeta = omexml[0];\n  const { labels, getShape, physicalSizes, dtype } = getOmePixelSourceMeta(imgMeta);\n  const tileSize = guessTileSize$1(firstImage);\n  const meta = { photometricInterpretation, physicalSizes };\n  const data = Array.from({ length: levels }).map((_, resolution) => {\n    const shape = getShape(resolution);\n    const indexer = (sel) => pyramidIndexer(sel, resolution);\n    const source = new TiffPixelSource(indexer, dtype, tileSize, shape, labels, meta, pool);\n    return source;\n  });\n  return {\n    data,\n    metadata: imgMeta\n  };\n}\n\nasync function loadOmeTiff(source, opts = {}) {\n  const { headers, offsets, pool = true } = opts;\n  let tiff;\n  if (typeof source === \"string\") {\n    tiff = await fromUrl(source, { ...headers, cacheSize: Infinity });\n  } else {\n    tiff = await fromBlob(source);\n  }\n  if (offsets) {\n    tiff = createOffsetsProxy(tiff, offsets);\n  }\n  checkProxies(tiff);\n  return pool ? load$2(tiff, new Pool()) : load$2(tiff);\n}\n\nfunction joinUrlParts(...args) {\n  return args.map((part, i) => {\n    if (i === 0)\n      return part.trim().replace(/[/]*$/g, \"\");\n    return part.trim().replace(/(^[/]*|[/]*$)/g, \"\");\n  }).filter((x) => x.length).join(\"/\");\n}\nclass ReadOnlyStore {\n  async keys() {\n    return [];\n  }\n  async deleteItem() {\n    return false;\n  }\n  async setItem() {\n    console.warn(\"Cannot write to read-only store.\");\n    return false;\n  }\n}\nclass FileStore extends ReadOnlyStore {\n  _map;\n  _rootPrefix;\n  constructor(fileMap, rootPrefix = \"\") {\n    super();\n    this._map = fileMap;\n    this._rootPrefix = rootPrefix;\n  }\n  _key(key) {\n    return joinUrlParts(this._rootPrefix, key);\n  }\n  async getItem(key) {\n    const file = this._map.get(this._key(key));\n    if (!file) {\n      throw new KeyError(key);\n    }\n    const buffer = await file.arrayBuffer();\n    return buffer;\n  }\n  async containsItem(key) {\n    const path = this._key(key);\n    return this._map.has(path);\n  }\n}\n\nfunction isOmeZarr(dataShape, Pixels) {\n  const { SizeT, SizeC, SizeZ, SizeY, SizeX } = Pixels;\n  const omeZarrShape = [SizeT, SizeC, SizeZ, SizeY, SizeX];\n  return dataShape.every((size, i) => omeZarrShape[i] === size);\n}\nfunction guessBioformatsLabels({ shape }, { Pixels }) {\n  if (isOmeZarr(shape, Pixels)) {\n    return getLabels(\"XYZCT\");\n  }\n  const labels = getLabels(Pixels.DimensionOrder);\n  labels.forEach((lower, i) => {\n    const label = lower.toUpperCase();\n    const xmlSize = Pixels[`Size${label}`];\n    if (!xmlSize) {\n      throw Error(`Dimension ${label} is invalid for OME-XML.`);\n    }\n    if (shape[i] !== xmlSize) {\n      throw Error(\"Dimension mismatch between zarr source and OME-XML.\");\n    }\n  });\n  return labels;\n}\nfunction getRootPrefix(files, rootName) {\n  const first = files.find((f) => f.path.indexOf(rootName) > 0);\n  if (!first) {\n    throw Error(\"Could not find root in store.\");\n  }\n  const prefixLength = first.path.indexOf(rootName) + rootName.length;\n  return first.path.slice(0, prefixLength);\n}\nasync function loadMultiscales(store, path = \"\") {\n  const grp = await openGroup(store, path);\n  const rootAttrs = await grp.attrs.asObject();\n  let paths = [\"0\"];\n  if (\"multiscales\" in rootAttrs) {\n    const { datasets } = rootAttrs.multiscales[0];\n    paths = datasets.map((d) => d.path);\n  }\n  const data = paths.map((path2) => grp.getItem(path2));\n  return {\n    data: await Promise.all(data),\n    rootAttrs\n  };\n}\nfunction guessTileSize(arr) {\n  const interleaved = isInterleaved(arr.shape);\n  const [yChunk, xChunk] = arr.chunks.slice(interleaved ? -3 : -2);\n  const size = Math.min(yChunk, xChunk);\n  return prevPowerOf2(size);\n}\n\nfunction getIndexer(labels) {\n  const size = labels.length;\n  const dims = getDims(labels);\n  return (sel) => {\n    if (Array.isArray(sel)) {\n      return [...sel];\n    }\n    const selection = Array(size).fill(0);\n    for (const [key, value] of Object.entries(sel)) {\n      selection[dims(key)] = value;\n    }\n    return selection;\n  };\n}\n\nconst DTYPE_LOOKUP = {\n  u1: \"Uint8\",\n  u2: \"Uint16\",\n  u4: \"Uint32\",\n  f4: \"Float32\",\n  f8: \"Float64\",\n  i1: \"Int8\",\n  i2: \"Int16\",\n  i4: \"Int32\"\n};\nclass ZarrPixelSource {\n  constructor(data, labels, tileSize) {\n    this.labels = labels;\n    this.tileSize = tileSize;\n    this._indexer = getIndexer(labels);\n    this._data = data;\n    const xChunkSize = data.chunks[this._xIndex];\n    const yChunkSize = data.chunks[this._xIndex - 1];\n    this._readChunks = tileSize === xChunkSize && tileSize === yChunkSize;\n  }\n  _data;\n  _indexer;\n  _readChunks;\n  get shape() {\n    return this._data.shape;\n  }\n  get dtype() {\n    const suffix = this._data.dtype.slice(1);\n    if (!(suffix in DTYPE_LOOKUP)) {\n      throw Error(`Zarr dtype not supported, got ${suffix}.`);\n    }\n    return DTYPE_LOOKUP[suffix];\n  }\n  get _xIndex() {\n    const interleave = isInterleaved(this._data.shape);\n    return this._data.shape.length - (interleave ? 2 : 1);\n  }\n  _chunkIndex(selection, x, y) {\n    const sel = this._indexer(selection);\n    sel[this._xIndex] = x;\n    sel[this._xIndex - 1] = y;\n    return sel;\n  }\n  _getSlices(x, y) {\n    const { height, width } = getImageSize(this);\n    const [xStart, xStop] = [\n      x * this.tileSize,\n      Math.min((x + 1) * this.tileSize, width)\n    ];\n    const [yStart, yStop] = [\n      y * this.tileSize,\n      Math.min((y + 1) * this.tileSize, height)\n    ];\n    if (xStart === xStop || yStart === yStop) {\n      throw new BoundsCheckError(\"Tile slice is zero-sized.\");\n    }\n    return [slice(xStart, xStop), slice(yStart, yStop)];\n  }\n  async getRaster({ selection }) {\n    const sel = this._chunkIndex(selection, null, null);\n    const { data, shape } = await this._data.getRaw(sel);\n    const [height, width] = shape;\n    return { data, width, height };\n  }\n  async getTile(props) {\n    const { x, y, selection, signal } = props;\n    let res;\n    if (this._readChunks) {\n      const sel = this._chunkIndex(selection, x, y);\n      res = await this._data.getRawChunk(sel, { storeOptions: { signal } });\n    } else {\n      const [xSlice, ySlice] = this._getSlices(x, y);\n      const sel = this._chunkIndex(selection, xSlice, ySlice);\n      res = await this._data.getRaw(sel);\n    }\n    const {\n      data,\n      shape: [height, width]\n    } = res;\n    return { data, width, height };\n  }\n  onTileError(err) {\n    if (!(err instanceof BoundsCheckError)) {\n      throw err;\n    }\n  }\n}\n\nasync function load$1(root, xmlSource) {\n  if (typeof xmlSource !== \"string\") {\n    xmlSource = await xmlSource.text();\n  }\n  const imgMeta = fromString(xmlSource)[0];\n  const { data } = await loadMultiscales(root, \"0\");\n  const labels = guessBioformatsLabels(data[0], imgMeta);\n  const tileSize = guessTileSize(data[0]);\n  const pyramid = data.map((arr) => new ZarrPixelSource(arr, labels, tileSize));\n  return {\n    data: pyramid,\n    metadata: imgMeta\n  };\n}\n\nasync function load(store) {\n  const { data, rootAttrs } = await loadMultiscales(store);\n  const labels = [\"t\", \"c\", \"z\", \"y\", \"x\"];\n  const tileSize = guessTileSize(data[0]);\n  const pyramid = data.map((arr) => new ZarrPixelSource(arr, labels, tileSize));\n  return {\n    data: pyramid,\n    metadata: rootAttrs\n  };\n}\n\nasync function loadBioformatsZarr(source, options = {}) {\n  const METADATA = \"METADATA.ome.xml\";\n  const ZARR_DIR = \"data.zarr\";\n  if (typeof source === \"string\") {\n    const url = source.endsWith(\"/\") ? source.slice(0, -1) : source;\n    const store2 = new HTTPStore(url + \"/\" + ZARR_DIR, options);\n    const xmlSource = await fetch(url + \"/\" + METADATA, options.fetchOptions);\n    return load$1(store2, xmlSource);\n  }\n  const fMap = new Map();\n  let xmlFile;\n  for (const file of source) {\n    if (file.name === METADATA) {\n      xmlFile = file;\n    } else {\n      fMap.set(file.path, file);\n    }\n  }\n  if (!xmlFile) {\n    throw Error(\"No OME-XML metadata found for store.\");\n  }\n  const store = new FileStore(fMap, getRootPrefix(source, ZARR_DIR));\n  return load$1(store, xmlFile);\n}\nasync function loadOmeZarr(source, options = {}) {\n  const store = new HTTPStore(source, options);\n  if (options?.type !== \"multiscales\") {\n    throw Error(\"Only multiscale OME-Zarr is supported.\");\n  }\n  return load(store);\n}\n\nexport { BitmapLayer, COLORMAPS, DETAIL_VIEW_ID, DTYPE_VALUES, DetailView, ImageLayer, MAX_CHANNELS, MultiscaleImageLayer, OVERVIEW_VIEW_ID, OverviewLayer, OverviewView, PictureInPictureViewer, RENDERING_MODES, ScaleBarLayer, SideBySideView, SideBySideViewer, TiffPixelSource, VivView, VivViewer, VolumeLayer, VolumeView, VolumeViewer, XR3DLayer, XRLayer, ZarrPixelSource, getChannelStats, getDefaultInitialViewState, loadBioformatsZarr, loadOmeTiff, loadOmeZarr };\n", "import { RENDERING_MODES } from '@hms-dbmi/viv';\n\nexport const GLOBAL_LABELS = ['z', 't'];\n\nexport const DEFAULT_RASTER_DOMAIN_TYPE = 'Min/Max';\n\nexport const DEFAULT_RASTER_LAYER_PROPS = {\n  visible: true,\n  colormap: null,\n  opacity: 1,\n  domainType: DEFAULT_RASTER_DOMAIN_TYPE,\n  transparentColor: [0, 0, 0],\n  renderingMode: RENDERING_MODES.ADDITIVE,\n  use3d: false,\n};\n\nexport const DEFAULT_MOLECULES_LAYER = {\n  opacity: 1, radius: 20, visible: true,\n};\nexport const DEFAULT_CELLS_LAYER = {\n  opacity: 1, radius: 50, visible: true, stroked: false,\n};\nexport const DEFAULT_NEIGHBORHOODS_LAYER = {\n  visible: false,\n};\n\nexport const DEFAULT_LAYER_TYPE_ORDERING = [\n  'molecules',\n  'cells',\n  'neighborhoods',\n  'raster',\n];\n", "/**\n * Constants representing names of coordination types,\n * to help prevent typos.\n */\nexport const COORDINATION_TYPES = {\n  DATASET: 'dataset',\n  EMBEDDING_TYPE: 'embeddingType',\n  EMBEDDING_ZOOM: 'embeddingZoom',\n  EMBEDDING_ROTATION: 'embeddingRotation',\n  EMBEDDING_TARGET_X: 'embeddingTargetX',\n  EMBEDDING_TARGET_Y: 'embeddingTargetY',\n  EMBEDDING_TARGET_Z: 'embeddingTargetZ',\n  EMBEDDING_CELL_SET_POLYGONS_VISIBLE: 'embeddingCellSetPolygonsVisible',\n  EMBEDDING_CELL_SET_LABELS_VISIBLE: 'embeddingCellSetLabelsVisible',\n  EMBEDDING_CELL_SET_LABEL_SIZE: 'embeddingCellSetLabelSize',\n  EMBEDDING_CELL_RADIUS: 'embeddingCellRadius',\n  EMBEDDING_CELL_OPACITY: 'embeddingCellOpacity',\n  EMBEDDING_CELL_RADIUS_MODE: 'embeddingCellRadiusMode',\n  EMBEDDING_CELL_OPACITY_MODE: 'embeddingCellOpacityMode',\n  SPATIAL_ZOOM: 'spatialZoom',\n  SPATIAL_ROTATION: 'spatialRotation',\n  SPATIAL_TARGET_X: 'spatialTargetX',\n  SPATIAL_TARGET_Y: 'spatialTargetY',\n  SPATIAL_TARGET_Z: 'spatialTargetZ',\n  SPATIAL_ROTATION_X: 'spatialRotationX',\n  SPATIAL_ROTATION_Y: 'spatialRotationY',\n  SPATIAL_ROTATION_Z: 'spatialRotationZ',\n  SPATIAL_ROTATION_ORBIT: 'spatialRotationOrbit',\n  SPATIAL_ORBIT_AXIS: 'spatialOrbitAxis',\n  SPATIAL_AXIS_FIXED: 'spatialAxisFixed',\n  HEATMAP_ZOOM_X: 'heatmapZoomX',\n  HEATMAP_ZOOM_Y: 'heatmapZoomY',\n  HEATMAP_TARGET_X: 'heatmapTargetX',\n  HEATMAP_TARGET_Y: 'heatmapTargetY',\n  CELL_FILTER: 'cellFilter',\n  CELL_HIGHLIGHT: 'cellHighlight',\n  CELL_SET_SELECTION: 'cellSetSelection',\n  CELL_SET_HIGHLIGHT: 'cellSetHighlight',\n  CELL_SET_COLOR: 'cellSetColor',\n  GENE_FILTER: 'geneFilter',\n  GENE_HIGHLIGHT: 'geneHighlight',\n  GENE_SELECTION: 'geneSelection',\n  GENE_EXPRESSION_COLORMAP: 'geneExpressionColormap',\n  GENE_EXPRESSION_TRANSFORM: 'geneExpressionTransform',\n  GENE_EXPRESSION_COLORMAP_RANGE: 'geneExpressionColormapRange',\n  CELL_COLOR_ENCODING: 'cellColorEncoding',\n  SPATIAL_RASTER_LAYERS: 'spatialRasterLayers',\n  SPATIAL_CELLS_LAYER: 'spatialCellsLayer',\n  SPATIAL_MOLECULES_LAYER: 'spatialMoleculesLayer',\n  SPATIAL_NEIGHBORHOODS_LAYER: 'spatialNeighborhoodsLayer',\n  GENOMIC_ZOOM_X: 'genomicZoomX',\n  GENOMIC_ZOOM_Y: 'genomicZoomY',\n  GENOMIC_TARGET_X: 'genomicTargetX',\n  GENOMIC_TARGET_Y: 'genomicTargetY',\n  ADDITIONAL_CELL_SETS: 'additionalCellSets',\n  MOLECULE_HIGHLIGHT: 'moleculeHighlight',\n};\n\n/**\n * Coordination types may have default values,\n * which can be defined here, and used by the\n * auto initialization strategy.\n */\nexport const DEFAULT_COORDINATION_VALUES = {\n  [COORDINATION_TYPES.EMBEDDING_ZOOM]: null,\n  [COORDINATION_TYPES.EMBEDDING_ROTATION]: 0,\n  [COORDINATION_TYPES.EMBEDDING_TARGET_X]: null,\n  [COORDINATION_TYPES.EMBEDDING_TARGET_Y]: null,\n  [COORDINATION_TYPES.EMBEDDING_TARGET_Z]: 0,\n  [COORDINATION_TYPES.EMBEDDING_CELL_SET_POLYGONS_VISIBLE]: false,\n  [COORDINATION_TYPES.EMBEDDING_CELL_SET_LABELS_VISIBLE]: false,\n  [COORDINATION_TYPES.EMBEDDING_CELL_SET_LABEL_SIZE]: 14,\n  [COORDINATION_TYPES.EMBEDDING_CELL_RADIUS]: 1,\n  [COORDINATION_TYPES.EMBEDDING_CELL_RADIUS_MODE]: 'auto',\n  [COORDINATION_TYPES.EMBEDDING_CELL_OPACITY]: 1,\n  [COORDINATION_TYPES.EMBEDDING_CELL_OPACITY_MODE]: 'auto',\n  [COORDINATION_TYPES.SPATIAL_ZOOM]: null,\n  [COORDINATION_TYPES.SPATIAL_ROTATION]: 0,\n  [COORDINATION_TYPES.SPATIAL_TARGET_X]: null,\n  [COORDINATION_TYPES.SPATIAL_TARGET_Y]: null,\n  [COORDINATION_TYPES.SPATIAL_TARGET_Z]: null,\n  [COORDINATION_TYPES.SPATIAL_ROTATION_X]: null,\n  [COORDINATION_TYPES.SPATIAL_ROTATION_Y]: null,\n  [COORDINATION_TYPES.SPATIAL_ROTATION_Z]: null,\n  [COORDINATION_TYPES.SPATIAL_AXIS_FIXED]: false,\n  [COORDINATION_TYPES.SPATIAL_ROTATION_ORBIT]: 0,\n  [COORDINATION_TYPES.SPATIAL_ORBIT_AXIS]: 'Y',\n  [COORDINATION_TYPES.SPATIAL_RASTER_LAYERS]: null,\n  [COORDINATION_TYPES.SPATIAL_CELLS_LAYER]: null,\n  [COORDINATION_TYPES.SPATIAL_MOLECULES_LAYER]: null,\n  [COORDINATION_TYPES.SPATIAL_NEIGHBORHOODS_LAYER]: null,\n  [COORDINATION_TYPES.HEATMAP_ZOOM_X]: 0,\n  [COORDINATION_TYPES.HEATMAP_ZOOM_Y]: 0,\n  [COORDINATION_TYPES.HEATMAP_TARGET_X]: 0,\n  [COORDINATION_TYPES.HEATMAP_TARGET_Y]: 0,\n  [COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP]: 'plasma',\n  [COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP_RANGE]: [0.0, 1.0],\n  [COORDINATION_TYPES.GENE_EXPRESSION_TRANSFORM]: null,\n  [COORDINATION_TYPES.GENE_FILTER]: null,\n  [COORDINATION_TYPES.GENE_HIGHLIGHT]: null,\n  [COORDINATION_TYPES.GENE_SELECTION]: null,\n  [COORDINATION_TYPES.CELL_FILTER]: null,\n  [COORDINATION_TYPES.CELL_HIGHLIGHT]: null,\n  [COORDINATION_TYPES.CELL_SET_SELECTION]: null,\n  [COORDINATION_TYPES.CELL_SET_HIGHLIGHT]: null,\n  [COORDINATION_TYPES.CELL_SET_COLOR]: null,\n  [COORDINATION_TYPES.CELL_COLOR_ENCODING]: 'cellSetSelection',\n  [COORDINATION_TYPES.GENOMIC_ZOOM_X]: 0,\n  [COORDINATION_TYPES.GENOMIC_ZOOM_Y]: 0,\n  [COORDINATION_TYPES.GENOMIC_TARGET_X]: 1549999999.5,\n  [COORDINATION_TYPES.GENOMIC_TARGET_Y]: 1549999999.5,\n  [COORDINATION_TYPES.ADDITIONAL_CELL_SETS]: null,\n  [COORDINATION_TYPES.MOLECULE_HIGHLIGHT]: null,\n};\n\n// The following coordination types should be\n// initialized to independent scopes when\n// initialized automatically.\n// These make the resulting view config\n// (after auto-initialization) behave\n// like \"legacy\" Vitessce (pre-coordination model).\nexport const AUTO_INDEPENDENT_COORDINATION_TYPES = [\n  COORDINATION_TYPES.HEATMAP_ZOOM_X,\n  COORDINATION_TYPES.HEATMAP_ZOOM_Y,\n  COORDINATION_TYPES.HEATMAP_TARGET_X,\n  COORDINATION_TYPES.HEATMAP_TARGET_Y,\n  COORDINATION_TYPES.EMBEDDING_ZOOM,\n  COORDINATION_TYPES.EMBEDDING_TARGET_X,\n  COORDINATION_TYPES.EMBEDDING_TARGET_Y,\n  COORDINATION_TYPES.EMBEDDING_TARGET_Z,\n  COORDINATION_TYPES.EMBEDDING_CELL_SET_POLYGONS_VISIBLE,\n  COORDINATION_TYPES.EMBEDDING_CELL_SET_LABELS_VISIBLE,\n  COORDINATION_TYPES.EMBEDDING_CELL_SET_LABEL_SIZE,\n  COORDINATION_TYPES.EMBEDDING_CELL_RADIUS,\n  COORDINATION_TYPES.EMBEDDING_CELL_OPACITY,\n];\n\n/**\n   * Mapping from component type to\n   * supported coordination object types.\n   * This mapping can be used to determine\n   * which pieces of state that a component will\n   * need to get/set.\n   * Keys here are the component registry keys.\n   */\nexport const COMPONENT_COORDINATION_TYPES = {\n  scatterplot: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.EMBEDDING_TYPE,\n    COORDINATION_TYPES.EMBEDDING_ZOOM,\n    COORDINATION_TYPES.EMBEDDING_ROTATION,\n    COORDINATION_TYPES.EMBEDDING_TARGET_X,\n    COORDINATION_TYPES.EMBEDDING_TARGET_Y,\n    COORDINATION_TYPES.EMBEDDING_TARGET_Z,\n    COORDINATION_TYPES.EMBEDDING_CELL_SET_POLYGONS_VISIBLE,\n    COORDINATION_TYPES.EMBEDDING_CELL_SET_LABELS_VISIBLE,\n    COORDINATION_TYPES.EMBEDDING_CELL_SET_LABEL_SIZE,\n    COORDINATION_TYPES.EMBEDDING_CELL_RADIUS,\n    COORDINATION_TYPES.EMBEDDING_CELL_RADIUS_MODE,\n    COORDINATION_TYPES.EMBEDDING_CELL_OPACITY,\n    COORDINATION_TYPES.EMBEDDING_CELL_OPACITY_MODE,\n    COORDINATION_TYPES.CELL_FILTER,\n    COORDINATION_TYPES.CELL_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP_RANGE,\n    COORDINATION_TYPES.CELL_COLOR_ENCODING,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  spatial: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.SPATIAL_ZOOM,\n    COORDINATION_TYPES.SPATIAL_ROTATION,\n    COORDINATION_TYPES.SPATIAL_RASTER_LAYERS,\n    COORDINATION_TYPES.SPATIAL_CELLS_LAYER,\n    COORDINATION_TYPES.SPATIAL_MOLECULES_LAYER,\n    COORDINATION_TYPES.SPATIAL_NEIGHBORHOODS_LAYER,\n    COORDINATION_TYPES.SPATIAL_TARGET_X,\n    COORDINATION_TYPES.SPATIAL_TARGET_Y,\n    COORDINATION_TYPES.SPATIAL_TARGET_Z,\n    COORDINATION_TYPES.SPATIAL_ROTATION_X,\n    COORDINATION_TYPES.SPATIAL_ROTATION_Y,\n    COORDINATION_TYPES.SPATIAL_ROTATION_Z,\n    COORDINATION_TYPES.SPATIAL_ROTATION_ORBIT,\n    COORDINATION_TYPES.SPATIAL_ORBIT_AXIS,\n    COORDINATION_TYPES.SPATIAL_AXIS_FIXED,\n    COORDINATION_TYPES.CELL_FILTER,\n    COORDINATION_TYPES.CELL_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP_RANGE,\n    COORDINATION_TYPES.CELL_COLOR_ENCODING,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n    COORDINATION_TYPES.MOLECULE_HIGHLIGHT,\n  ],\n  heatmap: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.HEATMAP_ZOOM_X,\n    COORDINATION_TYPES.HEATMAP_ZOOM_Y,\n    COORDINATION_TYPES.HEATMAP_TARGET_X,\n    COORDINATION_TYPES.HEATMAP_TARGET_Y,\n    COORDINATION_TYPES.CELL_FILTER,\n    COORDINATION_TYPES.CELL_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.GENE_FILTER,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP_RANGE,\n    COORDINATION_TYPES.CELL_COLOR_ENCODING,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  cellSets: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.CELL_COLOR_ENCODING,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  cellSetSizes: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  cellSetExpression: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.GENE_EXPRESSION_TRANSFORM,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  status: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.CELL_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.MOLECULE_HIGHLIGHT,\n  ],\n  genes: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.GENE_FILTER,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.CELL_COLOR_ENCODING,\n  ],\n  expressionHistogram: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.GENE_SELECTION,\n  ],\n  layerController: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.SPATIAL_RASTER_LAYERS,\n    COORDINATION_TYPES.SPATIAL_CELLS_LAYER,\n    COORDINATION_TYPES.SPATIAL_MOLECULES_LAYER,\n    COORDINATION_TYPES.SPATIAL_NEIGHBORHOODS_LAYER,\n    COORDINATION_TYPES.SPATIAL_ZOOM,\n    COORDINATION_TYPES.SPATIAL_TARGET_X,\n    COORDINATION_TYPES.SPATIAL_TARGET_Y,\n    COORDINATION_TYPES.SPATIAL_TARGET_Z,\n    COORDINATION_TYPES.SPATIAL_ROTATION_X,\n    COORDINATION_TYPES.SPATIAL_ROTATION_Y,\n    COORDINATION_TYPES.SPATIAL_ROTATION_Z,\n    COORDINATION_TYPES.SPATIAL_ROTATION_ORBIT,\n    COORDINATION_TYPES.SPATIAL_ORBIT_AXIS,\n  ],\n  higlass: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.GENOMIC_ZOOM_X,\n    COORDINATION_TYPES.GENOMIC_ZOOM_Y,\n    COORDINATION_TYPES.GENOMIC_TARGET_X,\n    COORDINATION_TYPES.GENOMIC_TARGET_Y,\n    COORDINATION_TYPES.GENE_FILTER,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n  ],\n  genomicProfiles: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.GENOMIC_ZOOM_X,\n    COORDINATION_TYPES.GENOMIC_ZOOM_Y,\n    COORDINATION_TYPES.GENOMIC_TARGET_X,\n    COORDINATION_TYPES.GENOMIC_TARGET_Y,\n    COORDINATION_TYPES.GENE_FILTER,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  description: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.SPATIAL_RASTER_LAYERS,\n  ],\n};\n", "/* eslint-disable no-underscore-dangle */\nimport uuidv4 from 'uuid/v4';\nimport isNil from 'lodash/isNil';\nimport isEqual from 'lodash/isEqual';\nimport range from 'lodash/range';\nimport { featureCollection as turfFeatureCollection, point as turfPoint } from '@turf/helpers';\nimport centroid from '@turf/centroid';\nimport concaveman from 'concaveman';\nimport {\n  HIERARCHICAL_SCHEMAS,\n} from './constants';\nimport { getDefaultColor, PALETTE } from '../utils';\nimport { pathToKey } from './utils';\n\n/**\n * Alias for the uuidv4 function to make code more readable.\n * @returns {string} UUID.\n */\nfunction generateKey() {\n  return uuidv4();\n}\n\n/**\n * Get the set associated with a particular node.\n * Recursive.\n * @param {object} currNode A node object.\n * @returns {array} The array representing the set associated with the node.\n */\nexport function nodeToSet(currNode) {\n  if (!currNode) {\n    return [];\n  }\n  if (!currNode.children) {\n    return (currNode.set || []);\n  }\n  return currNode.children.flatMap(c => nodeToSet(c));\n}\n\n/**\n * Get the height of a node (the number of levels to reach a leaf).\n * @param {object} currNode A node object.\n * @param {number} level The level that the height will be computed relative to. By default, 0.\n * @returns {number} The height. If the node has a .children property,\n * then the minimum value returned is 1.\n */\nexport function nodeToHeight(currNode, level = 0) {\n  if (!currNode.children) {\n    return level;\n  }\n  const newLevel = level + 1;\n  const childrenHeights = currNode.children.map(c => nodeToHeight(c, newLevel));\n  return Math.max(...childrenHeights, newLevel);\n}\n\n/**\n * Get the size associated with a particular node.\n * Recursive.\n * @param {object} currNode A node object.\n * @returns {number} The length of all the node's children\n */\nexport function getNodeLength(currNode) {\n  if (!currNode) {\n    return 0;\n  }\n  if (!currNode.children) {\n    return (currNode.set?.length || 0);\n  }\n  return currNode.children.reduce((acc, curr) => acc + getNodeLength(curr), 0);\n}\n\n/**\n * Find a node with a matching name path, relative to a particular node.\n * @param {object} node A node object.\n * @param {string[]} path The name path for the node of interest.\n * @param {number} currLevelIndex The index of the current hierarchy level.\n * @returns {object|null} A matching node object, or null if none is found.\n */\nfunction nodeFindNodeByNamePath(node, path, currLevelIndex) {\n  const currNodeName = path[currLevelIndex];\n  if (node.name === currNodeName) {\n    if (currLevelIndex === path.length - 1) {\n      return node;\n    }\n    if (node.children) {\n      const foundNodes = node.children\n        .map(child => nodeFindNodeByNamePath(child, path, currLevelIndex + 1))\n        .filter(Boolean);\n      if (foundNodes.length === 1) {\n        return foundNodes[0];\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Find a node with a matching name path, relative to the whole tree.\n * @param {object} currTree A tree object.\n * @param {string[]} targetNamePath The name path for the node of interest.\n * @returns {object|null} A matching node object, or null if none is found.\n */\nexport function treeFindNodeByNamePath(currTree, targetNamePath) {\n  const foundNodes = currTree.tree\n    .map(levelZeroNode => nodeFindNodeByNamePath(levelZeroNode, targetNamePath, 0))\n    .filter(Boolean);\n  if (foundNodes.length === 1) {\n    return foundNodes[0];\n  }\n  return null;\n}\n\n/**\n * Transform a node object using a transform function.\n * @param {object} node A node object.\n * @param {function} predicate Returns true if a node matches a condition of interest.\n * @param {function} transform Takes the node matching the predicate as input, returns\n * a transformed version of the node.\n * @param {array} transformedPaths This array parameter is mutated. The path of\n * each transformed node is appended to this array.\n * @param {string[]} The current path of the node being updated, used internally\n * during recursion.\n * @returns {object} The updated node.\n */\nexport function nodeTransform(node, predicate, transform, transformedPaths, currPath) {\n  let newPath;\n  if (!currPath) {\n    newPath = [node.name];\n  } else {\n    newPath = [...currPath];\n  }\n  if (predicate(node, newPath)) {\n    transformedPaths.push(newPath);\n    return transform(node, newPath);\n  }\n  if (node.children) {\n    return {\n      ...node,\n      children: node.children.map(\n        child => nodeTransform(\n          child, predicate, transform, transformedPaths, newPath.concat([child.name]),\n        ),\n      ),\n    };\n  }\n  return node;\n}\n\n/**\n * Transform many node objects using a transform function.\n * @param {object} node A node object.\n * @param {function} predicate Returns true if a node matches a condition of interest.\n * @param {function} transform Takes the node matching the predicate as input, returns\n * a transformed version of the node.\n * @param {array} transformedPaths This array parameter is mutated. The path of\n * each transformed node is appended to this array.\n * @param {string[]} The current path of the node being updated, used internally\n * during recursion.\n * @returns {object} The updated node.\n */\nexport function nodeTransformAll(node, predicate, transform, transformedPaths, currPath) {\n  let newPath;\n  if (!currPath) {\n    newPath = [node.name];\n  } else {\n    newPath = [...currPath];\n  }\n  let newNode = node;\n  if (predicate(node, newPath)) {\n    transformedPaths.push(newPath);\n    newNode = transform(node, newPath);\n  }\n  if (node.children) {\n    return {\n      ...newNode,\n      children: newNode.children.map(\n        child => nodeTransformAll(\n          child, predicate, transform, transformedPaths, newPath.concat([child.name]),\n        ),\n      ),\n    };\n  }\n  return newNode;\n}\n\n/**\n * Append a child to a parent node.\n * @param {object} currNode A node object.\n * @param {object} newChild The child node object.\n * @returns {object} The updated node.\n */\nexport function nodeAppendChild(currNode, newChild) {\n  return {\n    ...currNode,\n    children: [...currNode.children, newChild],\n  };\n}\n\n/**\n * Prepend a child to a parent node.\n * @param {object} currNode A node object.\n * @param {object} newChild The child node object.\n * @returns {object} The updated node.\n */\nexport function nodePrependChild(currNode, newChild) {\n  return {\n    ...currNode,\n    children: [newChild, ...currNode.children],\n  };\n}\n\n/**\n * Insert a child to a parent node.\n * @param {object} currNode A node object.\n * @param {*} newChild The child node object.\n * @param {*} insertIndex The index at which to insert the child.\n * @returns {object} The updated node.\n */\nexport function nodeInsertChild(currNode, newChild, insertIndex) {\n  const newChildren = Array.from(currNode.children);\n  newChildren.splice(insertIndex, 0, newChild);\n  return {\n    ...currNode,\n    children: newChildren,\n  };\n}\n\n/**\n * Get an array representing the union of the sets of checked nodes.\n * @param {object} currTree A tree object.\n * @returns {array} An array representing the union of the sets of checked nodes.\n */\nexport function treeToUnion(currTree, checkedPaths) {\n  const nodes = checkedPaths.map(path => treeFindNodeByNamePath(currTree, path));\n  const nodeSets = nodes.map(node => nodeToSet(node).map(([cellId]) => cellId));\n  return nodeSets\n    .reduce((a, h) => a.concat(h.filter(hEl => !a.includes(hEl))), nodeSets[0] || []);\n}\n\n/**\n * Get an array representing the intersection of the sets of checked nodes.\n * @param {object} currTree A tree object.\n * @returns {array} An array representing the intersection of the sets of checked nodes.\n */\nexport function treeToIntersection(currTree, checkedPaths) {\n  const nodes = checkedPaths.map(path => treeFindNodeByNamePath(currTree, path));\n  const nodeSets = nodes.map(node => nodeToSet(node).map(([cellId]) => cellId));\n  return nodeSets\n    .reduce((a, h) => h.filter(hEl => a.includes(hEl)), nodeSets[0] || []);\n}\n\n/**\n * Get an array representing the complement of the union of the sets of checked nodes.\n * @param {object} currTree\n * @returns {array} An array representing the complement of the\n * union of the sets of checked nodes.\n */\nexport function treeToComplement(currTree, checkedPaths, items) {\n  const primaryUnion = treeToUnion(currTree, checkedPaths);\n  return items.filter(el => !primaryUnion.includes(el));\n}\n\n/**\n * Get an flattened array of descendants at a particular relative\n * level of interest.\n * @param {object} node A node object.\n * @param {number} level The relative level of interest.\n * 0 for this node's children, 1 for grandchildren, etc.\n * @param {boolean} stopEarly Should a node be returned early if no children exist?\n * @returns {object[]} An array of descendants at the specified level,\n * where the level is relative to the node.\n */\nexport function nodeToLevelDescendantNamePaths(node, level, prevPath, stopEarly = false) {\n  if (!node.children) {\n    if (!stopEarly) {\n      return null;\n    }\n    return [[...prevPath, node.name]];\n  }\n  if (level === 0) {\n    return [[...prevPath, node.name]];\n  }\n  return node.children\n    .flatMap(c => nodeToLevelDescendantNamePaths(c, level - 1, [...prevPath, node.name], stopEarly))\n    .filter(Boolean);\n}\n\n/**\n * Export the tree by clearing tree state and all node states.\n * @param {object} currTree A tree object.\n * @returns {object} Tree object with tree and node state removed.\n */\nexport function treeExport(currTree, datatype) {\n  return {\n    version: HIERARCHICAL_SCHEMAS[datatype].latestVersion,\n    datatype,\n    tree: currTree.tree,\n  };\n}\n\n/**\n * Export the tree by clearing tree state and all node states,\n * and filter so that only the level zero node of interest is included.\n * @param {object} currTree A tree object.\n * @param {string} nodePath The path of the node of interest.\n * @param {string} dataType Datatype (i.e cell sets)\n * @param {Array} cellSetColors Array of objects of cell set colors and paths\n * @param {string} theme \"light\" or \"dark\" for the vitessce theme\n * @returns {object} { treeToExport, nodeName }\n * Tree with one level zero node, and with state removed.\n */\nexport function treeExportLevelZeroNode(currTree, nodePath, datatype, cellSetColors, theme) {\n  const node = treeFindNodeByNamePath(currTree, nodePath);\n  const nodeWithColors = nodeTransformAll(node, () => true, (n, nPath) => {\n    const nodeColor = cellSetColors?.find(c => isEqual(c.path, nPath))?.color\n      ?? getDefaultColor(theme);\n    return {\n      ...n,\n      color: nodeColor.slice(0, 3),\n    };\n  }, []);\n  const treeWithOneLevelZeroNode = {\n    ...currTree,\n    tree: [nodeWithColors],\n  };\n  return {\n    treeToExport: treeExport(treeWithOneLevelZeroNode, datatype),\n    nodeName: node.name,\n  };\n}\n\n/**\n * Prepare the set of a node of interest for export.\n * @param {object} currTree A tree object.\n * @param {string} nodeKey The key of the node of interest.\n * @returns {object} { setToExport, nodeName } The set as an array.\n */\nexport function treeExportSet(currTree, nodePath) {\n  const node = treeFindNodeByNamePath(currTree, nodePath);\n  return { setToExport: nodeToSet(node), nodeName: node.name };\n}\n\n/**\n * Get an empty tree, with a default tree state.\n * @param {string} datatype The type of sets that this tree contains.\n * @returns {object} Empty tree.\n */\nexport function treeInitialize(datatype) {\n  return {\n    version: HIERARCHICAL_SCHEMAS[datatype].latestVersion,\n    datatype,\n    tree: [],\n  };\n}\n\n/**\n * For convenience, get an object with information required\n * to render a node as a component.\n * @param {object} node A node to be rendered.\n * @returns {object} An object containing properties required\n * by the TreeNode render functions.\n */\nexport function nodeToRenderProps(node, path, cellSetColor) {\n  const level = path.length - 1;\n  return {\n    title: node.name,\n    nodeKey: pathToKey(path),\n    path,\n    size: getNodeLength(node),\n    color: cellSetColor?.find(d => isEqual(d.path, path))?.color,\n    level,\n    isLeaf: (!node.children || node.children.length === 0) && Boolean(node.set),\n    height: nodeToHeight(node),\n  };\n}\n\n/**\n * Using a color and a probability, mix the color with an \"uncertainty\" color,\n * for example, gray.\n * Reference: https://github.com/bgrins/TinyColor/blob/80f7225029c428c0de0757f7d98ac15f497bee57/tinycolor.js#L701\n * @param {number[]} originalColor The color assignment for the class.\n * @param {number} p The mixing amount, or level certainty in the originalColor classification,\n * between 0 and 1.\n * @param {number[]} mixingColor The color with which to mix. By default, [128, 128, 128] gray.\n * @returns {number[]} Returns the color after mixing.\n */\nfunction colorMixWithUncertainty(originalColor, p, mixingColor = [128, 128, 128]) {\n  return [\n    ((originalColor[0] - mixingColor[0]) * p) + mixingColor[0],\n    ((originalColor[1] - mixingColor[1]) * p) + mixingColor[1],\n    ((originalColor[2] - mixingColor[2]) * p) + mixingColor[2],\n  ];\n}\n\n/**\n * Given a tree with state, get the cellIds and cellColors,\n * based on the nodes currently marked as \"visible\".\n * @param {object} currTree A tree object.\n *  @param {array} selectedNamePaths Array of arrays of strings,\n * representing set \"paths\".\n * @param {object[]} cellSetColor Array of objects with the\n * properties `path` and `color`.\n * @param {string} theme \"light\" or \"dark\" for the vitessce theme\n * @returns {array} Tuple of [cellIds, cellColors]\n * where cellIds is an array of strings,\n * and cellColors is an object mapping cellIds to color [r,g,b] arrays.\n */\nexport function treeToCellColorsBySetNames(currTree, selectedNamePaths, cellSetColor, theme) {\n  let cellColorsArray = [];\n  selectedNamePaths.forEach((setNamePath) => {\n    const node = treeFindNodeByNamePath(currTree, setNamePath);\n    if (node) {\n      const nodeSet = nodeToSet(node);\n      const nodeColor = (\n        cellSetColor?.find(d => isEqual(d.path, setNamePath))?.color\n        || getDefaultColor(theme)\n      );\n      cellColorsArray = [\n        ...cellColorsArray,\n        ...nodeSet.map(([cellId, prob]) => [\n          cellId,\n          (isNil(prob) ? nodeColor : colorMixWithUncertainty(nodeColor, prob)),\n        ]),\n      ];\n    }\n  });\n  return new Map(cellColorsArray);\n}\n\n/**\n * Given a tree with state, get an array of\n * objects with cellIds and cellColors,\n * based on the nodes currently marked as \"visible\".\n * @param {object} currTree A tree object.\n * @param {array} selectedNamePaths Array of arrays of strings,\n * representing set \"paths\".\n * @param {object[]} setColor Array of objects with the\n * properties `path` and `color`\n * @param {string} theme \"light\" or \"dark\" for the vitessce theme.\n * @returns {object[]} Array of objects with properties\n * `obsId`, `name`, and `color`.\n */\nexport function treeToObjectsBySetNames(currTree, selectedNamePaths, setColor, theme) {\n  let cellsArray = [];\n  for (let i = 0; i < selectedNamePaths.length; i += 1) {\n    const setNamePath = selectedNamePaths[i];\n    const node = treeFindNodeByNamePath(currTree, setNamePath);\n    if (node) {\n      const nodeSet = nodeToSet(node);\n      const nodeColor = (\n        setColor?.find(d => isEqual(d.path, setNamePath))?.color\n        || getDefaultColor(theme)\n      );\n      cellsArray = cellsArray.concat(nodeSet.map(([cellId]) => ({\n        obsId: cellId,\n        name: node.name,\n        color: nodeColor,\n      })));\n    }\n  }\n  return cellsArray;\n}\n\nexport function treeToCellPolygonsBySetNames(\n  currTree, cells, mapping, selectedNamePaths, cellSetColor, theme,\n) {\n  const cellSetPolygons = [];\n  selectedNamePaths.forEach((setNamePath) => {\n    const node = treeFindNodeByNamePath(currTree, setNamePath);\n    if (node) {\n      const nodeSet = nodeToSet(node);\n      const nodeColor = (\n        cellSetColor?.find(d => isEqual(d.path, setNamePath))?.color\n        || getDefaultColor(theme)\n      );\n      const cellPositions = nodeSet\n        .map(([cellId]) => ([\n          cells[cellId]?.mappings[mapping][0],\n          -cells[cellId]?.mappings[mapping][1],\n        ]))\n        .filter(cell => cell.every(i => typeof i === 'number'));\n\n      if (cellPositions.length > 2) {\n        const points = turfFeatureCollection(\n          cellPositions.map(turfPoint),\n        );\n        const concavity = Infinity;\n        const hullCoords = concaveman(cellPositions, concavity);\n        if (hullCoords) {\n          const centroidCoords = centroid(points).geometry.coordinates;\n          cellSetPolygons.push({\n            path: setNamePath,\n            name: setNamePath[setNamePath.length - 1],\n            hull: hullCoords,\n            color: nodeColor,\n            centroid: centroidCoords,\n          });\n        }\n      }\n    }\n  });\n  return cellSetPolygons;\n}\n\n/**\n * Given a tree with state, get the sizes of the\n * sets currently marked as \"visible\".\n * @param {object} currTree A tree object.\n * @param {array} selectedNamePaths Array of arrays of strings,\n * representing set \"paths\".\n * @param {object[]} setColor Array of objects with the\n * properties `path` and `color`.\n * @param {string} theme \"light\" or \"dark\" for the vitessce theme\n * @returns {object[]} Array of objects\n * with the properties `name`, `size`, `key`,\n * and `color`.\n */\nexport function treeToSetSizesBySetNames(currTree, selectedNamePaths, setColor, theme) {\n  const sizes = [];\n  selectedNamePaths.forEach((setNamePath) => {\n    const node = treeFindNodeByNamePath(currTree, setNamePath);\n    if (node) {\n      const nodeSet = nodeToSet(node);\n      const nodeColor = setColor.find(d => isEqual(d.path, setNamePath))?.color\n        || getDefaultColor(theme);\n      sizes.push({\n        key: generateKey(),\n        name: node.name,\n        size: nodeSet.length,\n        color: nodeColor,\n      });\n    }\n  });\n  return sizes;\n}\n\n/**\n * Find and remove a node from the descendants of the current node.\n * @param {object} node A node to search on.\n * @param {array} prevPath Path of the current node to be searched.\n * @param {array} filterPath The path sought.\n * @returns {object} A new node without a node at filterPath.\n */\nexport function filterNode(node, prevPath, filterPath) {\n  if (isEqual([...prevPath, node.name], filterPath)) {\n    return null;\n  }\n  if (!node.children) {\n    return node;\n  }\n  return {\n    ...node,\n    children: node.children.map(\n      c => filterNode(c, [...prevPath, node.name], filterPath),\n    ).filter(Boolean),\n  };\n}\n\nexport function treeToExpectedCheckedLevel(currTree, checkedPaths) {\n  let result = null;\n  if (currTree) {\n    currTree.tree.forEach((lzn) => {\n      const levelZeroPath = [lzn.name];\n      const height = nodeToHeight(lzn);\n      range(height).forEach((i) => {\n        const levelIndex = i + 1;\n        const levelNodePaths = nodeToLevelDescendantNamePaths(lzn, levelIndex, [], true);\n        if (isEqual(levelNodePaths, checkedPaths)) {\n          result = { levelZeroPath, levelIndex };\n        }\n      });\n    });\n  }\n  return result;\n}\n\nexport function treesConflict(cellSets, testCellSets) {\n  const paths = [];\n  const testPaths = [];\n  let hasConflict = false;\n\n  function getPaths(node, prevPath) {\n    paths.push([...prevPath, node.name]);\n    if (node.children) {\n      node.children.forEach(c => getPaths(c, [...prevPath, node.name]));\n    }\n  }\n  cellSets.tree.forEach(lzn => getPaths(lzn, []));\n\n  function getTestPaths(node, prevPath) {\n    testPaths.push([...prevPath, node.name]);\n    if (node.children) {\n      node.children.forEach(c => getPaths(c, [...prevPath, node.name]));\n    }\n  }\n  testCellSets.tree.forEach(lzn => getTestPaths(lzn, []));\n\n  testPaths.forEach((testPath) => {\n    if (paths.find(p => isEqual(p, testPath))) {\n      hasConflict = true;\n    }\n  });\n  return hasConflict;\n}\n\nexport function initializeCellSetColor(cellSets, cellSetColor) {\n  const nextCellSetColor = [...(cellSetColor || [])];\n  const nodeCountPerTreePerLevel = cellSets.tree.map(tree => Array\n    .from({\n      length: nodeToHeight(tree) + 1, // Need to add one because its an array.\n    }).fill(0));\n\n  function processNode(node, prevPath, hierarchyLevel, treeIndex) {\n    const index = nodeCountPerTreePerLevel[treeIndex][hierarchyLevel];\n    const nodePath = [...prevPath, node.name];\n\n    const nodeColor = nextCellSetColor.find(d => isEqual(d.path, nodePath));\n    if (!nodeColor) {\n      nextCellSetColor.push({\n        path: nodePath,\n        color: PALETTE[index % PALETTE.length],\n      });\n    }\n    nodeCountPerTreePerLevel[treeIndex][hierarchyLevel] += 1;\n    if (node.children) {\n      node.children.forEach(c => processNode(c, nodePath, hierarchyLevel + 1, treeIndex));\n    }\n  }\n\n  cellSets.tree.forEach((lzn, treeIndex) => processNode(lzn, [], 0, treeIndex));\n  return nextCellSetColor;\n}\n\nexport function getCellSetPolygons(params) {\n  const {\n    cells,\n    mapping,\n    cellSets,\n    cellSetSelection,\n    cellSetColor,\n    theme,\n  } = params;\n  if (cellSetSelection && cellSetSelection.length > 0 && cellSets && cells) {\n    return treeToCellPolygonsBySetNames(\n      cellSets, cells, mapping, cellSetSelection, cellSetColor, theme,\n    );\n  }\n  return [];\n}\n", "import tinycolor from 'tinycolor2';\nimport isEqual from 'lodash/isEqual';\n\n/**\n * Execute a callback function based on a keypress event.\n * @param {object} event The event from onKeyPress\n * @param {string} key The key identifier to match.\n * @param {Function} callback The function to execute.\n */\nexport function callbackOnKeyPress(event, key, callback) {\n  if (event.key === key) {\n    event.preventDefault();\n    callback();\n  }\n}\n\n/**\n * Convert an array of [r, g, b] numbers to a hex color.\n * @param {number[]} rgbArray The color [r, g, b] array.\n * @returns {string} The hex color as a string.\n */\nexport function colorArrayToString(rgbArray) {\n  return tinycolor({ r: rgbArray[0], g: rgbArray[1], b: rgbArray[2] }).toHexString();\n}\n\n/**\n * Convert a string color representation to an array of [r,g,b].\n * @param {string} colorString The color as a string.\n * @returns {number[]} The color as an array.\n */\nexport function colorStringToArray(colorString) {\n  const colorObj = tinycolor(colorString).toRgb();\n  return [colorObj.r, colorObj.g, colorObj.b];\n}\n\n/**\n * Get a string of help text for coloring a particular hierarchy level.\n * @param {integer} i The level. 1 for cluster, 2 for subcluster, etc.\n * @returns {string} The tooltip text for coloring the level.\n */\nexport function getLevelTooltipText(i) {\n  if (i === 0) return 'Color by hierarchy';\n  if (i <= 2) {\n    const subs = j => ('sub'.repeat(j));\n    return `Color by ${subs(i - 1)}cluster`;\n  }\n  return `Color by cluster level ${i}`;\n}\n\nexport function isEqualOrPrefix(targetPath, testPath) {\n  if (targetPath.length <= testPath.length) {\n    return isEqual(targetPath, testPath.slice(0, targetPath.length));\n  }\n  return false;\n}\n\nexport function tryRenamePath(targetPath, testPath, nextTargetPath) {\n  if (isEqualOrPrefix(targetPath, testPath)) {\n    return [...nextTargetPath, ...testPath.slice(nextTargetPath.length)];\n  }\n  return testPath;\n}\n\nexport const PATH_SEP = '___';\n\nexport function pathToKey(path) {\n  return path.join(PATH_SEP);\n}\n", "/* eslint-disable no-nested-ternary */\n/* eslint-disable no-param-reassign */\nimport { treeToCellColorsBySetNames } from './sets/cell-set-utils';\n\n// The functions defined here have been adapted from d3-interpolate,\n// d3-color, and d3-scale-chromatic.\n// Color string \"rgb(r,g,b)\" representations are replaced by color array [r, g, b]\n// representations, to allow them to work nicely with deck.gl,\n// without the need to converting back and forth between string and array formats.\n\n// Reference: https://github.com/d3/d3-scale-chromatic/blob/431d21da776f97c632f53a855bd822edfbbcd56e/src/diverging/RdBu.js\n// eslint-disable-next-line max-len\nconst schemeRdBu = [[103, 0, 31], [178, 24, 43], [214, 96, 77], [244, 165, 130], [253, 219, 199], [247, 247, 247], [209, 229, 240], [146, 197, 222], [67, 147, 195], [33, 102, 172], [5, 48, 97]];\n// eslint-disable-next-line max-len\nconst schemePlasma = [[13, 8, 135], [16, 7, 136], [19, 7, 137], [22, 7, 138], [25, 6, 140], [27, 6, 141], [29, 6, 142], [32, 6, 143], [34, 6, 144], [36, 6, 145], [38, 5, 145], [40, 5, 146], [42, 5, 147], [44, 5, 148], [46, 5, 149], [47, 5, 150], [49, 5, 151], [51, 5, 151], [53, 4, 152], [55, 4, 153], [56, 4, 154], [58, 4, 154], [60, 4, 155], [62, 4, 156], [63, 4, 156], [65, 4, 157], [67, 3, 158], [68, 3, 158], [70, 3, 159], [72, 3, 159], [73, 3, 160], [75, 3, 161], [76, 2, 161], [78, 2, 162], [80, 2, 162], [81, 2, 163], [83, 2, 163], [85, 2, 164], [86, 1, 164], [88, 1, 164], [89, 1, 165], [91, 1, 165], [92, 1, 166], [94, 1, 166], [96, 1, 166], [97, 0, 167], [99, 0, 167], [100, 0, 167], [102, 0, 167], [103, 0, 168], [105, 0, 168], [106, 0, 168], [108, 0, 168], [110, 0, 168], [111, 0, 168], [113, 0, 168], [114, 1, 168], [116, 1, 168], [117, 1, 168], [119, 1, 168], [120, 1, 168], [122, 2, 168], [123, 2, 168], [125, 3, 168], [126, 3, 168], [128, 4, 168], [129, 4, 167], [131, 5, 167], [132, 5, 167], [134, 6, 166], [135, 7, 166], [136, 8, 166], [138, 9, 165], [139, 10, 165], [141, 11, 165], [142, 12, 164], [143, 13, 164], [145, 14, 163], [146, 15, 163], [148, 16, 162], [149, 17, 161], [150, 19, 161], [152, 20, 160], [153, 21, 159], [154, 22, 159], [156, 23, 158], [157, 24, 157], [158, 25, 157], [160, 26, 156], [161, 27, 155], [162, 29, 154], [163, 30, 154], [165, 31, 153], [166, 32, 152], [167, 33, 151], [168, 34, 150], [170, 35, 149], [171, 36, 148], [172, 38, 148], [173, 39, 147], [174, 40, 146], [176, 41, 145], [177, 42, 144], [178, 43, 143], [179, 44, 142], [180, 46, 141], [181, 47, 140], [182, 48, 139], [183, 49, 138], [184, 50, 137], [186, 51, 136], [187, 52, 136], [188, 53, 135], [189, 55, 134], [190, 56, 133], [191, 57, 132], [192, 58, 131], [193, 59, 130], [194, 60, 129], [195, 61, 128], [196, 62, 127], [197, 64, 126], [198, 65, 125], [199, 66, 124], [200, 67, 123], [201, 68, 122], [202, 69, 122], [203, 70, 121], [204, 71, 120], [204, 73, 119], [205, 74, 118], [206, 75, 117], [207, 76, 116], [208, 77, 115], [209, 78, 114], [210, 79, 113], [211, 81, 113], [212, 82, 112], [213, 83, 111], [213, 84, 110], [214, 85, 109], [215, 86, 108], [216, 87, 107], [217, 88, 106], [218, 90, 106], [218, 91, 105], [219, 92, 104], [220, 93, 103], [221, 94, 102], [222, 95, 101], [222, 97, 100], [223, 98, 99], [224, 99, 99], [225, 100, 98], [226, 101, 97], [226, 102, 96], [227, 104, 95], [228, 105, 94], [229, 106, 93], [229, 107, 93], [230, 108, 92], [231, 110, 91], [231, 111, 90], [232, 112, 89], [233, 113, 88], [233, 114, 87], [234, 116, 87], [235, 117, 86], [235, 118, 85], [236, 119, 84], [237, 121, 83], [237, 122, 82], [238, 123, 81], [239, 124, 81], [239, 126, 80], [240, 127, 79], [240, 128, 78], [241, 129, 77], [241, 131, 76], [242, 132, 75], [243, 133, 75], [243, 135, 74], [244, 136, 73], [244, 137, 72], [245, 139, 71], [245, 140, 70], [246, 141, 69], [246, 143, 68], [247, 144, 68], [247, 145, 67], [247, 147, 66], [248, 148, 65], [248, 149, 64], [249, 151, 63], [249, 152, 62], [249, 154, 62], [250, 155, 61], [250, 156, 60], [250, 158, 59], [251, 159, 58], [251, 161, 57], [251, 162, 56], [252, 163, 56], [252, 165, 55], [252, 166, 54], [252, 168, 53], [252, 169, 52], [253, 171, 51], [253, 172, 51], [253, 174, 50], [253, 175, 49], [253, 177, 48], [253, 178, 47], [253, 180, 47], [253, 181, 46], [254, 183, 45], [254, 184, 44], [254, 186, 44], [254, 187, 43], [254, 189, 42], [254, 190, 42], [254, 192, 41], [253, 194, 41], [253, 195, 40], [253, 197, 39], [253, 198, 39], [253, 200, 39], [253, 202, 38], [253, 203, 38], [252, 205, 37], [252, 206, 37], [252, 208, 37], [252, 210, 37], [251, 211, 36], [251, 213, 36], [251, 215, 36], [250, 216, 36], [250, 218, 36], [249, 220, 36], [249, 221, 37], [248, 223, 37], [248, 225, 37], [247, 226, 37], [247, 228, 37], [246, 230, 38], [246, 232, 38], [245, 233, 38], [245, 235, 39], [244, 237, 39], [243, 238, 39], [243, 240, 39], [242, 242, 39], [241, 244, 38], [241, 245, 37], [240, 247, 36], [240, 249, 33]];\n\n// Reference: https://github.com/d3/d3-interpolate/blob/96d54051d1c2fec55f240edd0ec5401715b10390/src/rgb.js\nfunction rgbSpline(spline) {\n  return (colors) => {\n    const n = colors.length;\n    let r = new Array(n);\n    let g = new Array(n);\n    let b = new Array(n);\n    let i; let\n      color;\n    // eslint-disable-next-line no-plusplus\n    for (i = 0; i < n; ++i) {\n      color = [colors[i][0], colors[i][1], colors[i][2]];\n      r[i] = color[0] || 0;\n      g[i] = color[1] || 0;\n      b[i] = color[2] || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    return t => [r(t), g(t), b(t)];\n  };\n}\n\n// Reference: https://github.com/d3/d3-interpolate/blob/594a32af1fe1118812b439012c2cb742e907c0c0/src/basis.js\nfunction basis(values) {\n  function innerBasis(t1, v0, v1, v2, v3) {\n    const t2 = t1 * t1; const\n      t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n          + (4 - 6 * t2 + 3 * t3) * v1\n          + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n          + t3 * v3) / 6;\n  }\n\n  const n = values.length - 1;\n  return (t) => {\n    const i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n);\n    const v1 = values[i];\n    const v2 = values[i + 1];\n    const v0 = i > 0 ? values[i - 1] : 2 * v1 - v2;\n    const v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return innerBasis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\n\n// Reference: https://github.com/d3/d3-scale-chromatic/blob/ade54c13e8dfdb9807801a794eaec1a37f926b8a/src/ramp.js\nconst interpolateRgbBasis = rgbSpline(basis);\n\nfunction interpolateSequentialMulti(range) {\n  const n = range.length;\n  return t => range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n}\n\nexport const interpolateRdBu = interpolateRgbBasis(schemeRdBu);\nexport const interpolatePlasma = interpolateSequentialMulti(schemePlasma);\n\n\n/**\n * Get a mapping of cell IDs to cell colors based on\n * gene / cell set selection coordination state.\n * @param {object} params\n * @param {object} params.expressionMatrix { rows, cols, matrix }\n * @param {array} params.geneSelection Array of selected gene IDs.\n * @param {object} params.cellSets The cell sets tree.\n * @param {object} params.cellSetSelection Selected cell sets.\n * @param {string} params.cellColorEncoding Which to use for\n * coloring: gene expression or cell sets?\n * @returns {Map} Mapping from cell IDs to [r, g, b] color arrays.\n */\nexport function getCellColors(params) {\n  const {\n    cellColorEncoding,\n    expressionData,\n    cellSets, cellSetSelection,\n    cellSetColor,\n    expressionDataAttrs,\n    theme,\n  } = params;\n  if (cellColorEncoding === 'geneSelection' && expressionData && expressionDataAttrs) {\n    // TODO: allow other color maps.\n    const geneExpColormap = interpolatePlasma;\n    const colors = new Map();\n    for (let i = 0; i < expressionData.length; i += 1) {\n      const value = expressionData[i];\n      const cellColor = geneExpColormap(value / 255);\n      colors.set(expressionDataAttrs.rows[i], cellColor);\n    }\n    return colors;\n  } if (cellColorEncoding === 'cellSetSelection' && cellSetSelection && cellSets) {\n    // Cell sets can potentially lack set colors since the color property\n    // is not a required part of the schema.\n    // The `initializeSets` function fills in any empty colors\n    // with defaults and returns the processed tree object.\n    return treeToCellColorsBySetNames(cellSets, cellSetSelection, cellSetColor, theme);\n  }\n  return new Map();\n}\n", "import React, {\n  useRef, useState, useCallback, useMemo, useEffect, useReducer, forwardRef,\n} from 'react';\nimport uuidv4 from 'uuid/v4';\nimport DeckGL from 'deck.gl';\nimport { OrthographicView } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport range from 'lodash/range';\nimport clamp from 'lodash/clamp';\nimport isEqual from 'lodash/isEqual';\nimport { max } from 'd3-array';\nimport HeatmapCompositeTextLayer from '../../layers/HeatmapCompositeTextLayer';\nimport PixelatedBitmapLayer from '../../layers/PixelatedBitmapLayer';\nimport HeatmapBitmapLayer from '../../layers/HeatmapBitmapLayer';\nimport {\n  DEFAULT_GL_OPTIONS,\n  createDefaultUpdateCellsHover,\n  createDefaultUpdateGenesHover,\n  createDefaultUpdateViewInfo,\n  copyUint8Array,\n} from '../utils';\nimport {\n  layerFilter,\n  getAxisSizes,\n  mouseToHeatmapPosition,\n  heatmapToMousePosition,\n} from './utils';\nimport {\n  TILE_SIZE, MAX_ROW_AGG, MIN_ROW_AGG,\n  COLOR_BAR_SIZE,\n  AXIS_MARGIN,\n} from '../../layers/heatmap-constants';\nimport HeatmapWorkerPool from './HeatmapWorkerPool';\n/**\n * A heatmap component for cell x gene matrices.\n * @param {object} props\n * @param {string} props.uuid The uuid of this component,\n * used by tooltips to determine whether to render a tooltip or\n * a crosshair.\n * @param {string} props.theme The current theme name.\n * @param {object} props.initialViewState The initial viewState for\n * DeckGL.\n * @param {number} props.width The width of the canvas.\n * @param {number} props.height The height of the canvas.\n * @param {object} props.expressionMatrix An object { rows, cols, matrix },\n * where matrix is a flat Uint8Array, rows is a list of cell ID strings,\n * and cols is a list of gene ID strings.\n * @param {Map} props.cellColors Map of cell ID to color. Optional.\n * If defined, the key ordering is used to order the cell axis of the heatmap.\n * @param {function} props.clearPleaseWait The clear please wait callback,\n * called when the expression matrix has loaded (is not null).\n * @param {function} props.setCellHighlight Callback function called on\n * hover with the cell ID. Optional.\n * @param {function} props.setGeneHighlight Callback function called on\n * hover with the gene ID. Optional.\n * @param {function} props.updateViewInfo Callback function that gets called with an\n * object { uuid, project() } where project is a function that maps (cellId, geneId)\n * to canvas (x,y) coordinates. Used to show tooltips. Optional.\n * @param {boolean} props.transpose By default, false.\n * @param {string} props.variablesTitle By default, 'Genes'.\n * @param {string} props.observationsTitle By default, 'Cells'.\n * @param {string} props.colormap The name of the colormap function to use.\n * @param {array} props.colormapRange A tuple [lower, upper] to adjust the color scale.\n * @param {function} props.setColormapRange The setter function for colormapRange.\n */\nconst Heatmap = forwardRef((props, deckRef) => {\n  const {\n    uuid,\n    theme,\n    viewState: rawViewState,\n    setViewState,\n    width: viewWidth,\n    height: viewHeight,\n    expressionMatrix: expression,\n    cellColors,\n    colormap,\n    colormapRange,\n    clearPleaseWait,\n    setComponentHover,\n    setCellHighlight = createDefaultUpdateCellsHover('Heatmap'),\n    setGeneHighlight = createDefaultUpdateGenesHover('Heatmap'),\n    updateViewInfo = createDefaultUpdateViewInfo('Heatmap'),\n    setIsRendering = () => {},\n    transpose = false,\n    variablesTitle = 'Genes',\n    observationsTitle = 'Cells',\n  } = props;\n\n  const viewState = {\n    ...rawViewState,\n    target: (transpose ? [rawViewState.target[1], rawViewState.target[0]] : rawViewState.target),\n    minZoom: 0,\n  };\n\n  const axisLeftTitle = (transpose ? variablesTitle : observationsTitle);\n  const axisTopTitle = (transpose ? observationsTitle : variablesTitle);\n\n  const workerPool = useMemo(() => new HeatmapWorkerPool(), []);\n\n  useEffect(() => {\n    if (clearPleaseWait && expression) {\n      clearPleaseWait('expression-matrix');\n    }\n  }, [clearPleaseWait, expression]);\n\n  const tilesRef = useRef();\n  const dataRef = useRef();\n  const [axisLeftLabels, setAxisLeftLabels] = useState([]);\n  const [axisTopLabels, setAxisTopLabels] = useState([]);\n\n\n  // Since we are storing the tile data in a ref,\n  // and updating it asynchronously when the worker finishes,\n  // we need to tie it to a piece of state through this iteration value.\n  const [tileIteration, incTileIteration] = useReducer(i => i + 1, 0);\n\n  // We need to keep a backlog of the tasks for the worker thread,\n  // since the array buffer can only be held by one thread at a time.\n  const [backlog, setBacklog] = useState([]);\n\n  // Store a reference to the matrix Uint8Array in the dataRef,\n  // since we need to access its array buffer to transfer\n  // it back and forth from the worker thread.\n  useEffect(() => {\n    // Store the expression matrix Uint8Array in the dataRef.\n    if (expression && expression.matrix) {\n      dataRef.current = copyUint8Array(expression.matrix);\n    }\n  }, [dataRef, expression]);\n\n  // Check if the ordering of axis labels needs to be changed,\n  // for example if the cells \"selected\" (technically just colored)\n  // have changed.\n  useEffect(() => {\n    if (!expression) {\n      return;\n    }\n    const newCellOrdering = (!cellColors || cellColors.size === 0\n      ? expression.rows\n      : Array.from(cellColors.keys())\n    );\n    const oldCellOrdering = (transpose ? axisTopLabels : axisLeftLabels);\n\n    if (!isEqual(oldCellOrdering, newCellOrdering)) {\n      if (transpose) {\n        setAxisTopLabels(newCellOrdering);\n      } else {\n        setAxisLeftLabels(newCellOrdering);\n      }\n    }\n  }, [expression, cellColors, axisTopLabels, axisLeftLabels, transpose]);\n\n  // Set the genes ordering.\n  useEffect(() => {\n    if (!expression) {\n      return;\n    }\n    if (transpose) {\n      setAxisLeftLabels(expression.cols);\n    } else {\n      setAxisTopLabels(expression.cols);\n    }\n  }, [expression, transpose]);\n\n  const [cellLabelMaxLength, geneLabelMaxLength] = useMemo(() => {\n    if (!expression) {\n      return [0, 0];\n    }\n    return [\n      max(expression.rows.map(cellId => cellId.length)),\n      max(expression.cols.map(geneId => geneId.length)),\n    ];\n  }, [expression]);\n\n  const width = axisTopLabels.length;\n  const height = axisLeftLabels.length;\n\n  const [axisOffsetLeft, axisOffsetTop] = getAxisSizes(\n    transpose, geneLabelMaxLength, cellLabelMaxLength,\n  );\n\n  const offsetTop = axisOffsetTop + COLOR_BAR_SIZE;\n  const offsetLeft = axisOffsetLeft + COLOR_BAR_SIZE;\n\n  const matrixWidth = viewWidth - offsetLeft;\n  const matrixHeight = viewHeight - offsetTop;\n\n  const matrixLeft = -matrixWidth / 2;\n  const matrixRight = matrixWidth / 2;\n  const matrixTop = -matrixHeight / 2;\n  const matrixBottom = matrixHeight / 2;\n\n  const xTiles = Math.ceil(width / TILE_SIZE);\n  const yTiles = Math.ceil(height / TILE_SIZE);\n\n  const widthRatio = 1 - (TILE_SIZE - (width % TILE_SIZE)) / (xTiles * TILE_SIZE);\n  const heightRatio = 1 - (TILE_SIZE - (height % TILE_SIZE)) / (yTiles * TILE_SIZE);\n\n  const tileWidth = (matrixWidth / widthRatio) / (xTiles);\n  const tileHeight = (matrixHeight / heightRatio) / (yTiles);\n\n  const scaleFactor = 2 ** viewState.zoom;\n  const cellHeight = (matrixHeight * scaleFactor) / height;\n  const cellWidth = (matrixWidth * scaleFactor) / width;\n\n  // Get power of 2 between 1 and 16,\n  // for number of cells to aggregate together in each direction.\n  const aggSizeX = clamp(2 ** Math.ceil(Math.log2(1 / cellWidth)), MIN_ROW_AGG, MAX_ROW_AGG);\n  const aggSizeY = clamp(2 ** Math.ceil(Math.log2(1 / cellHeight)), MIN_ROW_AGG, MAX_ROW_AGG);\n\n  const [targetX, targetY] = viewState.target;\n\n  // Emit the viewInfo object on viewState updates\n  // (used by tooltips / crosshair elements).\n  useEffect(() => {\n    updateViewInfo({\n      uuid,\n      project: (cellId, geneId) => {\n        const colI = transpose ? axisTopLabels.indexOf(cellId) : axisTopLabels.indexOf(geneId);\n        const rowI = transpose ? axisLeftLabels.indexOf(geneId) : axisLeftLabels.indexOf(cellId);\n        return heatmapToMousePosition(\n          colI, rowI, {\n            offsetLeft,\n            offsetTop,\n            targetX: viewState.target[0],\n            targetY: viewState.target[1],\n            scaleFactor,\n            matrixWidth,\n            matrixHeight,\n            numRows: height,\n            numCols: width,\n          },\n        );\n      },\n    });\n  }, [uuid, updateViewInfo, transpose, axisTopLabels, axisLeftLabels, offsetLeft,\n    offsetTop, viewState, scaleFactor, matrixWidth, matrixHeight, height, width]);\n\n\n  // Listen for viewState changes.\n  // Do not allow the user to zoom and pan outside of the initial window.\n  const onViewStateChange = useCallback(({ viewState: nextViewState }) => {\n    const { zoom: nextZoom } = nextViewState;\n    const nextScaleFactor = 2 ** nextZoom;\n\n    const minTargetX = nextZoom === 0 ? 0 : -(matrixRight - (matrixRight / nextScaleFactor));\n    const maxTargetX = -1 * minTargetX;\n\n    const minTargetY = nextZoom === 0 ? 0 : -(matrixBottom - (matrixBottom / nextScaleFactor));\n    const maxTargetY = -1 * minTargetY;\n\n    // Manipulate view state if necessary to keep the user in the window.\n    const nextTarget = [\n      clamp(nextViewState.target[0], minTargetX, maxTargetX),\n      clamp(nextViewState.target[1], minTargetY, maxTargetY),\n    ];\n\n    setViewState({\n      zoom: nextZoom,\n      target: (transpose ? [nextTarget[1], nextTarget[0]] : nextTarget),\n    });\n  }, [matrixRight, matrixBottom, transpose, setViewState]);\n\n  // If `expression` or `cellOrdering` have changed,\n  // then new tiles need to be generated,\n  // so add a new task to the backlog.\n  useEffect(() => {\n    if (!expression) {\n      return;\n    }\n    // Use a uuid to give the task a unique ID,\n    // to help identify where in the list it is located\n    // after the worker thread asynchronously sends the data back\n    // to this thread.\n    if (\n      axisTopLabels && axisLeftLabels && xTiles && yTiles\n    ) {\n      setBacklog(prev => [...prev, uuidv4()]);\n    }\n  }, [dataRef, expression, axisTopLabels, axisLeftLabels, xTiles, yTiles]);\n\n  // When the backlog has updated, a new worker job can be submitted if:\n  // - the backlog has length >= 1 (at least one job is waiting), and\n  // - buffer.byteLength is not zero, so the worker does not currently \"own\" the buffer.\n  useEffect(() => {\n    if (backlog.length < 1) {\n      return;\n    }\n    const curr = backlog[backlog.length - 1];\n    if (dataRef.current && dataRef.current.buffer.byteLength) {\n      const { rows, cols, matrix } = expression;\n      const promises = range(yTiles).map(i => range(xTiles).map(async j => workerPool.process({\n        curr,\n        tileI: i,\n        tileJ: j,\n        tileSize: TILE_SIZE,\n        cellOrdering: transpose ? axisTopLabels : axisLeftLabels,\n        rows,\n        cols,\n        transpose,\n        data: matrix.buffer.slice(),\n      })));\n      const process = async () => {\n        const tiles = await Promise.all(promises.flat());\n        tilesRef.current = tiles.map(i => i.tile);\n        incTileIteration();\n        dataRef.current = new Uint8Array(tiles[0].buffer);\n        const { curr: currWork } = tiles[0];\n        setBacklog((prev) => {\n          const currIndex = prev.indexOf(currWork);\n          return prev.slice(currIndex + 1, prev.length);\n        });\n      };\n      process();\n    }\n  }, [axisLeftLabels, axisTopLabels, backlog, expression, transpose, xTiles, yTiles, workerPool]);\n\n  useEffect(() => {\n    setIsRendering(backlog.length > 0);\n  }, [backlog, setIsRendering]);\n\n  // Update the heatmap tiles if:\n  // - new tiles are available (`tileIteration` has changed), or\n  // - the matrix bounds have changed, or\n  // - the `aggSizeX` or `aggSizeY` have changed, or\n  // - the cell ordering has changed.\n  const heatmapLayers = useMemo(() => {\n    if (!tilesRef.current || backlog.length) {\n      return [];\n    }\n    function getLayer(i, j, tile) {\n      return new HeatmapBitmapLayer({\n        id: `heatmapLayer-${tileIteration}-${i}-${j}`,\n        image: tile,\n        bounds: [\n          matrixLeft + j * tileWidth,\n          matrixTop + i * tileHeight,\n          matrixLeft + (j + 1) * tileWidth,\n          matrixTop + (i + 1) * tileHeight,\n        ],\n        aggSizeX,\n        aggSizeY,\n        colormap,\n        colorScaleLo: colormapRange[0],\n        colorScaleHi: colormapRange[1],\n        updateTriggers: {\n          image: [axisLeftLabels, axisTopLabels],\n          bounds: [tileHeight, tileWidth],\n        },\n      });\n    }\n    const layers = tilesRef\n      .current.map((tile, index) => getLayer(Math.floor(index / xTiles), index % xTiles, tile));\n    return layers;\n  }, [backlog, tileIteration, matrixLeft, tileWidth, matrixTop, tileHeight,\n    aggSizeX, aggSizeY, colormap, colormapRange,\n    axisLeftLabels, axisTopLabels, xTiles]);\n\n\n  // Map cell and gene names to arrays with indices,\n  // to prepare to render the names in TextLayers.\n  const axisTopLabelData = useMemo(() => axisTopLabels.map((d, i) => [i, d]), [axisTopLabels]);\n  const axisLeftLabelData = useMemo(() => axisLeftLabels.map((d, i) => [i, d]), [axisLeftLabels]);\n\n  // Generate the axis label, axis title, and loading indicator text layers.\n  const textLayers = [\n    new HeatmapCompositeTextLayer({\n      targetX,\n      targetY,\n      scaleFactor,\n      axisLeftLabelData,\n      matrixTop,\n      height,\n      matrixHeight,\n      cellHeight,\n      cellWidth,\n      axisTopLabelData,\n      matrixLeft,\n      width,\n      matrixWidth,\n      viewHeight,\n      viewWidth,\n      theme,\n      axisLeftTitle,\n      axisTopTitle,\n      axisOffsetLeft,\n      axisOffsetTop,\n    }),\n  ];\n\n  // Create the left color bar with a BitmapLayer.\n  // TODO: find a way to do aggregation for this as well.\n  const cellColorsTiles = useMemo(() => {\n    if (!cellColors) {\n      return null;\n    }\n\n    let cellId;\n    let offset;\n    let color;\n    let rowI;\n\n    const cellOrdering = (transpose ? axisTopLabels : axisLeftLabels);\n    const colorBarTileWidthPx = (transpose ? TILE_SIZE : 1);\n    const colorBarTileHeightPx = (transpose ? 1 : TILE_SIZE);\n\n    const result = range((transpose ? xTiles : yTiles)).map((i) => {\n      const tileData = new Uint8ClampedArray(TILE_SIZE * 1 * 4);\n\n      range(TILE_SIZE).forEach((tileY) => {\n        rowI = (i * TILE_SIZE) + tileY; // the row / cell index\n        if (rowI < cellOrdering.length) {\n          cellId = cellOrdering[rowI];\n          color = cellColors.get(cellId);\n          offset = (transpose ? tileY : (TILE_SIZE - tileY - 1)) * 4;\n          if (color) {\n            const [rValue, gValue, bValue] = color;\n            tileData[offset + 0] = rValue;\n            tileData[offset + 1] = gValue;\n            tileData[offset + 2] = bValue;\n            tileData[offset + 3] = 255;\n          }\n        }\n      });\n\n      return new ImageData(tileData, colorBarTileWidthPx, colorBarTileHeightPx);\n    });\n\n    return result;\n  }, [cellColors, transpose, axisTopLabels, axisLeftLabels, xTiles, yTiles]);\n\n  const cellColorsLayers = useMemo(() => (cellColorsTiles\n    ? cellColorsTiles\n      .map((tile, i) => new PixelatedBitmapLayer({\n        id: `${(transpose ? 'colorsTopLayer' : 'colorsLeftLayer')}-${i}-${uuidv4()}`,\n        image: tile,\n        bounds: (transpose ? [\n          matrixLeft + i * tileWidth,\n          -matrixHeight / 2,\n          matrixLeft + (i + 1) * tileWidth,\n          matrixHeight / 2,\n        ] : [\n          -matrixWidth / 2,\n          matrixTop + i * tileHeight,\n          matrixWidth / 2,\n          matrixTop + (i + 1) * tileHeight,\n        ]),\n      }))\n    : []), [cellColorsTiles, matrixTop, matrixLeft, matrixHeight,\n    matrixWidth, tileWidth, tileHeight, transpose]);\n\n  const layers = heatmapLayers\n    .concat(textLayers)\n    .concat(cellColorsLayers);\n\n  // Set up the onHover function.\n  function onHover(info, event) {\n    if (!expression) {\n      return;\n    }\n    const { x: mouseX, y: mouseY } = event.offsetCenter;\n    const [colI, rowI] = mouseToHeatmapPosition(mouseX, mouseY, {\n      offsetLeft,\n      offsetTop,\n      targetX,\n      targetY,\n      scaleFactor,\n      matrixWidth,\n      matrixHeight,\n      numRows: height,\n      numCols: width,\n    });\n\n    if (colI === null) {\n      if (transpose) {\n        setCellHighlight(null);\n      } else {\n        setGeneHighlight(null);\n      }\n    }\n\n    if (rowI === null) {\n      if (transpose) {\n        setGeneHighlight(null);\n      } else {\n        setCellHighlight(null);\n      }\n    }\n\n    const obsI = expression.rows.indexOf(transpose\n      ? axisTopLabels[colI]\n      : axisLeftLabels[rowI]);\n    const varI = expression.cols.indexOf(transpose\n      ? axisLeftLabels[rowI]\n      : axisTopLabels[colI]);\n\n    const obsId = expression.rows[obsI];\n    const varId = expression.cols[varI];\n    if (setComponentHover) {\n      setComponentHover();\n    }\n    setCellHighlight(obsId || null);\n    setGeneHighlight(varId || null);\n  }\n\n  return (\n    <DeckGL\n      id={`deckgl-overlay-${uuid}`}\n      ref={deckRef}\n      views={[\n        // Note that there are multiple views here,\n        // but only one viewState.\n        new OrthographicView({\n          id: 'heatmap',\n          controller: true,\n          x: offsetLeft,\n          y: offsetTop,\n          width: matrixWidth,\n          height: matrixHeight,\n        }),\n        new OrthographicView({\n          id: 'axisLeft',\n          controller: false,\n          x: (transpose ? COLOR_BAR_SIZE : 0),\n          y: offsetTop,\n          width: axisOffsetLeft,\n          height: matrixHeight,\n        }),\n        new OrthographicView({\n          id: 'axisTop',\n          controller: false,\n          x: offsetLeft,\n          y: (transpose ? 0 : COLOR_BAR_SIZE),\n          width: matrixWidth,\n          height: axisOffsetTop,\n        }),\n        new OrthographicView({\n          id: 'colorsLeft',\n          controller: false,\n          x: axisOffsetLeft,\n          y: offsetTop,\n          width: COLOR_BAR_SIZE - AXIS_MARGIN,\n          height: matrixHeight,\n        }),\n        new OrthographicView({\n          id: 'colorsTop',\n          controller: false,\n          x: offsetLeft,\n          y: axisOffsetTop,\n          width: matrixWidth,\n          height: COLOR_BAR_SIZE - AXIS_MARGIN,\n        }),\n      ]}\n      layers={layers}\n      layerFilter={layerFilter}\n      getCursor={interactionState => (interactionState.isDragging ? 'grabbing' : 'default')}\n      glOptions={DEFAULT_GL_OPTIONS}\n      onViewStateChange={onViewStateChange}\n      viewState={viewState}\n      onHover={onHover}\n    />\n  );\n});\n\nexport default Heatmap;\n", "/* eslint-disable no-underscore-dangle */\nimport { COORDINATE_SYSTEM, CompositeLayer } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport { TextLayer } from '@deck.gl/layers'; // eslint-disable-line import/no-extraneous-dependencies\nimport {\n  AXIS_LABEL_TEXT_SIZE,\n  AXIS_TITLE_TEXT_SIZE,\n  AXIS_MARGIN,\n  THEME_TO_TEXT_COLOR,\n  AXIS_FONT_FAMILY,\n} from './heatmap-constants';\n\nexport default class HeatmapCompositeTextLayer extends CompositeLayer {\n  _renderAxisTopLayers() {\n    const {\n      axisTopLabelData, matrixLeft, width, matrixWidth, viewWidth, theme,\n      targetX, targetY, axisTopTitle, cellWidth, axisOffsetTop, scaleFactor,\n    } = this.props;\n    const showAxisTopLabels = cellWidth >= AXIS_LABEL_TEXT_SIZE;\n    const axisLabelTop = targetY + (axisOffsetTop - AXIS_MARGIN) / 2 / scaleFactor;\n    return [\n      new TextLayer({\n        id: 'axisTopLabels',\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data: axisTopLabelData,\n        getText: d => d[1],\n        getPosition: d => [matrixLeft + ((d[0] + 0.5) / width) * matrixWidth, axisLabelTop],\n        getTextAnchor: 'start',\n        getColor: () => THEME_TO_TEXT_COLOR[theme],\n        getSize: (showAxisTopLabels ? AXIS_LABEL_TEXT_SIZE : 0),\n        getAngle: 75,\n        fontFamily: AXIS_FONT_FAMILY,\n        updateTriggers: {\n          getPosition: [axisLabelTop, matrixLeft, matrixWidth, viewWidth],\n          getSize: [showAxisTopLabels],\n          getColor: [theme],\n        },\n      }),\n      new TextLayer({\n        id: 'axisTopTitle',\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data: [{ title: axisTopTitle }],\n        getText: d => d.title,\n        getPosition: [targetX, targetY],\n        getTextAnchor: 'middle',\n        getColor: () => THEME_TO_TEXT_COLOR[theme],\n        getSize: (!showAxisTopLabels ? AXIS_TITLE_TEXT_SIZE : 0),\n        getAngle: 0,\n        fontFamily: AXIS_FONT_FAMILY,\n        updateTriggers: {\n          getSize: [showAxisTopLabels],\n          getColor: [theme],\n        },\n      }),\n    ];\n  }\n\n  _renderAxisLeftLayers() {\n    const {\n      axisLeftLabelData, matrixTop, height, matrixHeight,\n      viewHeight, theme, axisLeftTitle, targetX, targetY, cellHeight, axisOffsetLeft,\n      scaleFactor,\n    } = this.props;\n    const showAxisLeftLabels = cellHeight >= AXIS_LABEL_TEXT_SIZE;\n    const axisLabelLeft = targetX + (axisOffsetLeft - AXIS_MARGIN) / 2 / scaleFactor;\n    return [\n      new TextLayer({\n        id: 'axisLeftLabels',\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data: axisLeftLabelData,\n        getText: d => d[1],\n        getPosition: d => [axisLabelLeft, matrixTop + ((d[0] + 0.5) / height) * matrixHeight],\n        getTextAnchor: 'end',\n        getColor: () => THEME_TO_TEXT_COLOR[theme],\n        getSize: (showAxisLeftLabels ? AXIS_LABEL_TEXT_SIZE : 0),\n        getAngle: 0,\n        fontFamily: AXIS_FONT_FAMILY,\n        updateTriggers: {\n          getPosition: [axisLabelLeft, matrixTop, matrixHeight, viewHeight],\n          getSize: [showAxisLeftLabels],\n          getColor: [theme],\n        },\n      }),\n      new TextLayer({\n        id: 'axisLeftTitle',\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data: [{ title: axisLeftTitle }],\n        getText: d => d.title,\n        getPosition: [targetX, targetY],\n        getTextAnchor: 'middle',\n        getColor: () => THEME_TO_TEXT_COLOR[theme],\n        getSize: (!showAxisLeftLabels ? AXIS_TITLE_TEXT_SIZE : 0),\n        getAngle: 90,\n        fontFamily: AXIS_FONT_FAMILY,\n        updateTriggers: {\n          getSize: [showAxisLeftLabels],\n          getColor: [theme],\n        },\n      }),\n    ];\n  }\n\n  renderLayers() {\n    return [\n      this._renderAxisTopLayers(),\n      this._renderAxisLeftLayers(),\n    ];\n  }\n}\n\nHeatmapCompositeTextLayer.layerName = 'HeatmapCompositeTextLayer';\n", "import GL from '@luma.gl/constants'; // eslint-disable-line import/no-extraneous-dependencies\n\nexport const TILE_SIZE = 2048;\nexport const MIN_ROW_AGG = 1;\nexport const MAX_ROW_AGG = 16;\n\nexport const COLOR_BAR_SIZE = 20;\nexport const AXIS_LABEL_TEXT_SIZE = 9;\nexport const AXIS_TITLE_TEXT_SIZE = 15;\nexport const AXIS_MIN_SIZE = 10;\nexport const AXIS_MAX_SIZE = 90;\nexport const AXIS_MARGIN = 3;\nexport const THEME_TO_TEXT_COLOR = {\n  dark: [224, 224, 224],\n  light: [64, 64, 64],\n};\nexport const AXIS_FONT_FAMILY = \"-apple-system, 'Helvetica Neue', Arial, sans-serif\";\n\nexport const PIXELATED_TEXTURE_PARAMETERS = {\n  // NEAREST for integer data to prevent interpolation.\n  [GL.TEXTURE_MIN_FILTER]: GL.NEAREST,\n  [GL.TEXTURE_MAG_FILTER]: GL.NEAREST,\n  // CLAMP_TO_EDGE to remove tile artifacts.\n  [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n  [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n};\n", "import { BitmapLayer } from '@deck.gl/layers'; // eslint-disable-line import/no-extraneous-dependencies\nimport { CompositeLayer } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport { PIXELATED_TEXTURE_PARAMETERS } from './heatmap-constants';\n\n\n// These are the same defaultProps as for BitmapLayer.\nconst defaultProps = {\n  ...BitmapLayer.defaultProps,\n  image: { type: 'object', value: null, async: true },\n  bounds: { type: 'array', value: [1, 0, 0, 1], compare: true },\n  desaturate: {\n    type: 'number', min: 0, max: 1, value: 0,\n  },\n  transparentColor: { type: 'color', value: [0, 0, 0, 0] },\n  tintColor: { type: 'color', value: [255, 255, 255] },\n};\n\nexport default class PixelatedBitmapLayer extends CompositeLayer {\n  renderLayers() {\n    const { image } = this.props;\n    return new BitmapLayer(this.props, {\n      id: `${this.props.id}-wrapped`,\n      image,\n      textureParameters: PIXELATED_TEXTURE_PARAMETERS,\n    });\n  }\n}\n\nPixelatedBitmapLayer.layerName = 'PixelatedBitmapLayer';\nPixelatedBitmapLayer.defaultProps = defaultProps;\n", "/* eslint-disable no-underscore-dangle */\nimport GL from '@luma.gl/constants'; // eslint-disable-line import/no-extraneous-dependencies\nimport { _mergeShaders, project32, picking } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport { BitmapLayer } from '@deck.gl/layers'; // eslint-disable-line import/no-extraneous-dependencies\nimport { Texture2D } from '@luma.gl/core';\nimport { PIXELATED_TEXTURE_PARAMETERS, TILE_SIZE } from './heatmap-constants';\nimport { GLSL_COLORMAPS, GLSL_COLORMAP_DEFAULT, COLORMAP_SHADER_PLACEHOLDER } from './constants';\nimport { vertexShader, fragmentShader } from './heatmap-bitmap-layer-shaders';\n\nconst defaultProps = {\n  image: { type: 'object', value: null, async: true },\n  colormap: { type: 'string', value: GLSL_COLORMAP_DEFAULT, compare: true },\n  bounds: { type: 'array', value: [1, 0, 0, 1], compare: true },\n  aggSizeX: { type: 'number', value: 8.0, compare: true },\n  aggSizeY: { type: 'number', value: 8.0, compare: true },\n  colorScaleLo: { type: 'number', value: 0.0, compare: true },\n  colorScaleHi: { type: 'number', value: 1.0, compare: true },\n};\n\n/**\n * A BitmapLayer that performs aggregation in the fragment shader,\n * and renders its texture from a Uint8Array rather than an ImageData.\n */\nexport default class HeatmapBitmapLayer extends BitmapLayer {\n  /**\n   * Copy of getShaders from Layer (grandparent, parent of BitmapLayer).\n   * Reference: https://github.com/visgl/deck.gl/blob/0afd4e99a6199aeec979989e0c361c97e6c17a16/modules/core/src/lib/layer.js#L302\n   * @param {object} shaders\n   * @returns {object} Merged shaders.\n   */\n  _getShaders(shaders) {\n    this.props.extensions.forEach((extension) => {\n      // eslint-disable-next-line no-param-reassign\n      shaders = _mergeShaders(shaders, extension.getShaders.call(this, extension));\n    });\n    return shaders;\n  }\n\n  /**\n   * Need to override to provide custom shaders.\n   */\n  getShaders() {\n    const { colormap } = this.props;\n    const fragmentShaderWithColormap = (GLSL_COLORMAPS.includes(colormap)\n      ? fragmentShader.replace(COLORMAP_SHADER_PLACEHOLDER, colormap)\n      : fragmentShader.replace(COLORMAP_SHADER_PLACEHOLDER, GLSL_COLORMAP_DEFAULT)\n    );\n    return this._getShaders({\n      vs: vertexShader,\n      fs: fragmentShaderWithColormap,\n      modules: [project32, picking],\n    });\n  }\n\n  updateState(args) {\n    super.updateState(args);\n    this.loadTexture(this.props.image);\n    const { props, oldProps } = args;\n    if (props.colormap !== oldProps.colormap) {\n      const { gl } = this.context;\n      // eslint-disable-next-line no-unused-expressions\n      this.state.model?.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  /**\n   * Need to override to provide additional uniform values.\n   * Simplified by removing video-related code.\n   * Reference: https://github.com/visgl/deck.gl/blob/0afd4e99a6199aeec979989e0c361c97e6c17a16/modules/layers/src/bitmap-layer/bitmap-layer.js#L173\n   * @param {*} opts\n   */\n  draw(opts) {\n    const { uniforms } = opts;\n    const { bitmapTexture, model } = this.state;\n    const {\n      aggSizeX,\n      aggSizeY,\n      colorScaleLo,\n      colorScaleHi,\n    } = this.props;\n\n    // Render the image\n    if (bitmapTexture && model) {\n      model\n        .setUniforms(\n          Object.assign({}, uniforms, {\n            uBitmapTexture: bitmapTexture,\n            uTextureSize: [TILE_SIZE, TILE_SIZE],\n            uAggSize: [aggSizeX, aggSizeY],\n            uColorScaleRange: [colorScaleLo, colorScaleHi],\n          }),\n        )\n        .draw();\n    }\n  }\n\n  /**\n   * Need to override to provide the custom DEFAULT_TEXTURE_PARAMETERS\n   * object.\n   * Simplified by removing video-related code.\n   * Reference: https://github.com/visgl/deck.gl/blob/0afd4e99a6199aeec979989e0c361c97e6c17a16/modules/layers/src/bitmap-layer/bitmap-layer.js#L218\n   * @param {Uint8Array} image\n   */\n  loadTexture(image) {\n    const { gl } = this.context;\n\n    if (this.state.bitmapTexture) {\n      this.state.bitmapTexture.delete();\n    }\n\n    if (image instanceof Texture2D) {\n      this.setState({\n        bitmapTexture: image,\n      });\n    } else if (image) {\n      this.setState({\n        bitmapTexture: new Texture2D(gl, {\n          data: image,\n          mipmaps: false,\n          parameters: PIXELATED_TEXTURE_PARAMETERS,\n          // Each color contains a single luminance value.\n          // When sampled, rgb are all set to this luminance, alpha is 1.0.\n          // Reference: https://luma.gl/docs/api-reference/webgl/texture#texture-formats\n          format: GL.LUMINANCE,\n          dataFormat: GL.LUMINANCE,\n          type: GL.UNSIGNED_BYTE,\n          width: TILE_SIZE,\n          height: TILE_SIZE,\n        }),\n      });\n    }\n  }\n}\nHeatmapBitmapLayer.layerName = 'HeatmapBitmapLayer';\nHeatmapBitmapLayer.defaultProps = defaultProps;\n", "// List of the GLSL colormaps available,\n// to validate against before string replacing.\nexport const GLSL_COLORMAPS = [\n  'plasma',\n  'viridis',\n  'jet',\n];\nexport const GLSL_COLORMAP_DEFAULT = 'plasma';\nexport const COLORMAP_SHADER_PLACEHOLDER = 'COLORMAP_FUNC';\n", "/**\n * No change to the vertex shader from the base BitmapLayer.\n * Reference: https://github.com/visgl/deck.gl/blob/8.2-release/modules/layers/src/bitmap-layer/bitmap-layer-vertex.js\n */\nexport var vertexShader = \"\\n#define SHADER_NAME heatmap-bitmap-layer-vertex-shader\\n\\nattribute vec2 texCoords;\\nattribute vec3 positions;\\nattribute vec3 positions64Low;\\n\\nvarying vec2 vTexCoord;\\n\\nconst vec3 pickingColor = vec3(1.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  geometry.worldPosition = positions;\\n  geometry.uv = texCoords;\\n  geometry.pickingColor = pickingColor;\\n\\n  gl_Position = project_position_to_clipspace(positions, positions64Low, vec3(0.0), geometry.position);\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n\\n  vTexCoord = texCoords;\\n\\n  vec4 color = vec4(0.0);\\n  DECKGL_FILTER_COLOR(color, geometry);\\n}\\n\";\n/**\n * Fragment shader adapted to perform aggregation and\n * take color scale functions + sliders into account.\n * Reference: https://github.com/visgl/deck.gl/blob/8.2-release/modules/layers/src/bitmap-layer/bitmap-layer-fragment.js\n * Reference: https://github.com/hms-dbmi/viv/blob/06231ae02cac1ff57ba458c71e9bc59ed2fc4f8b/src/layers/XRLayer/xr-layer-fragment-colormap.webgl1.glsl\n */\n\nexport var fragmentShader = \"\\n#define SHADER_NAME heatmap-bitmap-layer-fragment-shader\\n\\n#ifdef GL_ES\\nprecision mediump float;\\n#endif\\n\\nvec4 rdbu (float x_2865134303) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.0196078431372549,0.0392156862745098,0.6745098039215687,1);\\n  const float e1 = 0.35;\\n  const vec4 v1 = vec4(0.41568627450980394,0.5372549019607843,0.9686274509803922,1);\\n  const float e2 = 0.5;\\n  const vec4 v2 = vec4(0.7450980392156863,0.7450980392156863,0.7450980392156863,1);\\n  const float e3 = 0.6;\\n  const vec4 v3 = vec4(0.8627450980392157,0.6666666666666666,0.5176470588235295,1);\\n  const float e4 = 0.7;\\n  const vec4 v4 = vec4(0.9019607843137255,0.5686274509803921,0.35294117647058826,1);\\n  const float e5 = 1.0;\\n  const vec4 v5 = vec4(0.6980392156862745,0.0392156862745098,0.10980392156862745,1);\\n  float a0 = smoothstep(e0,e1,x_2865134303);\\n  float a1 = smoothstep(e1,e2,x_2865134303);\\n  float a2 = smoothstep(e2,e3,x_2865134303);\\n  float a3 = smoothstep(e3,e4,x_2865134303);\\n  float a4 = smoothstep(e4,e5,x_2865134303);\\n  return max(mix(v0,v1,a0)*step(e0,x_2865134303)*step(x_2865134303,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_2865134303)*step(x_2865134303,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_2865134303)*step(x_2865134303,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_2865134303)*step(x_2865134303,e4),mix(v4,v5,a4)*step(e4,x_2865134303)*step(x_2865134303,e5)\\n  ))));\\n}\\n\\nvec4 plasma (float x_4113959278) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.050980392156862744,0.03137254901960784,0.5294117647058824,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.29411764705882354,0.011764705882352941,0.6313725490196078,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.49019607843137253,0.011764705882352941,0.6588235294117647,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.6588235294117647,0.13333333333333333,0.5882352941176471,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.796078431372549,0.27450980392156865,0.4745098039215686,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.8980392156862745,0.4196078431372549,0.36470588235294116,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.9725490196078431,0.5803921568627451,0.2549019607843137,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.9921568627450981,0.7647058823529411,0.1568627450980392,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9411764705882353,0.9764705882352941,0.12941176470588237,1);\\n  float a0 = smoothstep(e0,e1,x_4113959278);\\n  float a1 = smoothstep(e1,e2,x_4113959278);\\n  float a2 = smoothstep(e2,e3,x_4113959278);\\n  float a3 = smoothstep(e3,e4,x_4113959278);\\n  float a4 = smoothstep(e4,e5,x_4113959278);\\n  float a5 = smoothstep(e5,e6,x_4113959278);\\n  float a6 = smoothstep(e6,e7,x_4113959278);\\n  float a7 = smoothstep(e7,e8,x_4113959278);\\n  return max(mix(v0,v1,a0)*step(e0,x_4113959278)*step(x_4113959278,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_4113959278)*step(x_4113959278,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_4113959278)*step(x_4113959278,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_4113959278)*step(x_4113959278,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_4113959278)*step(x_4113959278,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_4113959278)*step(x_4113959278,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_4113959278)*step(x_4113959278,e7),mix(v7,v8,a7)*step(e7,x_4113959278)*step(x_4113959278,e8)\\n  )))))));\\n}\\n\\nvec4 viridis (float x_1156145534) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.26666666666666666,0.00392156862745098,0.32941176470588235,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.2784313725490196,0.17254901960784313,0.47843137254901963,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.23137254901960785,0.3176470588235294,0.5450980392156862,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.17254901960784313,0.44313725490196076,0.5568627450980392,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.12941176470588237,0.5647058823529412,0.5529411764705883,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.15294117647058825,0.6784313725490196,0.5058823529411764,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.3607843137254902,0.7843137254901961,0.38823529411764707,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.6666666666666666,0.8627450980392157,0.19607843137254902,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9921568627450981,0.9058823529411765,0.1450980392156863,1);\\n  float a0 = smoothstep(e0,e1,x_1156145534);\\n  float a1 = smoothstep(e1,e2,x_1156145534);\\n  float a2 = smoothstep(e2,e3,x_1156145534);\\n  float a3 = smoothstep(e3,e4,x_1156145534);\\n  float a4 = smoothstep(e4,e5,x_1156145534);\\n  float a5 = smoothstep(e5,e6,x_1156145534);\\n  float a6 = smoothstep(e6,e7,x_1156145534);\\n  float a7 = smoothstep(e7,e8,x_1156145534);\\n  return max(mix(v0,v1,a0)*step(e0,x_1156145534)*step(x_1156145534,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_1156145534)*step(x_1156145534,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_1156145534)*step(x_1156145534,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_1156145534)*step(x_1156145534,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_1156145534)*step(x_1156145534,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_1156145534)*step(x_1156145534,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_1156145534)*step(x_1156145534,e7),mix(v7,v8,a7)*step(e7,x_1156145534)*step(x_1156145534,e8)\\n  )))))));\\n}\\n\\nvec4 greys (float x_2073311089) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,1,1);\\n  float a0 = smoothstep(e0,e1,x_2073311089);\\n  return mix(v0,v1,a0)*step(e0,x_2073311089)*step(x_2073311089,e1);\\n}\\n\\nvec4 magma (float x_2664132035) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0.01568627450980392,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.10980392156862745,0.06274509803921569,0.26666666666666666,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.30980392156862746,0.07058823529411765,0.4823529411764706,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.5058823529411764,0.1450980392156863,0.5058823529411764,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.7098039215686275,0.21176470588235294,0.47843137254901963,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.8980392156862745,0.3137254901960784,0.39215686274509803,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.984313725490196,0.5294117647058824,0.3803921568627451,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.996078431372549,0.7607843137254902,0.5294117647058824,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9882352941176471,0.9921568627450981,0.7490196078431373,1);\\n  float a0 = smoothstep(e0,e1,x_2664132035);\\n  float a1 = smoothstep(e1,e2,x_2664132035);\\n  float a2 = smoothstep(e2,e3,x_2664132035);\\n  float a3 = smoothstep(e3,e4,x_2664132035);\\n  float a4 = smoothstep(e4,e5,x_2664132035);\\n  float a5 = smoothstep(e5,e6,x_2664132035);\\n  float a6 = smoothstep(e6,e7,x_2664132035);\\n  float a7 = smoothstep(e7,e8,x_2664132035);\\n  return max(mix(v0,v1,a0)*step(e0,x_2664132035)*step(x_2664132035,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_2664132035)*step(x_2664132035,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_2664132035)*step(x_2664132035,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_2664132035)*step(x_2664132035,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_2664132035)*step(x_2664132035,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_2664132035)*step(x_2664132035,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_2664132035)*step(x_2664132035,e7),mix(v7,v8,a7)*step(e7,x_2664132035)*step(x_2664132035,e8)\\n  )))))));\\n}\\n\\nvec4 jet (float x_2485945205) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0.5137254901960784,1);\\n  const float e1 = 0.125;\\n  const vec4 v1 = vec4(0,0.23529411764705882,0.6666666666666666,1);\\n  const float e2 = 0.375;\\n  const vec4 v2 = vec4(0.0196078431372549,1,1,1);\\n  const float e3 = 0.625;\\n  const vec4 v3 = vec4(1,1,0,1);\\n  const float e4 = 0.875;\\n  const vec4 v4 = vec4(0.9803921568627451,0,0,1);\\n  const float e5 = 1.0;\\n  const vec4 v5 = vec4(0.5019607843137255,0,0,1);\\n  float a0 = smoothstep(e0,e1,x_2485945205);\\n  float a1 = smoothstep(e1,e2,x_2485945205);\\n  float a2 = smoothstep(e2,e3,x_2485945205);\\n  float a3 = smoothstep(e3,e4,x_2485945205);\\n  float a4 = smoothstep(e4,e5,x_2485945205);\\n  return max(mix(v0,v1,a0)*step(e0,x_2485945205)*step(x_2485945205,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_2485945205)*step(x_2485945205,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_2485945205)*step(x_2485945205,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_2485945205)*step(x_2485945205,e4),mix(v4,v5,a4)*step(e4,x_2485945205)*step(x_2485945205,e5)\\n  ))));\\n}\\n\\nvec4 bone (float x_2693572714) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 0.376;\\n  const vec4 v1 = vec4(0.32941176470588235,0.32941176470588235,0.4549019607843137,1);\\n  const float e2 = 0.753;\\n  const vec4 v2 = vec4(0.6627450980392157,0.7843137254901961,0.7843137254901961,1);\\n  const float e3 = 1.0;\\n  const vec4 v3 = vec4(1,1,1,1);\\n  float a0 = smoothstep(e0,e1,x_2693572714);\\n  float a1 = smoothstep(e1,e2,x_2693572714);\\n  float a2 = smoothstep(e2,e3,x_2693572714);\\n  return max(mix(v0,v1,a0)*step(e0,x_2693572714)*step(x_2693572714,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_2693572714)*step(x_2693572714,e2),mix(v2,v3,a2)*step(e2,x_2693572714)*step(x_2693572714,e3)\\n  ));\\n}\\n\\nvec4 copper (float x_2606013778) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 0.804;\\n  const vec4 v1 = vec4(1,0.6274509803921569,0.4,1);\\n  const float e2 = 1.0;\\n  const vec4 v2 = vec4(1,0.7803921568627451,0.4980392156862745,1);\\n  float a0 = smoothstep(e0,e1,x_2606013778);\\n  float a1 = smoothstep(e1,e2,x_2606013778);\\n  return max(mix(v0,v1,a0)*step(e0,x_2606013778)*step(x_2606013778,e1),mix(v1,v2,a1)*step(e1,x_2606013778)*step(x_2606013778,e2)\\n  );\\n}\\n\\nvec4 density (float x_4072297271) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.21176470588235294,0.054901960784313725,0.1411764705882353,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.34901960784313724,0.09019607843137255,0.3137254901960784,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.43137254901960786,0.17647058823529413,0.5176470588235295,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.47058823529411764,0.30196078431372547,0.6980392156862745,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.47058823529411764,0.44313725490196076,0.8352941176470589,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.45098039215686275,0.592156862745098,0.8941176470588236,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.5254901960784314,0.7254901960784313,0.8901960784313725,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.6941176470588235,0.8392156862745098,0.8901960784313725,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9019607843137255,0.9450980392156862,0.9450980392156862,1);\\n  float a0 = smoothstep(e0,e1,x_4072297271);\\n  float a1 = smoothstep(e1,e2,x_4072297271);\\n  float a2 = smoothstep(e2,e3,x_4072297271);\\n  float a3 = smoothstep(e3,e4,x_4072297271);\\n  float a4 = smoothstep(e4,e5,x_4072297271);\\n  float a5 = smoothstep(e5,e6,x_4072297271);\\n  float a6 = smoothstep(e6,e7,x_4072297271);\\n  float a7 = smoothstep(e7,e8,x_4072297271);\\n  return max(mix(v0,v1,a0)*step(e0,x_4072297271)*step(x_4072297271,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_4072297271)*step(x_4072297271,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_4072297271)*step(x_4072297271,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_4072297271)*step(x_4072297271,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_4072297271)*step(x_4072297271,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_4072297271)*step(x_4072297271,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_4072297271)*step(x_4072297271,e7),mix(v7,v8,a7)*step(e7,x_4072297271)*step(x_4072297271,e8)\\n  )))))));\\n}\\n\\nvec4 inferno (float x_524681000) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0.01568627450980392,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.12156862745098039,0.047058823529411764,0.2823529411764706,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.3333333333333333,0.058823529411764705,0.42745098039215684,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.5333333333333333,0.13333333333333333,0.41568627450980394,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.7294117647058823,0.21176470588235294,0.3333333333333333,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.8901960784313725,0.34901960784313724,0.2,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.9764705882352941,0.5490196078431373,0.0392156862745098,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.9764705882352941,0.788235294117647,0.19607843137254902,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9882352941176471,1,0.6431372549019608,1);\\n  float a0 = smoothstep(e0,e1,x_524681000);\\n  float a1 = smoothstep(e1,e2,x_524681000);\\n  float a2 = smoothstep(e2,e3,x_524681000);\\n  float a3 = smoothstep(e3,e4,x_524681000);\\n  float a4 = smoothstep(e4,e5,x_524681000);\\n  float a5 = smoothstep(e5,e6,x_524681000);\\n  float a6 = smoothstep(e6,e7,x_524681000);\\n  float a7 = smoothstep(e7,e8,x_524681000);\\n  return max(mix(v0,v1,a0)*step(e0,x_524681000)*step(x_524681000,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_524681000)*step(x_524681000,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_524681000)*step(x_524681000,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_524681000)*step(x_524681000,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_524681000)*step(x_524681000,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_524681000)*step(x_524681000,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_524681000)*step(x_524681000,e7),mix(v7,v8,a7)*step(e7,x_524681000)*step(x_524681000,e8)\\n  )))))));\\n}\\n\\nvec4 cool (float x_3050536724) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.49019607843137253,0,0.7019607843137254,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.4549019607843137,0,0.8549019607843137,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.3843137254901961,0.2901960784313726,0.9294117647058824,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.26666666666666666,0.5725490196078431,0.9058823529411765,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0,0.8,0.7725490196078432,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0,0.9686274509803922,0.5725490196078431,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0,1,0.34509803921568627,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.1568627450980392,1,0.03137254901960784,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.5764705882352941,1,0,1);\\n  float a0 = smoothstep(e0,e1,x_3050536724);\\n  float a1 = smoothstep(e1,e2,x_3050536724);\\n  float a2 = smoothstep(e2,e3,x_3050536724);\\n  float a3 = smoothstep(e3,e4,x_3050536724);\\n  float a4 = smoothstep(e4,e5,x_3050536724);\\n  float a5 = smoothstep(e5,e6,x_3050536724);\\n  float a6 = smoothstep(e6,e7,x_3050536724);\\n  float a7 = smoothstep(e7,e8,x_3050536724);\\n  return max(mix(v0,v1,a0)*step(e0,x_3050536724)*step(x_3050536724,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_3050536724)*step(x_3050536724,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_3050536724)*step(x_3050536724,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_3050536724)*step(x_3050536724,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_3050536724)*step(x_3050536724,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_3050536724)*step(x_3050536724,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_3050536724)*step(x_3050536724,e7),mix(v7,v8,a7)*step(e7,x_3050536724)*step(x_3050536724,e8)\\n  )))))));\\n}\\n\\nvec4 hot (float x_4009354686) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 0.3;\\n  const vec4 v1 = vec4(0.9019607843137255,0,0,1);\\n  const float e2 = 0.6;\\n  const vec4 v2 = vec4(1,0.8235294117647058,0,1);\\n  const float e3 = 1.0;\\n  const vec4 v3 = vec4(1,1,1,1);\\n  float a0 = smoothstep(e0,e1,x_4009354686);\\n  float a1 = smoothstep(e1,e2,x_4009354686);\\n  float a2 = smoothstep(e2,e3,x_4009354686);\\n  return max(mix(v0,v1,a0)*step(e0,x_4009354686)*step(x_4009354686,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_4009354686)*step(x_4009354686,e2),mix(v2,v3,a2)*step(e2,x_4009354686)*step(x_4009354686,e3)\\n  ));\\n}\\n\\nvec4 spring (float x_2270446359) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(1,0,1,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,0,1);\\n  float a0 = smoothstep(e0,e1,x_2270446359);\\n  return mix(v0,v1,a0)*step(e0,x_2270446359)*step(x_2270446359,e1);\\n}\\n\\nvec4 summer (float x_1101081466) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0.5019607843137255,0.4,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,0.4,1);\\n  float a0 = smoothstep(e0,e1,x_1101081466);\\n  return mix(v0,v1,a0)*step(e0,x_1101081466)*step(x_1101081466,e1);\\n}\\n\\nvec4 autumn (float x_3652770500) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(1,0,0,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,0,1);\\n  float a0 = smoothstep(e0,e1,x_3652770500);\\n  return mix(v0,v1,a0)*step(e0,x_3652770500)*step(x_3652770500,e1);\\n}\\n\\nvec4 winter (float x_1155565894) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,1,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(0,1,0.5019607843137255,1);\\n  float a0 = smoothstep(e0,e1,x_1155565894);\\n  return mix(v0,v1,a0)*step(e0,x_1155565894)*step(x_1155565894,e1);\\n}\\n\\n// The texture (GL.LUMINANCE & Uint8Array).\\nuniform sampler2D uBitmapTexture;\\n\\n// What are the dimensions of the texture (width, height)?\\nuniform vec2 uTextureSize;\\n\\n// How many consecutive pixels should be aggregated together along each axis?\\nuniform vec2 uAggSize;\\n\\n// What are the values of the color scale sliders?\\nuniform vec2 uColorScaleRange;\\n\\n// The texture coordinate, varying (interpolated between values set by the vertex shader).\\nvarying vec2 vTexCoord;\\n\\nvoid main(void) {\\n  // Compute 1 pixel in texture coordinates\\n  vec2 onePixel = vec2(1.0, 1.0) / uTextureSize;\\n  \\n  vec2 viewCoord = vec2(floor(vTexCoord.x * uTextureSize.x), floor(vTexCoord.y * uTextureSize.y));\\n\\n  // Compute (x % aggSizeX, y % aggSizeY).\\n  // These values will be the number of values to the left / above the current position to consider.\\n  vec2 modAggSize = vec2(-1.0 * mod(viewCoord.x, uAggSize.x), -1.0 * mod(viewCoord.y, uAggSize.y));\\n\\n  // Take the sum of values along each axis.\\n  float intensitySum = 0.0;\\n  vec2 offsetPixels = vec2(0.0, 0.0);\\n\\n  for(int i = 0; i < 16; i++) {\\n    // Check to break outer loop early.\\n    // Uniforms cannot be used as conditions in GLSL for loops.\\n    if(float(i) >= uAggSize.y) {\\n      // Done in the y direction.\\n      break;\\n    }\\n\\n    offsetPixels = vec2(offsetPixels.x, (modAggSize.y + float(i)) * onePixel.y);\\n\\n    for(int j = 0; j < 16; j++) {\\n      // Check to break inner loop early.\\n      // Uniforms cannot be used as conditions in GLSL for loops.\\n      if(float(j) >= uAggSize.x) {\\n        // Done in the x direction.\\n        break;\\n      }\\n\\n      offsetPixels = vec2((modAggSize.x + float(j)) * onePixel.x, offsetPixels.y);\\n      intensitySum += texture2D(uBitmapTexture, vTexCoord + offsetPixels).r;\\n    }\\n  }\\n  \\n  // Compute the mean value.\\n  float intensityMean = intensitySum / (uAggSize.x * uAggSize.y);\\n  \\n  // Re-scale using the color scale slider values.\\n  float scaledIntensityMean = (intensityMean - uColorScaleRange[0]) / max(0.005, (uColorScaleRange[1] - uColorScaleRange[0]));\\n\\n  gl_FragColor = COLORMAP_FUNC(clamp(scaledIntensityMean, 0.0, 1.0));\\n\\n  geometry.uv = vTexCoord;\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\";", "import clamp from 'lodash/clamp';\nimport range from 'lodash/range';\n\nimport {\n  AXIS_LABEL_TEXT_SIZE,\n  AXIS_MIN_SIZE,\n  AXIS_MAX_SIZE,\n} from '../../layers/heatmap-constants';\n\nexport function getGeneByCellTile(view, {\n  tileSize, tileI, tileJ, numCells, numGenes, cellOrdering, cells,\n}) {\n  const tileData = new Uint8Array(tileSize * tileSize);\n  let offset;\n  let value;\n  let cellI;\n  let geneI;\n  let sortedCellI;\n\n  const tileSizeRange = range(tileSize);\n\n  tileSizeRange.forEach((j) => {\n    // Need to iterate over cells in the outer loop.\n    cellI = (tileJ * tileSize) + j;\n    if (cellI < numCells) {\n      sortedCellI = cells.indexOf(cellOrdering[cellI]);\n      if (sortedCellI >= -1) {\n        tileSizeRange.forEach((i) => {\n          geneI = (tileI * tileSize) + i;\n          value = view[sortedCellI * numGenes + geneI];\n          offset = ((tileSize - i - 1) * tileSize + j);\n          tileData[offset] = value;\n        });\n      }\n    }\n  });\n  return tileData;\n}\n\nexport function getCellByGeneTile(view, {\n  tileSize, tileI, tileJ, numCells, numGenes, cellOrdering, cells,\n}) {\n  const tileData = new Uint8Array(tileSize * tileSize);\n  let offset;\n  let value;\n  let cellI;\n  let geneI;\n  let sortedCellI;\n\n  const tileSizeRange = range(tileSize);\n\n  tileSizeRange.forEach((i) => {\n    // Need to iterate over cells in the outer loop.\n    cellI = (tileI * tileSize) + i;\n    if (cellI < numCells) {\n      sortedCellI = cells.indexOf(cellOrdering[cellI]);\n      if (sortedCellI >= -1) {\n        tileSizeRange.forEach((j) => {\n          geneI = (tileJ * tileSize) + j;\n          if (geneI < numGenes) {\n            value = view[sortedCellI * numGenes + geneI];\n          } else {\n            value = 0;\n          }\n          offset = ((tileSize - i - 1) * tileSize + j);\n          tileData[offset] = value;\n        });\n      }\n    }\n  });\n\n  return tileData;\n}\n\n/**\n * Called before a layer is drawn to determine whether it should be rendered.\n * Reference: https://deck.gl/docs/api-reference/core/deck#layerfilter\n * @param {object} params A viewport, layer pair.\n * @param {object} params.layer The layer to check.\n * @param {object} params.viewport The viewport to check.\n * @returns {boolean} Should this layer be rendered in this viewport?\n */\nexport function layerFilter({ layer, viewport }) {\n  if (viewport.id === 'axisLeft') {\n    return layer.id.startsWith('axisLeft');\n  } if (viewport.id === 'axisTop') {\n    return layer.id.startsWith('axisTop');\n  } if (viewport.id === 'heatmap') {\n    return layer.id.startsWith('heatmap');\n  } if (viewport.id === 'colorsLeft') {\n    return layer.id.startsWith('colorsLeft');\n  } if (viewport.id === 'colorsTop') {\n    return layer.id.startsWith('colorsTop');\n  }\n  return false;\n}\n\n/**\n * Get the size of the left and top heatmap axes,\n * taking into account the maximum label string lengths.\n * @param {boolean} transpose Is the heatmap transposed?\n * @param {number} geneLabelMaxLength What is the maximum length gene label?\n * @param {number} cellLabelMaxLength What is the maximum length cell label?\n * @returns {number[]} [axisOffsetLeft, axisOffsetTop]\n */\nexport function getAxisSizes(transpose, geneLabelMaxLength, cellLabelMaxLength) {\n  const axisOffsetLeft = clamp(\n    (transpose ? geneLabelMaxLength : cellLabelMaxLength) * AXIS_LABEL_TEXT_SIZE,\n    AXIS_MIN_SIZE,\n    AXIS_MAX_SIZE,\n  );\n  const axisOffsetTop = clamp(\n    (transpose ? cellLabelMaxLength : geneLabelMaxLength) * AXIS_LABEL_TEXT_SIZE,\n    AXIS_MIN_SIZE,\n    AXIS_MAX_SIZE,\n  );\n  return [axisOffsetLeft, axisOffsetTop];\n}\n\n/**\n * Convert a mouse coordinate (x, y) to a heatmap coordinate (col index, row index).\n * @param {number} mouseX The mouse X of interest.\n * @param {number} mouseY The mouse Y of interest.\n * @param {object} param2 An object containing current sizes and scale factors.\n * @returns {number[]} [colI, rowI]\n */\nexport function mouseToHeatmapPosition(mouseX, mouseY, {\n  offsetLeft, offsetTop, targetX, targetY, scaleFactor, matrixWidth, matrixHeight, numRows, numCols,\n}) {\n  // TODO: use linear algebra\n  const viewMouseX = mouseX - offsetLeft;\n  const viewMouseY = mouseY - offsetTop;\n\n  if (viewMouseX < 0 || viewMouseY < 0) {\n    // The mouse is outside the heatmap.\n    return [null, null];\n  }\n\n  // Determine the rowI and colI values based on the current viewState.\n  const bboxTargetX = targetX * scaleFactor + matrixWidth * scaleFactor / 2;\n  const bboxTargetY = targetY * scaleFactor + matrixHeight * scaleFactor / 2;\n\n  const bboxLeft = bboxTargetX - matrixWidth / 2;\n  const bboxTop = bboxTargetY - matrixHeight / 2;\n\n  const zoomedOffsetLeft = bboxLeft / (matrixWidth * scaleFactor);\n  const zoomedOffsetTop = bboxTop / (matrixHeight * scaleFactor);\n\n  const zoomedViewMouseX = viewMouseX / (matrixWidth * scaleFactor);\n  const zoomedViewMouseY = viewMouseY / (matrixHeight * scaleFactor);\n\n  const zoomedMouseX = zoomedOffsetLeft + zoomedViewMouseX;\n  const zoomedMouseY = zoomedOffsetTop + zoomedViewMouseY;\n\n  const rowI = Math.floor(zoomedMouseY * numRows);\n  const colI = Math.floor(zoomedMouseX * numCols);\n  return [colI, rowI];\n}\n\n/**\n * Convert a heatmap coordinate (col index, row index) to a mouse coordinate (x, y).\n * @param {number} colI The column index of interest.\n * @param {number} rowI The row index of interest.\n * @param {object} param2 An object containing current sizes and scale factors.\n * @returns {number[]} [x, y]\n */\nexport function heatmapToMousePosition(colI, rowI, {\n  offsetLeft, offsetTop, targetX, targetY, scaleFactor, matrixWidth, matrixHeight, numRows, numCols,\n}) {\n  // TODO: use linear algebra\n  let zoomedMouseY = null;\n  let zoomedMouseX = null;\n\n  if (rowI !== null) {\n    const minY = -matrixHeight * scaleFactor / 2;\n    const maxY = matrixHeight * scaleFactor / 2;\n    const totalHeight = maxY - minY;\n\n    const minInViewY = (targetY * scaleFactor) - (matrixHeight / 2);\n    const maxInViewY = (targetY * scaleFactor) + (matrixHeight / 2);\n    const inViewHeight = maxInViewY - minInViewY;\n\n    const normalizedRowY = (rowI + 0.5) / numRows;\n    const globalRowY = minY + (normalizedRowY * totalHeight);\n\n    if (minInViewY <= globalRowY && globalRowY <= maxInViewY) {\n      zoomedMouseY = offsetTop + ((globalRowY - minInViewY) / inViewHeight) * matrixHeight;\n    }\n  }\n  if (colI !== null) {\n    const minX = -matrixWidth * scaleFactor / 2;\n    const maxX = matrixWidth * scaleFactor / 2;\n    const totalWidth = maxX - minX;\n\n    const minInViewX = (targetX * scaleFactor) - (matrixWidth / 2);\n    const maxInViewX = (targetX * scaleFactor) + (matrixWidth / 2);\n    const inViewWidth = maxInViewX - minInViewX;\n\n    const normalizedRowX = (colI + 0.5) / numCols;\n    const globalRowX = minX + (normalizedRowX * totalWidth);\n\n    if (minInViewX <= globalRowX && globalRowX <= maxInViewX) {\n      zoomedMouseX = offsetLeft + ((globalRowX - minInViewX) / inViewWidth) * matrixWidth;\n    }\n  }\n  return [zoomedMouseX, zoomedMouseY];\n}\n", "const encodedJs = \"\";\nconst blob = typeof window !== \"undefined\" && window.Blob && new Blob([atob(encodedJs)], { type: \"text/javascript;charset=utf-8\" });\nexport default function() {\n  const objURL = blob && (window.URL || window.webkitURL).createObjectURL(blob);\n  try {\n    return objURL ? new Worker(objURL) : new Worker(\"data:application/javascript;base64,\" + encodedJs, {type: \"module\"});\n  } finally {\n    objURL && (window.URL || window.webkitURL).revokeObjectURL(objURL);\n  }\n}", "// https://developer.mozilla.org/en-US/docs/Web/API/NavigatorConcurrentHardware/hardwareConcurrency\n// We need to give a different way of getting this for safari, so 4 is probably a safe bet\n// for parallel processing in the meantime.  More can't really hurt since they'll just block\n// each other and not the UI thread, which is the real benefit.\nconst defaultPoolSize = typeof navigator !== 'undefined' ? navigator.hardwareConcurrency || 4 : null;\n\n/**\n * Pool for workers to decode chunks of the images.\n * This is a line-for-line copy of GeoTIFFs old implementation: https://github.com/geotiffjs/geotiff.js/blob/v1.0.0-beta.6/src/pool.js\n */\nexport default class Pool {\n  /**\n   * @constructor\n   * @param {object} Worker The worker class to be used for processing.\n   */\n  constructor(Worker) {\n    this.workers = [];\n    this.idleWorkers = [];\n    this.waitQueue = [];\n    this.decoder = null;\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < defaultPoolSize; ++i) {\n      const w = new Worker();\n      this.workers.push(w);\n      this.idleWorkers.push(w);\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async process() {\n    throw new Error('Pool needs to implement \"process\" method');\n  }\n\n  async waitForWorker() {\n    const idleWorker = this.idleWorkers.pop();\n    if (idleWorker) {\n      return idleWorker;\n    }\n    const waiter = {};\n    const promise = new Promise((resolve) => {\n      waiter.resolve = resolve;\n    });\n\n    this.waitQueue.push(waiter);\n    return promise;\n  }\n\n  async finishTask(currentWorker) {\n    const waiter = this.waitQueue.pop();\n    if (waiter) {\n      waiter.resolve(currentWorker);\n    } else {\n      this.idleWorkers.push(currentWorker);\n    }\n  }\n\n  destroy() {\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < this.workers.length; ++i) {\n      this.workers[i].terminate();\n    }\n  }\n}\n", "import Worker from './heatmap.worker'; // eslint-disable-line import/no-unresolved\nimport Pool from '../../Pool';\n\n/**\n * Pool for workers to decode chunks of the images.\n * This is a line-for-line copy of GeoTIFFs old implementation: https://github.com/geotiffjs/geotiff.js/blob/v1.0.0-beta.6/src/pool.js\n */\nexport default class HeatmapPool extends Pool {\n  constructor() {\n    super(Worker);\n  }\n\n  /**\n   * Process each heatmap tile\n   * @param {object} params The arguments passed to the heatmap worker.\n   * @param {string} params.curr The current task uuid.\n   * @param {number} params.xTiles How many tiles required in the x direction?\n   * @param {number} params.yTiles How many tiles required in the y direction?\n   * @param {number} params.tileSize How many entries along each tile axis?\n   * @param {string[]} params.cellOrdering The current ordering of cells.\n   * @param {string[]} params.rows The name of each row (cell ID).\n   * Does not take transpose into account (always cells).\n   * @param {string[]} params.cols The name of each column (gene ID).\n   * Does not take transpose into account (always genes).\n   * @param {ArrayBuffer} params.data The array buffer.\n   * Need to transfer back to main thread when done.\n   * @param {boolean} params.transpose Is the heatmap transposed?\n   * @returns {array} [message, transfers]\n   * @returns {Promise.<ArrayBuffer>} the decoded result as a `Promise`\n   */\n  async process(args) {\n    const currentWorker = await this.waitForWorker();\n    return new Promise((resolve, reject) => {\n      currentWorker.onmessage = (event) => {\n        // this.workers.push(currentWorker);\n        this.finishTask(currentWorker);\n        resolve(event.data);\n      };\n      currentWorker.onerror = (error) => {\n        // this.workers.push(currentWorker);\n        this.finishTask(currentWorker);\n        reject(error);\n      };\n      currentWorker.postMessage(['getTile', args], [args.data]);\n    });\n  }\n}\n", "import React from 'react';\nimport Tooltip2D from '../tooltip/Tooltip2D';\nimport TooltipContent from '../tooltip/TooltipContent';\nimport { useComponentHover, useComponentViewInfo } from '../../app/state/hooks';\n\nexport default function HeatmapTooltipSubscriber(props) {\n  const {\n    parentUuid,\n    width, height, transpose,\n    getCellInfo, getGeneInfo,\n    cellHighlight, geneHighlight,\n  } = props;\n\n  const sourceUuid = useComponentHover();\n  const viewInfo = useComponentViewInfo(parentUuid);\n\n  const [cellInfo, cellCoord] = (cellHighlight && getCellInfo ? (\n    [\n      getCellInfo(cellHighlight),\n      (viewInfo && viewInfo.project\n        ? viewInfo.project(cellHighlight, null)[(transpose ? 0 : 1)]\n        : null),\n    ]\n  ) : ([null, null]));\n\n  const [geneInfo, geneCoord] = (geneHighlight && getGeneInfo ? (\n    [\n      getGeneInfo(geneHighlight),\n      (viewInfo && viewInfo.project\n        ? viewInfo.project(null, geneHighlight)[(transpose ? 1 : 0)]\n        : null),\n    ]\n  ) : ([null, null]));\n\n  const x = (transpose ? cellCoord : geneCoord);\n  const y = (transpose ? geneCoord : cellCoord);\n\n  return (\n    (cellInfo || geneInfo ? (\n      <Tooltip2D\n        x={x}\n        y={y}\n        parentUuid={parentUuid}\n        parentWidth={width}\n        parentHeight={height}\n        sourceUuid={sourceUuid}\n      >\n        <TooltipContent info={{ ...geneInfo, ...cellInfo }} />\n      </Tooltip2D>\n    ) : null)\n  );\n}\n", "import React from 'react';\nimport Tooltip from './Tooltip';\n\n/**\n * A tooltip component that also incorporates a crosshair element.\n * @param {object} props\n * @param {string} props.parentUuid A unique identifier corresponding to the plot\n * with which this scatterplot is associated.\n * @param {string} props.sourceUuid A unique identifier corresponding to the plot\n * from which this tooltip originated.\n * @param {number} props.x The x coordinate for the tooltip.\n * @param {number} props.y The y coordinate for the tooltip.\n * @param {number} props.parentWidth The width of the parent plot container element.\n * @param {number} props.parentHeight The height of the parent plot container element.\n * @param {React.Component} props.children The tooltip contents as a react component.\n */\nexport default function Tooltip2D(props) {\n  const {\n    parentUuid,\n    sourceUuid,\n    x,\n    y,\n    parentWidth,\n    parentHeight,\n    children,\n  } = props;\n  // Check if out of bounds.\n  if (x < 0 || x > parentWidth || y < 0 || y > parentHeight) {\n    return null;\n  }\n  // Show tooltip or crosshair?\n  const isTooltipVisible = (parentUuid === sourceUuid);\n  const crosshairWidth = 1;\n  return (\n    <>\n      {isTooltipVisible ? (\n        <Tooltip\n          x={x}\n          y={y}\n          parentWidth={parentWidth}\n          parentHeight={parentHeight}\n        >\n          {children}\n        </Tooltip>\n      ) : (\n        <>\n          {x !== null ? (\n            <div\n              className=\"cell-emphasis-crosshair\"\n              style={{\n                left: `${x - crosshairWidth / 2}px`,\n                top: 0,\n                width: `${crosshairWidth}px`,\n                height: `${parentHeight}px`,\n              }}\n            />\n          ) : null}\n          {y !== null ? (\n            <div\n              className=\"cell-emphasis-crosshair\"\n              style={{\n                left: 0,\n                top: `${y - crosshairWidth / 2}px`,\n                width: `${parentWidth}px`,\n                height: `${crosshairWidth}px`,\n              }}\n            />\n          ) : null}\n        </>\n      )}\n    </>\n  );\n}\n", "import React, { useEffect, useRef, useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport { useVitessceContainer } from '../hooks';\nimport { styles } from './styles';\n\nexport default function Tooltip(props) {\n  const {\n    x,\n    y,\n    parentWidth,\n    parentHeight,\n    children,\n  } = props;\n  const ref = useRef();\n  const classes = styles();\n  const [placementX, setPlacementX] = useState('start');\n  const [placementY, setPlacementY] = useState('bottom');\n\n  const getTooltipContainer = useVitessceContainer(ref);\n\n  // Do collision detection based on the bounds of the tooltip ancestor element.\n  useEffect(() => {\n    if (ref && ref.current) {\n      const flipX = (x > parentWidth / 2);\n      const flipY = (y > parentHeight / 2);\n      setPlacementX(flipX ? 'end' : 'start');\n      setPlacementY(flipY ? 'top' : 'bottom');\n      ref.current.style.left = `${x + (flipX ? -20 : 5)}px`;\n      ref.current.style.top = `${y + (flipY ? -20 : 5)}px`;\n    }\n  }, [x, y, parentWidth, parentHeight]);\n\n  return (\n    <div\n      ref={ref}\n      className={classes.tooltipAnchor}\n    >\n      {ref && ref.current ? (\n        <Popper\n          open\n          anchorEl={ref.current}\n          container={getTooltipContainer}\n          transition\n          placement={`${placementY}-${placementX}`}\n        >\n          <Paper elevation={4} className={classes.tooltipContent}>\n            {children}\n          </Paper>\n        </Popper>\n      ) : null}\n    </div>\n  );\n}\n", "import { makeStyles } from '@material-ui/core/styles';\n\nexport const styles = makeStyles(() => ({\n  tooltipAnchor: {\n    position: 'relative',\n    width: '0px',\n    height: '0px',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n  tooltipContent: {\n    opacity: 0.9,\n    padding: '5px',\n    pointerEvents: 'none',\n    '& table > tbody > tr > th, & table > tbody > tr > td': {\n      fontSize: '80%',\n      opacity: 0.8,\n      outline: 0,\n      padding: '0 2px',\n    },\n    '& table': {\n      borderCollapse: 'collapse',\n    },\n  },\n}));\n", "import React from 'react';\n\nexport default function TooltipContent(props) {\n  const {\n    info,\n  } = props;\n\n  return (\n    <table>\n      <tbody>\n        {Object.entries(info).map(([key, value]) => (\n          <tr key={key}>\n            <th>{key}</th>\n            <td>{value}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n", "import React, { useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport Slider from '@material-ui/core/Slider';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport OptionSelect from '../shared-plot-options/OptionSelect';\nimport { GLSL_COLORMAPS } from '../../layers/constants';\n\nexport default function HeatmapOptions(props) {\n  const {\n    geneExpressionColormap,\n    setGeneExpressionColormap,\n    geneExpressionColormapRange,\n    setGeneExpressionColormapRange,\n  } = props;\n\n  const classes = useStyles();\n\n  function handleGeneExpressionColormapChange(event) {\n    setGeneExpressionColormap(event.target.value);\n  }\n\n  function handleColormapRangeChange(event, value) {\n    setGeneExpressionColormapRange(value);\n  }\n  const handleColormapRangeChangeDebounced = useCallback(\n    debounce(handleColormapRangeChange, 5, { trailing: true }),\n    [handleColormapRangeChange],\n  );\n\n  return (\n    <OptionsContainer>\n      <TableRow>\n        <TableCell className={classes.labelCell} htmlFor=\"gene-expression-colormap-select\">\n          Gene Expression Colormap\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <OptionSelect\n            className={classes.select}\n            value={geneExpressionColormap}\n            onChange={handleGeneExpressionColormapChange}\n            inputProps={{\n              id: 'gene-expression-colormap-select',\n            }}\n          >\n            {GLSL_COLORMAPS.map(cmap => (\n              <option key={cmap} value={cmap}>{cmap}</option>\n            ))}\n          </OptionSelect>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          Gene Expression Colormap Range\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={geneExpressionColormapRange}\n            onChange={handleColormapRangeChangeDebounced}\n            aria-labelledby=\"gene-expression-colormap-range-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.005}\n            min={0.0}\n            max={1.0}\n          />\n        </TableCell>\n      </TableRow>\n    </OptionsContainer>\n  );\n}\n", "import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  box: {\n    boxSizing: 'border-box',\n  },\n  checkbox: {\n    padding: '3px',\n    color: theme.palette.primaryForeground,\n    '&:checked': {\n      color: theme.palette.primaryForeground,\n    },\n    '& input': {\n      height: '100%',\n    },\n  },\n  slider: {\n    color: theme.palette.primaryForeground,\n    minWidth: '60px',\n    padding: '10px 0 10px 0',\n  },\n  sliderValueLabel: {\n    '& span': {\n      '& span': {\n        color: theme.palette.primaryBackground,\n      },\n    },\n  },\n  tableContainer: {\n    overflow: 'hidden',\n    overflowX: 'hidden !important',\n  },\n  labelCell: {\n    padding: '2px 8px 2px 16px',\n  },\n  inputCell: {\n    padding: '2px 16px 2px 8px',\n    overflow: 'visible',\n  },\n  select: {\n    '& select': {\n      fontSize: '.875rem',\n    },\n  },\n  selectRoot: {\n    padding: 0,\n    height: 'auto',\n  },\n}));\n", "import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport { useStyles } from './styles';\n\nexport default function OptionsContainer(props) {\n  const {\n    children,\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.box}>\n      <TableContainer className={classes.tableContainer}>\n        <Table className={classes.table} size=\"small\">\n          <TableBody>\n            {children}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n", "import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport { useStyles } from './styles';\n\nexport default function OptionSelect(props) {\n  const { classes: classesProp = {} } = props;\n  const classes = useStyles();\n  return (\n    <Select\n      native\n      disableUnderline\n      {...props}\n      classes={{\n        root: classes.selectRoot,\n        ...classesProp,\n      }}\n    />\n  );\n}\n", "import React, { useEffect, useMemo, useCallback } from 'react';\nimport TitleInfo from '../TitleInfo';\nimport { capitalize } from '../../utils';\nimport {\n  useDeckCanvasSize, useReady, useUrls, useExpressionValueGetter,\n} from '../hooks';\nimport { setCellSelection, mergeCellSets, canLoadResolution } from '../utils';\nimport {\n  useCellsData,\n  useCellSetsData,\n  useGeneSelection,\n  useMoleculesData,\n  useNeighborhoodsData,\n  useRasterData,\n  useExpressionAttrs,\n} from '../data-hooks';\nimport { getCellColors } from '../interpolate-colors';\nimport Spatial from './Spatial';\nimport SpatialOptions from './SpatialOptions';\nimport SpatialTooltipSubscriber from './SpatialTooltipSubscriber';\nimport { makeSpatialSubtitle, getInitialSpatialTargets } from './utils';\nimport {\n  useCoordination,\n  useLoaders,\n  useSetComponentHover,\n  useSetComponentViewInfo,\n  useAuxiliaryCoordination,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\n\nconst SPATIAL_DATA_TYPES = [\n  'cells', 'molecules', 'raster', 'cell-sets', 'expression-matrix',\n];\n\n/**\n * A subscriber component for the spatial plot.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n */\nexport default function SpatialSubscriber(props) {\n  const {\n    uuid,\n    coordinationScopes,\n    removeGridComponent,\n    observationsLabelOverride: observationsLabel = 'cell',\n    observationsPluralLabelOverride: observationsPluralLabel = `${observationsLabel}s`,\n    subobservationsLabelOverride: subobservationsLabel = 'molecule',\n    subobservationsPluralLabelOverride: subobservationsPluralLabel = `${subobservationsLabel}s`,\n    theme,\n    disableTooltip = false,\n    title = 'Spatial',\n    disable3d,\n    globalDisable3d,\n  } = props;\n\n  const loaders = useLoaders();\n  const setComponentHover = useSetComponentHover();\n  const setComponentViewInfo = useSetComponentViewInfo(uuid);\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    spatialZoom: zoom,\n    spatialTargetX: targetX,\n    spatialTargetY: targetY,\n    spatialTargetZ: targetZ,\n    spatialRotationX: rotationX,\n    spatialRotationY: rotationY,\n    spatialRotationZ: rotationZ,\n    spatialRotationOrbit: rotationOrbit,\n    spatialOrbitAxis: orbitAxis,\n    spatialRasterLayers: rasterLayers,\n    spatialCellsLayer: cellsLayer,\n    spatialMoleculesLayer: moleculesLayer,\n    spatialNeighborhoodsLayer: neighborhoodsLayer,\n    cellFilter,\n    cellHighlight,\n    geneSelection,\n    cellSetSelection,\n    cellSetColor,\n    cellColorEncoding,\n    additionalCellSets,\n    spatialAxisFixed,\n    geneExpressionColormap,\n    geneExpressionColormapRange,\n  }, {\n    setSpatialZoom: setZoom,\n    setSpatialTargetX: setTargetX,\n    setSpatialTargetY: setTargetY,\n    setSpatialTargetZ: setTargetZ,\n    setSpatialRotationX: setRotationX,\n    setSpatialRotationOrbit: setRotationOrbit,\n    setSpatialOrbitAxis: setOrbitAxis,\n    setSpatialRasterLayers: setRasterLayers,\n    setSpatialCellsLayer: setCellsLayer,\n    setSpatialMoleculesLayer: setMoleculesLayer,\n    setSpatialNeighborhoodsLayer: setNeighborhoodsLayer,\n    setCellFilter,\n    setCellSetSelection,\n    setCellHighlight,\n    setCellSetColor,\n    setCellColorEncoding,\n    setAdditionalCellSets,\n    setMoleculeHighlight,\n    setSpatialAxisFixed,\n    setGeneExpressionColormap,\n    setGeneExpressionColormapRange,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.spatial, coordinationScopes);\n\n  const [\n    {\n      rasterLayersCallbacks,\n    },\n  ] = useAuxiliaryCoordination(\n    COMPONENT_COORDINATION_TYPES.layerController,\n    coordinationScopes,\n  );\n\n  const use3d = rasterLayers?.some(l => l.use3d);\n\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [\n    isReady,\n    setItemIsReady,\n    setItemIsNotReady,\n    resetReadyItems,\n  ] = useReady(\n    SPATIAL_DATA_TYPES,\n  );\n  const [width, height, deckRef] = useDeckCanvasSize();\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  // Also clear the array of automatically-initialized layers.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [cells, cellsCount] = useCellsData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setSpatialCellsLayer: setCellsLayer },\n    { spatialCellsLayer: cellsLayer },\n  );\n  const [molecules, moleculesCount, locationsCount] = useMoleculesData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setSpatialMoleculesLayer: setMoleculesLayer },\n    { spatialMoleculesLayer: moleculesLayer },\n  );\n  const [neighborhoods] = useNeighborhoodsData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setSpatialNeighborhoodsLayer: setNeighborhoodsLayer },\n    { spatialNeighborhoodsLayer: neighborhoodsLayer },\n  );\n  const [cellSets] = useCellSetsData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setCellSetSelection, setCellSetColor },\n    { cellSetSelection, cellSetColor },\n  );\n  const [expressionData] = useGeneSelection(\n    loaders, dataset, setItemIsReady, false, geneSelection, setItemIsNotReady,\n  );\n  const [attrs] = useExpressionAttrs(\n    loaders, dataset, setItemIsReady, addUrl, false,\n  );\n  // eslint-disable-next-line no-unused-vars\n  const [raster, imageLayerLoaders, imageLayerMeta] = useRasterData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setSpatialRasterLayers: setRasterLayers },\n    { spatialRasterLayers: rasterLayers },\n  );\n\n  const layers = useMemo(() => {\n    // Only want to pass in cells layer once if there is not `bitmask`.\n    // We pass in the cells data regardless because it is needed for selection,\n    // but the rendering layer itself is not needed.\n    const canPassInCellsLayer = !imageLayerMeta.some(l => l?.metadata?.isBitmask);\n    return [\n      ...(moleculesLayer ? [{ ...moleculesLayer, type: 'molecules' }] : []),\n      ...((cellsLayer && canPassInCellsLayer) ? [{ ...cellsLayer, type: 'cells' }] : []),\n      ...(neighborhoodsLayer ? [{ ...neighborhoodsLayer, type: 'neighborhoods' }] : []),\n      ...(rasterLayers ? rasterLayers.map(l => ({ ...l, type: (l.type && ['raster', 'bitmask'].includes(l.type) ? l.type : 'raster') })) : []),\n    ];\n  }, [cellsLayer, moleculesLayer, neighborhoodsLayer, rasterLayers, imageLayerMeta]);\n\n  useEffect(() => {\n    if ((typeof targetX !== 'number' || typeof targetY !== 'number')) {\n      const {\n        initialTargetX, initialTargetY, initialTargetZ, initialZoom,\n      } = getInitialSpatialTargets({\n        width,\n        height,\n        cells,\n        imageLayerLoaders,\n        useRaster: Boolean(loaders[dataset].loaders.raster),\n        use3d,\n      });\n      setTargetX(initialTargetX);\n      setTargetY(initialTargetY);\n      setTargetZ(initialTargetZ);\n      setZoom(initialZoom);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imageLayerLoaders, cells, targetX, targetY, setTargetX, setTargetY, setZoom, use3d]);\n\n  const mergedCellSets = useMemo(() => mergeCellSets(\n    cellSets, additionalCellSets,\n  ), [cellSets, additionalCellSets]);\n\n  const setCellSelectionProp = useCallback((v) => {\n    setCellSelection(\n      v, additionalCellSets, cellSetColor,\n      setCellSetSelection, setAdditionalCellSets, setCellSetColor,\n      setCellColorEncoding,\n    );\n  }, [additionalCellSets, cellSetColor, setCellColorEncoding,\n    setAdditionalCellSets, setCellSetColor, setCellSetSelection]);\n\n  const cellColors = useMemo(() => getCellColors({\n    cellColorEncoding,\n    expressionData: expressionData && expressionData[0],\n    geneSelection,\n    cellSets: mergedCellSets,\n    cellSetSelection,\n    cellSetColor,\n    expressionDataAttrs: attrs,\n    theme,\n  }), [cellColorEncoding, geneSelection, mergedCellSets, theme,\n    cellSetColor, cellSetSelection, expressionData, attrs]);\n\n  // The bitmask layer needs access to a array (i.e a texture) lookup of cell -> expression value\n  // where each cell id indexes into the array.\n  // Cell ids in `attrs.rows` do not necessaryily correspond to indices in that array, though,\n  // so we create a \"shifted\" array where this is the case.\n  const shiftedExpressionDataForBitmask = useMemo(() => {\n    const hasBitmask = imageLayerMeta.some(l => l?.metadata?.isBitmask);\n    if (attrs?.rows && expressionData && hasBitmask) {\n      const maxId = attrs.rows.reduce((max, curr) => Math.max(max, Number(curr)));\n      const result = new Uint8Array(maxId + 1);\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i < attrs.rows.length; i++) {\n        const id = attrs.rows[i];\n        result.set(expressionData[0].slice(i, i + 1), Number(id));\n      }\n      return [result];\n    } return [new Uint8Array()];\n  }, [attrs, expressionData, imageLayerMeta]);\n\n  const cellSelection = useMemo(() => Array.from(cellColors.keys()), [cellColors]);\n\n  const getCellInfo = (cellId) => {\n    const cell = cells[cellId];\n    if (cell) {\n      return {\n        [`${capitalize(observationsLabel)} ID`]: cellId,\n        ...cell.factors,\n      };\n    }\n    return null;\n  };\n\n  const setViewState = ({\n    zoom: newZoom,\n    target,\n    rotationX: newRotationX,\n    rotationOrbit: newRotationOrbit,\n    orbitAxis: newOrbitAxis,\n  }) => {\n    setZoom(newZoom);\n    setTargetX(target[0]);\n    setTargetY(target[1]);\n    setTargetZ(target[2] || null);\n    setRotationX(newRotationX);\n    setRotationOrbit(newRotationOrbit);\n    setOrbitAxis(newOrbitAxis || null);\n  };\n\n  const subtitle = makeSpatialSubtitle({\n    observationsCount: cellsCount,\n    observationsLabel,\n    observationsPluralLabel,\n    subobservationsCount: moleculesCount,\n    subobservationsLabel,\n    subobservationsPluralLabel,\n    locationsCount,\n  });\n\n  // Set up a getter function for gene expression values, to be used\n  // by the DeckGL layer to obtain values for instanced attributes.\n  const getExpressionValue = useExpressionValueGetter({ attrs, expressionData });\n  const hasExpressionData = loaders[dataset].loaders['expression-matrix'];\n  const hasCellsData = loaders[dataset].loaders.cells\n    || imageLayerMeta.some(l => l?.metadata?.isBitmask);\n  const canLoad3DLayers = imageLayerLoaders.some(loader => Boolean(\n    Array.from({\n      length: loader.data.length,\n    }).filter((_, res) => canLoadResolution(loader.data, res)).length,\n  ));\n  // Only show 3D options if we can theoretically load the data and it is allowed to be loaded.\n  const canShow3DOptions = canLoad3DLayers\n    && !(disable3d?.length === imageLayerLoaders.length) && !globalDisable3d;\n\n  return (\n    <TitleInfo\n      title={title}\n      info={subtitle}\n      isSpatial\n      urls={urls}\n      theme={theme}\n      removeGridComponent={removeGridComponent}\n      isReady={isReady}\n      options={\n        // Only show button if there is expression or 3D data because only cells data\n        // does not have any options (i.e for color encoding, you need to switch to expression data)\n        canShow3DOptions || hasExpressionData ? (\n          <SpatialOptions\n            observationsLabel={observationsLabel}\n            cellColorEncoding={cellColorEncoding}\n            setCellColorEncoding={setCellColorEncoding}\n            setSpatialAxisFixed={setSpatialAxisFixed}\n            spatialAxisFixed={spatialAxisFixed}\n            use3d={use3d}\n            geneExpressionColormap={geneExpressionColormap}\n            setGeneExpressionColormap={setGeneExpressionColormap}\n            geneExpressionColormapRange={geneExpressionColormapRange}\n            setGeneExpressionColormapRange={setGeneExpressionColormapRange}\n            canShowExpressionOptions={hasExpressionData}\n            canShowColorEncodingOption={hasCellsData && hasExpressionData}\n            canShow3DOptions={canShow3DOptions}\n          />\n        ) : null\n      }\n    >\n      <Spatial\n        ref={deckRef}\n        uuid={uuid}\n        width={width}\n        height={height}\n        viewState={{\n          zoom,\n          target: [targetX, targetY, targetZ],\n          rotationX,\n          rotationY,\n          rotationZ,\n          rotationOrbit,\n          orbitAxis,\n        }}\n        setViewState={setViewState}\n        layers={layers}\n        cells={cells}\n        cellFilter={cellFilter}\n        cellSelection={cellSelection}\n        cellHighlight={cellHighlight}\n        cellColors={cellColors}\n        molecules={molecules}\n        neighborhoods={neighborhoods}\n        imageLayerLoaders={imageLayerLoaders}\n        setCellFilter={setCellFilter}\n        setCellSelection={setCellSelectionProp}\n        setCellHighlight={setCellHighlight}\n        setMoleculeHighlight={setMoleculeHighlight}\n        setComponentHover={() => {\n          setComponentHover(uuid);\n        }}\n        updateViewInfo={setComponentViewInfo}\n        rasterLayersCallbacks={rasterLayersCallbacks}\n        spatialAxisFixed={spatialAxisFixed}\n        geneExpressionColormap={geneExpressionColormap}\n        geneExpressionColormapRange={geneExpressionColormapRange}\n        expressionData={shiftedExpressionDataForBitmask}\n        cellColorEncoding={cellColorEncoding}\n        getExpressionValue={getExpressionValue}\n        theme={theme}\n      />\n      {!disableTooltip && (\n        <SpatialTooltipSubscriber\n          parentUuid={uuid}\n          cellHighlight={cellHighlight}\n          width={width}\n          height={height}\n          getCellInfo={getCellInfo}\n        />\n      )}\n    </TitleInfo>\n  );\n}\n", "import React, { forwardRef } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { COORDINATE_SYSTEM } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport { PolygonLayer, ScatterplotLayer } from '@deck.gl/layers'; // eslint-disable-line import/no-extraneous-dependencies\nimport { Matrix4 } from 'math.gl';\nimport { ScaleBarLayer, MultiscaleImageLayer } from '@hms-dbmi/viv';\nimport { getSelectionLayers } from '../../layers';\nimport { cellLayerDefaultProps, PALETTE, getDefaultColor } from '../utils';\nimport { getSourceFromLoader } from '../../utils';\nimport { square, getLayerLoaderTuple, renderSubBitmaskLayers } from './utils';\nimport AbstractSpatialOrScatterplot from '../shared-spatial-scatterplot/AbstractSpatialOrScatterplot';\nimport { createCellsQuadTree } from '../shared-spatial-scatterplot/quadtree';\nimport { ScaledExpressionExtension } from '../../layer-extensions';\n\nconst CELLS_LAYER_ID = 'cells-layer';\nconst MOLECULES_LAYER_ID = 'molecules-layer';\nconst NEIGHBORHOODS_LAYER_ID = 'neighborhoods-layer';\n\n// Default getter function props.\nconst defaultGetCellCoords = cell => cell.xy;\nconst makeDefaultGetCellPolygon = radius => (cellEntry) => {\n  const cell = cellEntry[1];\n  return cell.poly?.length ? cell.poly : square(cell.xy[0], cell.xy[1], radius);\n};\nconst makeDefaultGetCellColors = (cellColors, theme) => (cellEntry) => {\n  const [r, g, b, a] = (cellColors && cellColors.get(cellEntry[0])) || getDefaultColor(theme);\n  return [r, g, b, 255 * (a || 1)];\n};\nconst makeDefaultGetCellIsSelected = (cellSelection) => {\n  if (cellSelection) {\n    // For performance, convert the Array to a Set instance.\n    // Set.has() is faster than Array.includes().\n    const cellSelectionSet = new Set(cellSelection);\n    return cellEntry => (cellSelectionSet.has(cellEntry[0]) ? 1.0 : 0.0);\n  }\n  return () => 0.0;\n};\n\n/**\n * React component which expresses the spatial relationships between cells and molecules.\n * @param {object} props\n * @param {string} props.uuid A unique identifier for this component,\n * used to determine when to show tooltips vs. crosshairs.\n * @param {number} props.height Height of the DeckGL canvas, used when\n * rendering the scale bar layer.\n * @param {number} props.width Width of the DeckGL canvas, used when\n * rendering the scale bar layer.\n * @param {object} props.viewState The DeckGL viewState object.\n * @param {function} props.setViewState A handler for updating the DeckGL\n * viewState object.\n * @param {object} props.molecules Molecules data.\n * @param {object} props.cells Cells data.\n * @param {object} props.neighborhoods Neighborhoods data.\n * @param {number} props.lineWidthScale Width of cell border in view space (deck.gl).\n * @param {number} props.lineWidthMaxPixels Max width of the cell border in pixels (deck.gl).\n * @param {object} props.imageLayerLoaders An object mapping raster layer index to Viv loader\n * instances.\n * @param {object} props.cellColors Map from cell IDs to colors [r, g, b].\n * @param {function} props.getCellCoords Getter function for cell coordinates\n * (used by the selection layer).\n * @param {function} props.getCellColor Getter function for cell color as [r, g, b] array.\n * @param {function} props.getCellPolygon Getter function for cell polygons.\n * @param {function} props.getCellIsSelected Getter function for cell layer isSelected.\n * @param {function} props.getMoleculeColor\n * @param {function} props.getMoleculePosition\n * @param {function} props.getNeighborhoodPolygon\n * @param {function} props.updateViewInfo Handler for DeckGL viewport updates,\n * used when rendering tooltips and crosshairs.\n * @param {function} props.onCellClick Getter function for cell layer onClick.\n * @param {string} props.theme \"light\" or \"dark\" for the vitessce theme\n */\nclass Spatial extends AbstractSpatialOrScatterplot {\n  constructor(props) {\n    super(props);\n\n    // To avoid storing large arrays/objects\n    // in React state, this component\n    // uses instance variables.\n    // All instance variables used in this class:\n    this.cellsEntries = [];\n    this.moleculesEntries = [];\n    this.cellsQuadTree = null;\n    this.cellsLayer = null;\n    this.moleculesLayer = null;\n    this.neighborhoodsLayer = null;\n    this.imageLayers = [];\n    this.layerLoaderSelections = {};\n    // Better for the bitmask layer when there is no color data to use this.\n    // 2048 is best for performance and for stability (4096 texture size is not always supported).\n    this.randomColorData = {\n      data: new Uint8Array(2048 * 2048 * 3)\n        .map((_, j) => (j < 4 ? 0 : Math.round(255 * Math.random()))),\n      // This buffer should be able to hold colors for 2048 x 2048 ~ 4 million cells.\n      height: 2048,\n      width: 2048,\n    };\n    this.color = { ...this.randomColorData };\n    this.expression = {\n      data: new Uint8Array(2048 * 2048),\n      // This buffer should be able to hold colors for 2048 x 2048 ~ 4 million cells.\n      height: 2048,\n      width: 2048,\n    };\n\n    // Initialize data and layers.\n    this.onUpdateCellsData();\n    this.onUpdateCellsLayer();\n    this.onUpdateMoleculesData();\n    this.onUpdateMoleculesLayer();\n    this.onUpdateNeighborhoodsData();\n    this.onUpdateNeighborhoodsLayer();\n    this.onUpdateImages();\n  }\n\n  createCellsLayer(layerDef) {\n    const {\n      radius, stroked, visible, opacity,\n    } = layerDef;\n    const { cellsEntries } = this;\n    const {\n      theme,\n      cellFilter,\n      cellSelection,\n      setCellHighlight,\n      setComponentHover,\n      getCellIsSelected = makeDefaultGetCellIsSelected(\n        cellsEntries.length === cellSelection.length ? null : cellSelection,\n      ),\n      cellColors,\n      getCellColor = makeDefaultGetCellColors(cellColors, theme),\n      getCellPolygon = makeDefaultGetCellPolygon(radius),\n      onCellClick,\n      lineWidthScale = 10,\n      lineWidthMaxPixels = 2,\n      geneExpressionColormapRange,\n      cellColorEncoding,\n      getExpressionValue,\n      geneExpressionColormap,\n    } = this.props;\n    const filteredCellsEntries = cellFilter\n      ? cellsEntries.filter(cellEntry => cellFilter.includes(cellEntry[0]))\n      : cellsEntries;\n\n    // Graphics rendering has the y-axis positive going south,\n    // so we need to flip it for rendering tooltips.\n    const flipYTooltip = true;\n\n    return new PolygonLayer({\n      id: CELLS_LAYER_ID,\n      backgroundColor: [0, 0, 0],\n      isSelected: getCellIsSelected,\n      getPolygon: getCellPolygon,\n      updateTriggers: {\n        getLineWidth: [stroked],\n        isSelected: cellSelection,\n        getExpressionValue,\n        getFillColor: [opacity, cellColorEncoding, cellSelection, cellColors],\n        getLineColor: [cellColorEncoding, cellSelection, cellColors],\n      },\n      getFillColor: (cellEntry) => {\n        const color = getCellColor(cellEntry);\n        color[3] = opacity * 255;\n        return color;\n      },\n      getLineColor: (cellEntry) => {\n        const color = getCellColor(cellEntry);\n        color[3] = 255;\n        return color;\n      },\n      onClick: (info) => {\n        if (onCellClick) {\n          onCellClick(info);\n        }\n      },\n      visible,\n      getLineWidth: stroked ? 1 : 0,\n      lineWidthScale,\n      lineWidthMaxPixels,\n      getExpressionValue,\n      extensions: [new ScaledExpressionExtension()],\n      colorScaleLo: geneExpressionColormapRange[0],\n      colorScaleHi: geneExpressionColormapRange[1],\n      isExpressionMode: cellColorEncoding === 'geneSelection',\n      colormap: geneExpressionColormap,\n      ...cellLayerDefaultProps(\n        filteredCellsEntries,\n        undefined,\n        setCellHighlight,\n        setComponentHover,\n        flipYTooltip,\n      ),\n    });\n  }\n\n  createMoleculesLayer(layerDef) {\n    const {\n      setMoleculeHighlight,\n      getMoleculeColor = d => PALETTE[d[2] % PALETTE.length],\n      getMoleculePosition = d => [d[0], d[1], 0],\n    } = this.props;\n    const { moleculesEntries } = this;\n\n    return new ScatterplotLayer({\n      id: MOLECULES_LAYER_ID,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      data: moleculesEntries,\n      pickable: true,\n      autoHighlight: true,\n      radiusMaxPixels: 3,\n      opacity: layerDef.opacity,\n      visible: layerDef.visible,\n      getRadius: layerDef.radius,\n      getPosition: getMoleculePosition,\n      getLineColor: getMoleculeColor,\n      getFillColor: getMoleculeColor,\n      onHover: (info) => {\n        if (setMoleculeHighlight) {\n          if (info.object) {\n            setMoleculeHighlight(info.object[3]);\n          } else {\n            setMoleculeHighlight(null);\n          }\n        }\n      },\n    });\n  }\n\n  createNeighborhoodsLayer(layerDef) {\n    const {\n      getNeighborhoodPolygon = (neighborhoodsEntry) => {\n        const neighborhood = neighborhoodsEntry[1];\n        return neighborhood.poly;\n      },\n    } = this.props;\n    const { neighborhoodsEntries } = this;\n\n    return new PolygonLayer({\n      id: NEIGHBORHOODS_LAYER_ID,\n      getPolygon: getNeighborhoodPolygon,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      data: neighborhoodsEntries,\n      pickable: true,\n      autoHighlight: true,\n      stroked: true,\n      filled: false,\n      getElevation: 0,\n      getLineWidth: 10,\n      visible: layerDef.visible,\n    });\n  }\n\n  createSelectionLayers() {\n    const {\n      viewState,\n      getCellCoords = defaultGetCellCoords,\n      setCellSelection,\n    } = this.props;\n    const { tool } = this.state;\n    const { cellsQuadTree } = this;\n    return getSelectionLayers(\n      tool,\n      viewState.zoom,\n      CELLS_LAYER_ID,\n      getCellCoords,\n      setCellSelection,\n      cellsQuadTree,\n    );\n  }\n\n  createScaleBarLayer() {\n    const {\n      viewState,\n      width,\n      height,\n      imageLayerLoaders = {},\n      layers,\n    } = this.props;\n    const use3d = (layers || []).some(i => i.use3d);\n    // Just get the first layer/loader since they should all be spatially\n    // resolved and therefore have the same unit size scale.\n    const loaders = Object.values(imageLayerLoaders);\n    if (!viewState || !width || !height || loaders.length < 1) return null;\n    const loader = loaders[0];\n    if (!loader) return null;\n    const source = getSourceFromLoader(loader);\n    if (!source.meta) return null;\n    const { physicalSizes } = source.meta;\n    if (physicalSizes && !use3d) {\n      const { x } = physicalSizes;\n      const { unit, size } = x;\n      if (unit && size) {\n        return new ScaleBarLayer({\n          id: 'scalebar-layer',\n          unit,\n          size,\n          viewState: { ...viewState, width, height },\n        });\n      }\n      return null;\n    }\n    return null;\n  }\n\n  createImageLayer(rawLayerDef, loader, i) {\n    const layerDef = {\n      ...rawLayerDef,\n      channels: rawLayerDef.channels.filter(\n        channel => channel.selection && channel.color && channel.slider,\n      ),\n    };\n\n    // We need to keep the same selections array reference,\n    // otherwise the Viv layer will not be re-used as we want it to,\n    // since selections is one of its `updateTriggers`.\n    // Reference: https://github.com/hms-dbmi/viv/blob/ad86d0f/src/layers/MultiscaleImageLayer/MultiscaleImageLayer.js#L127\n    let selections;\n    const nextLoaderSelection = layerDef.channels.map(c => c.selection);\n    const prevLoaderSelection = this.layerLoaderSelections[layerDef.index];\n    if (isEqual(prevLoaderSelection, nextLoaderSelection)) {\n      selections = prevLoaderSelection;\n    } else {\n      selections = nextLoaderSelection;\n      this.layerLoaderSelections[layerDef.index] = nextLoaderSelection;\n    }\n    const layerProps = {\n      colormap: layerDef.colormap,\n      opacity: layerDef.opacity,\n      transparentColor: layerDef.transparentColor,\n      colors: layerDef.channels.map(c => c.color),\n      sliders: layerDef.channels.map(c => c.slider),\n      resolution: layerDef.resolution,\n      renderingMode: layerDef.renderingMode,\n      xSlice: layerDef.xSlice,\n      ySlice: layerDef.ySlice,\n      zSlice: layerDef.zSlice,\n      callback: layerDef.callback,\n      visibilities: layerDef.channels.map(c => (!layerDef.visible && typeof layerDef.visible === 'boolean'\n        ? false\n        : c.visible)),\n    };\n\n    if (!loader || !layerProps) return null;\n    const {\n      metadata: { transform },\n      data,\n    } = loader;\n    let modelMatrix;\n    if (transform) {\n      const { scale, translate } = transform;\n      modelMatrix = new Matrix4()\n        .translate([translate.x, translate.y, 0])\n        .scale(scale);\n    } else if (layerDef.modelMatrix) {\n      // eslint-disable-next-line prefer-destructuring\n      modelMatrix = new Matrix4(layerDef.modelMatrix);\n    }\n    if (rawLayerDef.type === 'bitmask') {\n      const {\n        geneExpressionColormap,\n        geneExpressionColormapRange = [0.0, 1.0],\n        cellColorEncoding,\n      } = this.props;\n      return new MultiscaleImageLayer({\n        // `bitmask` is used by the AbstractSpatialOrScatterplot\n        // https://github.com/vitessce/vitessce/pull/927/files#diff-9cab35a2ca0c5b6d9754b177810d25079a30ca91efa062d5795181360bc3ff2cR111\n        id: `bitmask-layer-${layerDef.index}-${i}`,\n        channelsVisible: layerProps.visibilities,\n        opacity: layerProps.opacity,\n        modelMatrix,\n        hoveredCell: Number(this.props.cellHighlight),\n        renderSubLayers: renderSubBitmaskLayers,\n        loader: data,\n        selections,\n        // For some reason, deck.gl doesn't recognize the prop diffing\n        // unless these are separated out.  I don't think it's a bug, just\n        // has to do with the fact that we don't have it in the `defaultProps`,\n        // could be wrong though.\n        cellColorData: this.color.data,\n        cellTexHeight: this.color.height,\n        cellTexWidth: this.color.width,\n        excludeBackground: true,\n        onViewportLoad: layerProps.callback,\n        colorScaleLo: geneExpressionColormapRange[0],\n        colorScaleHi: geneExpressionColormapRange[1],\n        isExpressionMode: cellColorEncoding === 'geneSelection',\n        colormap: geneExpressionColormap,\n        expressionData: this.expression.data,\n      });\n    }\n    const [Layer, layerLoader] = getLayerLoaderTuple(data, layerDef.use3d);\n\n    return new Layer({\n      loader: layerLoader,\n      id: `${layerDef.use3d ? 'volume' : 'image'}-layer-${layerDef.index}-${i}`,\n      colors: layerProps.colors,\n      contrastLimits: layerProps.sliders,\n      selections,\n      channelsVisible: layerProps.visibilities,\n      opacity: layerProps.opacity,\n      colormap: layerProps.colormap,\n      modelMatrix,\n      transparentColor: layerProps.transparentColor,\n      resolution: layerProps.resolution,\n      renderingMode: layerProps.renderingMode,\n      pickable: false,\n      xSlice: layerProps.xSlice,\n      ySlice: layerProps.ySlice,\n      zSlice: layerProps.zSlice,\n      onViewportLoad: layerProps.callback,\n    });\n  }\n\n  createImageLayers() {\n    const {\n      layers,\n      imageLayerLoaders = {},\n      rasterLayersCallbacks = [],\n    } = this.props;\n    const use3d = (layers || []).some(i => i.use3d);\n    const use3dIndex = (layers || []).findIndex(i => i.use3d);\n    return (layers || [])\n      .filter(layer => layer.type === 'raster' || layer.type === 'bitmask')\n      .filter(layer => (use3d ? layer.use3d === use3d : true))\n      .map((layer, i) => this.createImageLayer(\n        { ...layer, callback: rasterLayersCallbacks[use3d ? use3dIndex : i] },\n        imageLayerLoaders[layer.index],\n        i,\n      ));\n  }\n\n  getLayers() {\n    const {\n      imageLayers, cellsLayer, neighborhoodsLayer, moleculesLayer,\n    } = this;\n    return [\n      ...imageLayers,\n      cellsLayer,\n      neighborhoodsLayer,\n      moleculesLayer,\n      this.createScaleBarLayer(),\n      ...this.createSelectionLayers(),\n    ];\n  }\n\n  onUpdateCellsData() {\n    const { cells = {}, getCellCoords = defaultGetCellCoords } = this.props;\n    const cellsEntries = Object.entries(cells);\n    this.cellsEntries = cellsEntries;\n    this.cellsQuadTree = createCellsQuadTree(cellsEntries, getCellCoords);\n  }\n\n  onUpdateCellsLayer() {\n    const { layers } = this.props;\n    const layerDef = (layers || []).find(layer => layer.type === 'cells');\n    if (layerDef) {\n      this.cellsLayer = this.createCellsLayer(layerDef);\n    } else {\n      this.cellsLayer = null;\n    }\n  }\n\n  onUpdateCellColors() {\n    const color = this.randomColorData;\n    const { size } = this.props.cellColors;\n    if (typeof size === 'number') {\n      const cellIds = this.props.cellColors.keys();\n      color.data = new Uint8Array(color.height * color.width * 3).fill(\n        getDefaultColor(this.props.theme)[0],\n      );\n      // 0th cell id is the empty space of the image i.e black color.\n      color.data[0] = 0;\n      color.data[1] = 0;\n      color.data[2] = 0;\n      // eslint-disable-next-line no-restricted-syntax\n      for (const id of cellIds) {\n        if (id > 0) {\n          const cellColor = this.props.cellColors.get(id);\n          if (cellColor) {\n            color.data.set(cellColor.slice(0, 3), Number(id) * 3);\n          }\n        }\n      }\n    }\n    this.color = color;\n  }\n\n  onUpdateExpressionData() {\n    const { expressionData } = this.props;\n    if (expressionData[0]?.length) {\n      this.expression.data = new Uint8Array(\n        this.expression.height * this.expression.width,\n      );\n      this.expression.data.set(expressionData[0]);\n    }\n  }\n\n  onUpdateMoleculesData() {\n    const { molecules = {} } = this.props;\n    const moleculesEntries = Object.entries(molecules).flatMap(\n      ([molecule, coords], index) => coords.map(([x, y]) => [x, y, index, molecule]),\n    );\n    this.moleculesEntries = moleculesEntries;\n  }\n\n  onUpdateMoleculesLayer() {\n    const { layers } = this.props;\n    const layerDef = (layers || []).find(layer => layer.type === 'molecules');\n    if (layerDef) {\n      this.moleculesLayer = this.createMoleculesLayer(layerDef);\n    } else {\n      this.moleculesLayer = null;\n    }\n  }\n\n  onUpdateNeighborhoodsData() {\n    const { neighborhoods = {} } = this.props;\n    const neighborhoodsEntries = Object.entries(neighborhoods);\n    this.neighborhoodsEntries = neighborhoodsEntries;\n  }\n\n  onUpdateNeighborhoodsLayer() {\n    const { layers } = this.props;\n    const layerDef = (layers || []).find(\n      layer => layer.type === 'neighborhoods',\n    );\n    if (layerDef) {\n      this.neighborhoodsLayer = this.createNeighborhoodsLayer(layerDef);\n    } else {\n      this.neighborhoodsLayer = null;\n    }\n  }\n\n  onUpdateImages() {\n    this.imageLayers = this.createImageLayers();\n  }\n\n  viewInfoDidUpdate() {\n    const { getCellCoords = defaultGetCellCoords } = this.props;\n    super.viewInfoDidUpdate(getCellCoords);\n  }\n\n  /**\n   * Here, asynchronously check whether props have\n   * updated which require re-computing memoized variables,\n   * followed by a re-render.\n   * This function does not follow React conventions or paradigms,\n   * it is only implemented this way to try to squeeze out\n   * performance.\n   * @param {object} prevProps The previous props to diff against.\n   */\n  componentDidUpdate(prevProps) {\n    this.viewInfoDidUpdate();\n\n    const shallowDiff = propName => prevProps[propName] !== this.props[propName];\n    if (['cells'].some(shallowDiff)) {\n      // Cells data changed.\n      this.onUpdateCellsData();\n      this.forceUpdate();\n    }\n\n    if (\n      [\n        'layers',\n        'cells',\n        'cellFilter',\n        'cellSelection',\n        'cellColors',\n        'geneExpressionColormapRange',\n        'cellColorEncoding',\n        'geneExpressionColormap',\n      ].some(shallowDiff)\n    ) {\n      // Cells layer props changed.\n      this.onUpdateCellsLayer();\n      this.forceUpdate();\n    }\n\n    if (['cellColors'].some(shallowDiff)) {\n      // Cells Color layer props changed.\n      this.onUpdateCellColors();\n      this.forceUpdate();\n    }\n\n    if (['expressionData'].some(shallowDiff)) {\n      // Expression data prop changed.\n      this.onUpdateExpressionData();\n      this.forceUpdate();\n    }\n\n    if (['molecules'].some(shallowDiff)) {\n      // Molecules data changed.\n      this.onUpdateMoleculesData();\n      this.forceUpdate();\n    }\n\n    if (['layers', 'molecules'].some(shallowDiff)) {\n      // Molecules layer props changed.\n      this.onUpdateMoleculesLayer();\n      this.forceUpdate();\n    }\n\n    if (['neighborhoods'].some(shallowDiff)) {\n      // Neighborhoods data changed.\n      this.onUpdateNeighborhoodsData();\n      this.forceUpdate();\n    }\n\n    if (['layers', 'neighborhoods'].some(shallowDiff)) {\n      // Neighborhoods layer props changed.\n      this.onUpdateNeighborhoodsLayer();\n      this.forceUpdate();\n    }\n\n    if (\n      [\n        'layers',\n        'imageLayerLoaders',\n        'cellColors',\n        'cellHighlight',\n        'geneExpressionColormapRange',\n        'expressionData',\n        'rasterLayersCallbacks',\n        'geneExpressionColormap',\n      ].some(shallowDiff)\n    ) {\n      // Image layers changed.\n      this.onUpdateImages();\n      this.forceUpdate();\n    }\n  }\n\n  // render() is implemented in the abstract parent class.\n}\n\n/**\n * Need this wrapper function here,\n * since we want to pass a forwardRef\n * so that outer components can\n * access the grandchild DeckGL ref,\n * but we are using a class component.\n */\nconst SpatialWrapper = forwardRef((props, deckRef) => (\n  <Spatial {...props} deckRef={deckRef} />\n));\nexport default SpatialWrapper;\n", "import { COORDINATE_SYSTEM } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport { DataFilterExtension } from '@deck.gl/extensions'; // eslint-disable-line import/no-extraneous-dependencies\nimport SelectionLayer from './SelectionLayer';\n\n/**\n * Convert a DeckGL layer ID to a \"base\" layer ID for selection.\n * @param {string} layerId The layer ID to convert.\n * @returns {string} The base layer ID.\n */\nfunction getBaseLayerId(layerId) {\n  return `base-${layerId}`;\n}\n\n/**\n * Convert a DeckGL layer ID to a \"selected\" layer ID for selection.\n * @param {string} layerId The layer ID to convert.\n * @returns {string} The base layer ID.\n */\nfunction getSelectedLayerId(layerId) {\n  return `selected-${layerId}`;\n}\n\n/**\n * Construct DeckGL selection layers.\n * @param {string} tool\n * @param {number} zoom\n * @param {string} cellBaseLayerId\n * @param {function} getCellCoords\n * @param {function} updateCellsSelection\n * @returns {object[]} The array of DeckGL selection layers.\n */\nexport function getSelectionLayers(\n  tool,\n  zoom,\n  layerId,\n  getCellCoords,\n  updateCellsSelection,\n  cellsQuadTree,\n  flipY = false,\n) {\n  if (!tool) {\n    return [];\n  }\n\n  const cellBaseLayerId = getBaseLayerId(layerId);\n  const editHandlePointRadius = 5 / (zoom + 16);\n\n  return [new SelectionLayer({\n    id: 'selection',\n    flipY,\n    cellsQuadTree,\n    getCellCoords,\n    coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n    selectionType: tool,\n    onSelect: ({ pickingInfos }) => {\n      const cellIds = pickingInfos.map(cellObj => cellObj[0]);\n      if (updateCellsSelection) {\n        updateCellsSelection(cellIds);\n      }\n    },\n    layerIds: [cellBaseLayerId],\n    getTentativeFillColor: () => [255, 255, 255, 95],\n    getTentativeLineColor: () => [143, 143, 143, 255],\n    getTentativeLineDashArray: () => [7, 4],\n    lineWidthMinPixels: 2,\n    lineWidthMaxPixels: 2,\n    getEditHandlePointColor: () => [0xff, 0xff, 0xff, 0xff],\n    getEditHandlePointRadius: () => editHandlePointRadius,\n    editHandlePointRadiusScale: 1,\n    editHandlePointRadiusMinPixels: editHandlePointRadius,\n    editHandlePointRadiusMaxPixels: 2 * editHandlePointRadius,\n  })];\n}\n\n/**\n * Get deck.gl layer props for selection overlays.\n * @param {object} props\n * @returns {object} Object with two properties,\n * overlay: overlayProps, base: baseProps,\n * where the values are deck.gl layer props.\n */\nexport function overlayBaseProps(props) {\n  const {\n    id, getColor, data, isSelected, ...rest\n  } = props;\n  return {\n    overlay: {\n      id: getSelectedLayerId(id),\n      getFillColor: getColor,\n      getLineColor: getColor,\n      data,\n      getFilterValue: isSelected,\n      extensions: [new DataFilterExtension({ filterSize: 1 })],\n      filterRange: [1, 1],\n      ...rest,\n    },\n    base: {\n      id: getBaseLayerId(id),\n      getLineColor: getColor,\n      getFillColor: getColor,\n      // Alternatively: contrast outlines with solids:\n      // getLineColor: getColor,\n      // getFillColor: [255, 255, 255],\n      data: data.slice(),\n      ...rest,\n    },\n  };\n}\n", "/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable no-underscore-dangle */\n// File adopted from nebula.gl's SelectionLayer\n// https://github.com/uber/nebula.gl/blob/8e9c2ec8d7cf4ca7050909ed826eb847d5e2cd9c/modules/layers/src/layers/selection-layer.js\nimport { CompositeLayer } from 'deck.gl';\nimport { polygon as turfPolygon, point as turfPoint } from '@turf/helpers';\nimport booleanWithin from '@turf/boolean-within';\nimport booleanContains from '@turf/boolean-contains';\nimport booleanOverlap from '@turf/boolean-overlap';\nimport booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport { ScatterplotLayer } from '@deck.gl/layers';\nimport { SELECTION_TYPE } from 'nebula.gl';\nimport { EditableGeoJsonLayer } from '@nebula.gl/layers';\nimport { DrawRectangleMode, DrawPolygonByDraggingMode, ViewMode } from '@nebula.gl/edit-modes';\n\nconst EDIT_TYPE_ADD = 'addFeature';\nconst EDIT_TYPE_CLEAR = 'clearFeatures';\n\n// Customize the click handlers for the rectangle and polygon tools,\n// so that clicking triggers the `onEdit` callback.\nclass ClickableDrawRectangleMode extends DrawRectangleMode {\n  // eslint-disable-next-line class-methods-use-this\n  handleClick(event, props) {\n    props.onEdit({ editType: EDIT_TYPE_CLEAR });\n  }\n}\n\nclass ClickableDrawPolygonByDraggingMode extends DrawPolygonByDraggingMode {\n  // eslint-disable-next-line class-methods-use-this\n  handleClick(event, props) {\n    props.onEdit({ editType: EDIT_TYPE_CLEAR });\n  }\n}\n\nconst MODE_MAP = {\n  [SELECTION_TYPE.RECTANGLE]: ClickableDrawRectangleMode,\n  [SELECTION_TYPE.POLYGON]: ClickableDrawPolygonByDraggingMode,\n};\n\nconst defaultProps = {\n  selectionType: SELECTION_TYPE.RECTANGLE,\n  layerIds: [],\n  onSelect: () => {},\n};\n\nconst EMPTY_DATA = {\n  type: 'FeatureCollection',\n  features: [],\n};\n\nconst LAYER_ID_GEOJSON = 'selection-geojson';\n\nconst PASS_THROUGH_PROPS = [\n  'lineWidthScale',\n  'lineWidthMinPixels',\n  'lineWidthMaxPixels',\n  'lineWidthUnits',\n  'lineJointRounded',\n  'lineMiterLimit',\n  'pointRadiusScale',\n  'pointRadiusMinPixels',\n  'pointRadiusMaxPixels',\n  'lineDashJustified',\n  'getLineColor',\n  'getFillColor',\n  'getRadius',\n  'getLineWidth',\n  'getLineDashArray',\n  'getTentativeLineDashArray',\n  'getTentativeLineColor',\n  'getTentativeFillColor',\n  'getTentativeLineWidth',\n  'editHandlePointRadiusScale',\n  'editHandlePointRadiusMinPixels',\n  'editHandlePointRadiusMaxPixels',\n  'getEditHandlePointColor',\n  'getEditHandlePointRadius',\n  'modeHandlers',\n];\n\nexport default class SelectionLayer extends CompositeLayer {\n  _selectPolygonObjects(coordinates) {\n    const {\n      onSelect,\n      getCellCoords,\n      cellsQuadTree,\n      flipY,\n    } = this.props;\n\n    const flippedCoordinates = (flipY\n      ? coordinates.map(poly => poly.map(p => ([p[0], -p[1]])))\n      : coordinates);\n\n    // Convert the selection to a turf polygon object.\n    const selectedPolygon = turfPolygon(flippedCoordinates);\n\n    // Create an array to store the results.\n    const pickingInfos = [];\n\n    // quadtree.visit() takes a callback that returns a boolean:\n    // If true returned, then the children of the node are _not_ visited.\n    // If false returned, then the children of the node are visited.\n    // Reference: https://github.com/d3/d3-quadtree#quadtree_visit\n    cellsQuadTree.visit((node, x0, y0, x1, y1) => {\n      const nodePoints = [[[x0, y0], [x1, y0], [x1, y1], [x0, y1], [x0, y0]]];\n      const nodePolygon = turfPolygon(nodePoints);\n\n      const nodePolygonContainsSelectedPolygon = booleanContains(nodePolygon, selectedPolygon);\n      const nodePolygonWithinSelectedPolygon = booleanWithin(nodePolygon, selectedPolygon);\n      const nodePolygonOverlapsSelectedPolgyon = booleanOverlap(nodePolygon, selectedPolygon);\n\n      if (!nodePolygonContainsSelectedPolygon\n        && !nodePolygonWithinSelectedPolygon\n        && !nodePolygonOverlapsSelectedPolgyon) {\n        // We are not interested in anything below this node,\n        // so return true because we are done with this node.\n        return true;\n      }\n\n      // This node made it past the above return statement, so it must either\n      // contain, be within, or overlap with the selected polygon.\n\n      // Check if this is a leaf node.\n      if (node.data\n        && booleanPointInPolygon(turfPoint(getCellCoords(node.data[1])), selectedPolygon)) {\n        // This node has data, so it is a leaf node representing one data point,\n        // and we have verified that the point is in the selected polygon.\n        pickingInfos.push(node.data);\n      }\n\n      // Return false because we are not done.\n      // We want to visit the children of this node.\n      return false;\n    });\n\n    onSelect({ pickingInfos });\n  }\n\n  renderLayers() {\n    const { onSelect } = this.props;\n    const mode = MODE_MAP[this.props.selectionType] || ViewMode;\n\n    const inheritedProps = {};\n    PASS_THROUGH_PROPS.forEach((p) => {\n      if (this.props[p] !== undefined) inheritedProps[p] = this.props[p];\n    });\n    const layers = [\n      new EditableGeoJsonLayer(\n        this.getSubLayerProps({\n          id: LAYER_ID_GEOJSON,\n          pickable: true,\n          mode,\n          modeConfig: {\n            dragToDraw: true,\n          },\n          selectedFeatureIndexes: [],\n          data: EMPTY_DATA,\n          onEdit: ({ updatedData, editType }) => {\n            if (editType === EDIT_TYPE_ADD) {\n              const { coordinates } = updatedData.features[0].geometry;\n              this._selectPolygonObjects(coordinates);\n            } else if (editType === EDIT_TYPE_CLEAR) {\n              // We want to select an empty array to clear any previous selection.\n              onSelect({ pickingInfos: [] });\n            }\n          },\n          _subLayerProps: {\n            guides: {\n              pointType: 'circle',\n              _subLayerProps: {\n                'points-circle': {\n                  // Styling for editHandles goes here.\n                  // Reference: https://github.com/uber/nebula.gl/issues/618#issuecomment-898466319\n                  type: ScatterplotLayer,\n                  radiusScale: 1,\n                  stroked: true,\n                  getLineWidth: 1,\n                  radiusMinPixels: 1,\n                  radiusMaxPixels: 3,\n                  getRadius: 2,\n                },\n              },\n            },\n          },\n          ...inheritedProps,\n        }),\n      ),\n    ];\n\n    return layers;\n  }\n}\n\nSelectionLayer.layerName = 'SelectionLayer';\nSelectionLayer.defaultProps = defaultProps;\n", "/* eslint-disable no-plusplus */\nimport shortNumber from 'short-number';\nimport isEqual from 'lodash/isEqual';\nimport {\n  getDefaultInitialViewState,\n  MultiscaleImageLayer,\n  ImageLayer,\n  VolumeLayer,\n} from '@hms-dbmi/viv';\nimport { extent } from 'd3-array';\nimport { Matrix4 } from 'math.gl';\nimport { divide, compare, unit } from 'mathjs';\nimport { pluralize, getSourceFromLoader, isRgb } from '../../utils';\nimport { VIEWER_PALETTE } from '../utils';\nimport {\n  GLOBAL_LABELS,\n  DEFAULT_RASTER_LAYER_PROPS,\n  DEFAULT_LAYER_TYPE_ORDERING,\n} from './constants';\nimport BitmaskLayer from '../../layers/BitmaskLayer';\nimport { getMultiSelectionStats } from '../layer-controller/utils';\n\nexport function square(x, y, r) {\n  return [[x, y + r], [x + r, y], [x, y - r], [x - r, y]];\n}\n\n/**\n * Sort spatial layer definition array,\n * to keep the ordering in the layer controller\n * consistent.\n * Intended to be used with auto-initialized layer\n * definition arrays only, as a pre-defined layer array\n * should not be re-ordered.\n * @param {object[]} layers Array of layer definition objects.\n * Object must have a .type property.\n */\nexport function sortLayers(layers) {\n  return layers.sort((a, b) => (\n    DEFAULT_LAYER_TYPE_ORDERING.indexOf(a.type) - DEFAULT_LAYER_TYPE_ORDERING.indexOf(b.type)\n  ));\n}\n\n/**\n * Return the midpoint of the global dimensions.\n * @param {object} source PixelSource object from Viv\n * @returns {object} The selection.\n */\nfunction getDefaultGlobalSelection(source) {\n  const globalIndices = source.labels\n    .filter(dim => GLOBAL_LABELS.includes(dim));\n  const selection = {};\n  globalIndices.forEach((dim) => {\n    selection[dim] = Math.floor(\n      (source.shape[source.labels.indexOf(dim)] || 0) / 2,\n    );\n  });\n  return selection;\n}\n\n/**\n * Create a default selection using the midpoint of the available global dimensions,\n * and then the first four available selections from the first selectable channel.\n * @param {object} source PixelSource object from Viv\n * @returns {object} The selection.\n */\nfunction buildDefaultSelection(source) {\n  const selection = [];\n  const globalSelection = getDefaultGlobalSelection(source);\n  // First non-global dimension with some sort of selectable values\n  const firstNonGlobalDimension = source.labels.filter(\n    dim => !GLOBAL_LABELS.includes(dim)\n      && source.shape[source.labels.indexOf(dim)],\n  )[0];\n  for (let i = 0; i < Math.min(4, source.shape[\n    source.labels.indexOf(firstNonGlobalDimension)\n  ]); i += 1) {\n    selection.push(\n      {\n        [firstNonGlobalDimension]: i,\n        ...globalSelection,\n      },\n    );\n  }\n  return selection;\n}\n\n/**\n * @param {Array.<number>} shape loader shape\n */\nexport function isInterleaved(shape) {\n  const lastDimSize = shape[shape.length - 1];\n  return lastDimSize === 3 || lastDimSize === 4;\n}\n\n/**\n * Initialize the channel selections for an individual layer.\n * @param {object} loader A viv loader instance with channel names appended by Vitessce loaders\n * of the form { data: (PixelSource[]|PixelSource), metadata: Object, channels }\n * @returns {object[]} An array of selected channels with default\n * domain/slider settings.\n */\nexport async function initializeLayerChannels(loader, use3d) {\n  const result = [];\n  const source = getSourceFromLoader(loader);\n  // Add channel automatically as the first avaialable value for each dimension.\n  let defaultSelection = buildDefaultSelection(source);\n  defaultSelection = isInterleaved(source.shape)\n    ? [{ ...defaultSelection[0], c: 0 }] : defaultSelection;\n  const stats = await getMultiSelectionStats({\n    loader: loader.data, selections: defaultSelection, use3d,\n  });\n\n  const domains = isRgb(loader)\n    ? [[0, 255], [0, 255], [0, 255]]\n    : stats.domains;\n  const colors = isRgb(loader)\n    ? [[255, 0, 0], [0, 255, 0], [0, 0, 255]]\n    : null;\n  const sliders = isRgb(loader)\n    ? [[0, 255], [0, 255], [0, 255]]\n    : stats.sliders;\n\n  defaultSelection.forEach((selection, i) => {\n    const domain = domains[i];\n    const slider = sliders[i];\n    const channel = {\n      selection,\n      // eslint-disable-next-line no-nested-ternary\n      color: colors ? colors[i]\n        : defaultSelection.length !== 1\n          ? VIEWER_PALETTE[i] : [255, 255, 255],\n      visible: true,\n      slider: slider || domain,\n    };\n    result.push(channel);\n  });\n  return result;\n}\n\nfunction getMetaWithTransformMatrices(imageMeta, imageLoaders) {\n  // Do not fill in transformation matrices if any of the layers specify one.\n  const sources = imageLoaders.map(loader => getSourceFromLoader(loader));\n  if (\n    imageMeta.map(meta => meta?.metadata?.transform?.matrix\n      || meta?.metadata?.transform?.scale\n      || meta?.metadata?.transform?.translate).some(Boolean)\n    || sources.every(\n      source => !source.meta?.physicalSizes?.x || !source.meta?.physicalSizes?.y,\n    )\n  ) {\n    return imageMeta;\n  }\n  // Get the minimum physical among all the current images.\n  const minPhysicalSize = sources.reduce((acc, source) => {\n    const hasZPhyscialSize = source.meta?.physicalSizes?.z?.size;\n    const sizes = [\n      unit(`${source.meta?.physicalSizes.x.size} ${source.meta?.physicalSizes.x.unit}`.replace('\u00B5', 'u')),\n      unit(`${source.meta?.physicalSizes.y.size} ${source.meta?.physicalSizes.y.unit}`.replace('\u00B5', 'u')),\n    ];\n    if (hasZPhyscialSize) {\n      sizes.push(unit(`${source.meta?.physicalSizes.z.size} ${source.meta?.physicalSizes.z.unit}`.replace('\u00B5', 'u')));\n    }\n    acc[0] = (acc[0] === undefined || compare(sizes[0], acc[0]) === -1) ? sizes[0] : acc[0];\n    acc[1] = (acc[1] === undefined || compare(sizes[1], acc[1]) === -1) ? sizes[1] : acc[1];\n    acc[2] = (acc[2] === undefined || compare(sizes[2], acc[2]) === -1) ? sizes[2] : acc[2];\n    return acc;\n  }, []);\n  const imageMetaWithTransform = imageMeta.map((meta, j) => {\n    const source = sources[j];\n    const hasZPhyscialSize = source.meta?.physicalSizes?.z?.size;\n    const sizes = [\n      unit(`${source.meta?.physicalSizes.x.size} ${source.meta?.physicalSizes.x.unit}`.replace('\u00B5', 'u')),\n      unit(`${source.meta?.physicalSizes.y.size} ${source.meta?.physicalSizes.y.unit}`.replace('\u00B5', 'u')),\n    ];\n    if (hasZPhyscialSize) {\n      sizes.push(unit(`${source.meta?.physicalSizes.z.size} ${source.meta?.physicalSizes.z.unit}`.replace('\u00B5', 'u')));\n    }\n    // Find the ratio of the sizes to get the scaling factor.\n    const scale = sizes.map((i, k) => divide(i, minPhysicalSize[k]));\n    // Add in z dimension needed for Matrix4 scale API.\n    if (!scale[2]) {\n      scale[2] = 1;\n    }\n    // no need to store/use identity scaling\n    if (isEqual(scale, [1, 1, 1])) {\n      return meta;\n    }\n    // Make sure to scale the z direction by one.\n    const matrix = new Matrix4().scale([...scale]);\n    const newMeta = { ...meta };\n    newMeta.metadata = {\n      ...newMeta.metadata,\n      // We don't want to store matrix objects in the view config.\n      transform: { matrix: matrix.toArray() },\n    };\n    return newMeta;\n  });\n  return imageMetaWithTransform;\n}\n\n/**\n * Given a set of image layer loader creator functions,\n * create loader objects for an initial layer or set of layers,\n * which will be selected based on default values predefined in\n * the image data file or otherwise by a heuristic\n * (the midpoint of the layers array).\n * @param {object[]} rasterLayers A list of layer metadata objects with\n * shape { name, type, url, createLoader }.\n * @param {(string[]|null)} rasterRenderLayers A list of default raster layers. Optional.\n */\nexport async function initializeRasterLayersAndChannels(\n  rasterLayers,\n  rasterRenderLayers,\n  usePhysicalSizeScaling,\n) {\n  const nextImageLoaders = [];\n  let nextImageMetaAndLayers = [];\n  const autoImageLayerDefPromises = [];\n\n  // Start all loader creators immediately.\n  // Reference: https://eslint.org/docs/rules/no-await-in-loop\n  const loaders = await Promise.all(rasterLayers.map(layer => layer.loaderCreator()));\n\n  for (let i = 0; i < rasterLayers.length; i++) {\n    const layer = rasterLayers[i];\n    const loader = loaders[i];\n    nextImageLoaders[i] = loader;\n    nextImageMetaAndLayers[i] = layer;\n  }\n  if (usePhysicalSizeScaling) {\n    nextImageMetaAndLayers = getMetaWithTransformMatrices(nextImageMetaAndLayers, nextImageLoaders);\n  }\n  // No layers were pre-defined so set up the default image layers.\n  if (!rasterRenderLayers) {\n    // Midpoint of images list as default image to show.\n    const layerIndex = Math.floor(rasterLayers.length / 2);\n    const loader = nextImageLoaders[layerIndex];\n    const autoImageLayerDefPromise = initializeLayerChannels(loader)\n      .then(channels => Promise.resolve({\n        type: nextImageMetaAndLayers[layerIndex]?.metadata?.isBitmask ? 'bitmask' : 'raster',\n        index: layerIndex,\n        ...DEFAULT_RASTER_LAYER_PROPS,\n        channels: channels.map((channel, j) => ({\n          ...channel,\n          ...(nextImageMetaAndLayers[layerIndex].channels\n            ? nextImageMetaAndLayers[layerIndex].channels[j] : []),\n        })),\n        modelMatrix: nextImageMetaAndLayers[layerIndex]?.metadata?.transform?.matrix,\n        transparentColor: layerIndex > 0 ? [0, 0, 0] : null,\n      }));\n    autoImageLayerDefPromises.push(autoImageLayerDefPromise);\n  } else {\n    // The renderLayers parameter is a list of layer names to show by default.\n    const globalIndicesOfRenderLayers = rasterRenderLayers\n      .map(imageName => rasterLayers.findIndex(image => image.name === imageName));\n    for (let i = 0; i < globalIndicesOfRenderLayers.length; i++) {\n      const layerIndex = globalIndicesOfRenderLayers[i];\n      const loader = nextImageLoaders[layerIndex];\n      const autoImageLayerDefPromise = initializeLayerChannels(loader)\n        // eslint-disable-next-line no-loop-func\n        .then(channels => Promise.resolve({\n          type: nextImageMetaAndLayers[layerIndex]?.metadata?.isBitmask ? 'bitmask' : 'raster',\n          index: layerIndex,\n          ...DEFAULT_RASTER_LAYER_PROPS,\n          channels: channels.map((channel, j) => ({\n            ...channel,\n            ...(nextImageMetaAndLayers[layerIndex].channels\n              ? nextImageMetaAndLayers[layerIndex].channels[j] : []),\n          })),\n          domainType: 'Min/Max',\n          modelMatrix: nextImageMetaAndLayers[layerIndex]?.metadata?.transform?.matrix,\n          transparentColor: i > 0 ? [0, 0, 0] : null,\n        }));\n      autoImageLayerDefPromises.push(autoImageLayerDefPromise);\n    }\n  }\n\n  const autoImageLayerDefs = await Promise.all(autoImageLayerDefPromises);\n  return [autoImageLayerDefs, nextImageLoaders, nextImageMetaAndLayers];\n}\n\n/**\n * Make a subtitle for the spatial component.\n * @param {object} params\n * @param {number} params.observationsCount\n * @param {string} params.observationsLabel\n * @param {string} params.observationsPluralLabel\n * @param {number} params.subobservationsCount\n * @param {string} params.subobservationsLabel\n * @param {string} params.subobservationsPluralLabel\n * @param {number} params.locationsCount\n * @returns {string} The subtitle string,\n * with info about items with zero counts omitted.\n */\nexport function makeSpatialSubtitle({\n  observationsCount, observationsLabel, observationsPluralLabel,\n  subobservationsCount, subobservationsLabel, subobservationsPluralLabel,\n  locationsCount,\n}) {\n  const parts = [];\n  if (subobservationsCount > 0) {\n    let part = `${subobservationsCount} ${pluralize(subobservationsLabel, subobservationsPluralLabel, subobservationsCount)}`;\n    if (locationsCount > 0) {\n      part += ` at ${shortNumber(locationsCount)} locations`;\n    }\n    parts.push(part);\n  }\n  if (observationsCount > 0) {\n    parts.push(`${observationsCount} ${pluralize(observationsLabel, observationsPluralLabel, observationsCount)}`);\n  }\n  return parts.join(', ');\n}\n\nexport function getInitialSpatialTargets({\n  width,\n  height,\n  cells,\n  imageLayerLoaders,\n  useRaster,\n  use3d,\n}) {\n  let initialTargetX = -Infinity;\n  let initialTargetY = -Infinity;\n  let initialTargetZ = -Infinity;\n  let initialZoom = -Infinity;\n  // Some backoff from completely filling the screen.\n  const zoomBackoff = use3d ? 1.5 : 0.1;\n  const cellValues = Object.values(cells);\n  if (imageLayerLoaders.length > 0 && useRaster) {\n    for (let i = 0; i < imageLayerLoaders.length; i += 1) {\n      const viewSize = { height, width };\n      const { target, zoom: newViewStateZoom } = getDefaultInitialViewState(\n        imageLayerLoaders[i].data,\n        viewSize,\n        zoomBackoff,\n        use3d,\n      );\n      if (target[0] > initialTargetX) {\n        // eslint-disable-next-line prefer-destructuring\n        initialTargetX = target[0];\n        initialZoom = newViewStateZoom;\n      }\n      if (target[1] > initialTargetY) {\n        // eslint-disable-next-line prefer-destructuring\n        initialTargetY = target[1];\n        initialZoom = newViewStateZoom;\n      }\n      if (target[2] > initialTargetZ) {\n        // eslint-disable-next-line prefer-destructuring\n        initialTargetZ = target[2];\n        initialZoom = newViewStateZoom;\n      } else {\n        initialTargetZ = null;\n      }\n    }\n  } else if (cellValues.length > 0\n    // Only use cellValues in quadtree calculation if there is\n    // centroid data in the cells (i.e not just ids).\n    && cellValues[0].xy\n    && !useRaster) {\n    const cellCoordinates = cellValues.map(c => c.xy);\n    let xExtent = extent(cellCoordinates, c => c[0]);\n    let yExtent = extent(cellCoordinates, c => c[1]);\n    let xRange = xExtent[1] - xExtent[0];\n    let yRange = yExtent[1] - yExtent[0];\n    const getViewExtentFromPolygonExtents = extents => [\n      Math.min(...extents.map(i => i[0])),\n      Math.max(...extents.map(i => i[1])),\n    ];\n    if (xRange === 0) {\n      // The fall back is the cells' polygon coordinates, if the original range\n      // is 0 i.e the centroids are all on the same axis.\n      const polygonExtentsX = cellValues.map(cell => extent(cell.poly, i => i[0]));\n      xExtent = getViewExtentFromPolygonExtents(polygonExtentsX);\n      xRange = xExtent[1] - xExtent[0];\n    }\n    if (yRange === 0) {\n      // The fall back is the first cells' polygon coordinates, if the original range\n      // is 0 i.e the centroids are all on the same axis.\n      const polygonExtentsY = cellValues.map(cell => extent(cell.poly, i => i[1]));\n      yExtent = getViewExtentFromPolygonExtents(polygonExtentsY);\n      yRange = yExtent[1] - yExtent[0];\n    }\n    initialTargetX = xExtent[0] + xRange / 2;\n    initialTargetY = yExtent[0] + yRange / 2;\n    initialTargetZ = null;\n    initialZoom = Math.log2(Math.min(width / xRange, height / yRange)) - zoomBackoff;\n  } else {\n    return {\n      initialTargetX: null, initialTargetY: null, initialTargetZ: null, initialZoom: null,\n    };\n  }\n  return {\n    initialTargetX, initialTargetY, initialZoom, initialTargetZ,\n  };\n}\n\n/**\n * Make a subtitle for the spatial component.\n * @param {object} data PixelSource | PixelSource[]\n * @returns {Array} [Layer, PixelSource | PixelSource[]] tuple.\n */\nexport function getLayerLoaderTuple(data, use3d) {\n  const loader = ((Array.isArray(data) && data.length > 1) || !Array.isArray(data))\n    ? data : data[0];\n  if (use3d) {\n    return [VolumeLayer, Array.isArray(loader) ? loader : [loader]];\n  }\n  const Layer = (Array.isArray(data) && data.length > 1) ? MultiscaleImageLayer : ImageLayer;\n  return [Layer, loader];\n}\n\n\nexport function renderSubBitmaskLayers(props) {\n  const {\n    bbox: {\n      left, top, right, bottom,\n    },\n    x,\n    y,\n    z,\n  } = props.tile;\n  const {\n    data, id, loader,\n  } = props;\n  // Only render in positive coorinate system\n  if ([left, bottom, right, top].some(v => v < 0) || !data) {\n    return null;\n  }\n  const base = loader[0];\n  const [height, width] = loader[0].shape.slice(-2);\n  // Tiles are exactly fitted to have height and width such that their bounds\n  // match that of the actual image (not some padded version).\n  // Thus the right/bottom given by deck.gl are incorrect since\n  // they assume tiles are of uniform sizes, which is not the case for us.\n  const bounds = [\n    left,\n    data.height < base.tileSize ? height : bottom,\n    data.width < base.tileSize ? width : right,\n    top,\n  ];\n  return new BitmaskLayer(props, {\n    channelData: data,\n    // Uncomment to help debugging - shades the tile being hovered over.\n    // autoHighlight: true,\n    // highlightColor: [80, 80, 80, 50],\n    // Shared props with BitmapLayer:\n    bounds,\n    id: `sub-layer-${bounds}-${id}`,\n    tileId: { x, y, z },\n  });\n}\n", "import GL from '@luma.gl/constants'; // eslint-disable-line import/no-extraneous-dependencies\nimport { project32, picking } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport { Texture2D, isWebGL2 } from '@luma.gl/core';\nimport { XRLayer } from '@hms-dbmi/viv';\nimport { fs, vs } from './bitmask-layer-shaders';\nimport {\n  GLSL_COLORMAPS,\n  GLSL_COLORMAP_DEFAULT,\n  COLORMAP_SHADER_PLACEHOLDER,\n} from './constants';\n\nfunction padWithDefault(arr, defaultValue, padWidth) {\n  const newArr = [...arr];\n  for (let i = 0; i < padWidth; i += 1) {\n    newArr.push(defaultValue);\n  }\n  return newArr;\n}\n\nconst defaultProps = {\n  hoveredCell: { type: 'number', value: null, compare: true },\n  cellColorData: { type: 'object', value: null, compare: true },\n  colormap: { type: 'string', value: GLSL_COLORMAP_DEFAULT, compare: true },\n  expressionData: { type: 'object', value: null, compare: true },\n};\n\n/**\n * A BitmapLayer that performs aggregation in the fragment shader,\n * and renders its texture from a Uint8Array rather than an ImageData.\n */\nexport default class BitmaskLayer extends XRLayer {\n  // eslint-disable-next-line class-methods-use-this\n  getShaders() {\n    const { colormap } = this.props;\n    return {\n      fs,\n      vs,\n      modules: [project32, picking],\n      defines: {\n        [COLORMAP_SHADER_PLACEHOLDER]: GLSL_COLORMAPS.includes(colormap)\n          ? colormap\n          : GLSL_COLORMAP_DEFAULT,\n      },\n    };\n  }\n\n  updateState({ props, oldProps, changeFlags }) {\n    super.updateState({ props, oldProps, changeFlags });\n    if (props.cellColorData !== oldProps.cellColorData) {\n      this.setColorTexture();\n    }\n    if (props.expressionData !== oldProps.expressionData) {\n      const { expressionData, cellTexHeight, cellTexWidth } = this.props;\n      const expressionTex = this.dataToTexture(\n        expressionData,\n        cellTexWidth,\n        cellTexHeight,\n      );\n      this.setState({ expressionTex });\n    }\n    if (props.colormap !== oldProps.colormap) {\n      const { gl } = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      // eslint-disable-next-line no-underscore-dangle\n      this.setState({ model: this._getModel(gl) });\n\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  setColorTexture() {\n    const {\n      cellColorData: data,\n      cellTexHeight: height,\n      cellTexWidth: width,\n    } = this.props;\n    const colorTex = new Texture2D(this.context.gl, {\n      width,\n      height,\n      // Only use Float32 so we don't have to write two shaders\n      data,\n      // we don't want or need mimaps\n      mipmaps: false,\n      parameters: {\n        // NEAREST for integer data\n        [GL.TEXTURE_MIN_FILTER]: GL.NEAREST,\n        [GL.TEXTURE_MAG_FILTER]: GL.NEAREST,\n        // CLAMP_TO_EDGE to remove tile artifacts\n        [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n        [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n      },\n      format: GL.RGB,\n      dataFormat: GL.RGB,\n      type: GL.UNSIGNED_BYTE,\n    });\n    this.setState({ colorTex });\n  }\n\n  draw(opts) {\n    const { uniforms } = opts;\n    const {\n      channelsVisible,\n      hoveredCell,\n      colorScaleLo,\n      colorScaleHi,\n      isExpressionMode,\n    } = this.props;\n    const {\n      textures, model, colorTex, expressionTex,\n    } = this.state;\n    // Render the image\n    if (textures && model && colorTex) {\n      model\n        .setUniforms(\n          Object.assign({}, uniforms, {\n            hovered: hoveredCell || 0,\n            colorTex,\n            expressionTex,\n            colorTexHeight: colorTex.height,\n            colorTexWidth: colorTex.width,\n            channelsVisible: padWithDefault(\n              channelsVisible,\n              false,\n              // There are six texture entries on the shaders\n              6 - channelsVisible.length,\n            ),\n            uColorScaleRange: [colorScaleLo, colorScaleHi],\n            uIsExpressionMode: isExpressionMode,\n            ...textures,\n          }),\n        )\n        .draw();\n    }\n  }\n\n  /**\n   * This function creates textures from the data\n   */\n  dataToTexture(data, width, height) {\n    const isWebGL2On = isWebGL2(this.context.gl);\n    return new Texture2D(this.context.gl, {\n      width,\n      height,\n      // Only use Float32 so we don't have to write two shaders\n      data: new Float32Array(data),\n      // we don't want or need mimaps\n      mipmaps: false,\n      parameters: {\n        // NEAREST for integer data\n        [GL.TEXTURE_MIN_FILTER]: GL.NEAREST,\n        [GL.TEXTURE_MAG_FILTER]: GL.NEAREST,\n        // CLAMP_TO_EDGE to remove tile artifacts\n        [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n        [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n      },\n      format: isWebGL2On ? GL.R32F : GL.LUMINANCE,\n      dataFormat: isWebGL2On ? GL.RED : GL.LUMINANCE,\n      type: GL.FLOAT,\n    });\n  }\n}\nBitmaskLayer.layerName = 'BitmaskLayer';\nBitmaskLayer.defaultProps = defaultProps;\n", "export var vs = \"\\n#define SHADER_NAME bitmask-layer-vertex-shader\\n\\nattribute vec2 texCoords;\\nattribute vec3 positions;\\nattribute vec3 positions64Low;\\nattribute vec3 instancePickingColors;\\n\\nvarying vec2 vTexCoord;\\n\\nvoid main(void) {\\n  geometry.worldPosition = positions;\\n  geometry.uv = texCoords;\\n  geometry.pickingColor = instancePickingColors;\\n  gl_Position = project_position_to_clipspace(positions, positions64Low, vec3(0.0), geometry.position);\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n  vTexCoord = texCoords;\\n  vec4 color = vec4(0.0);\\n  DECKGL_FILTER_COLOR(color, geometry);\\n}\\n\";\nexport var fs = \"\\n#define SHADER_NAME bitmask-layer-fragment-shader\\nprecision highp float;\\n\\nvec4 plasma (float x_1306414511) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.050980392156862744,0.03137254901960784,0.5294117647058824,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.29411764705882354,0.011764705882352941,0.6313725490196078,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.49019607843137253,0.011764705882352941,0.6588235294117647,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.6588235294117647,0.13333333333333333,0.5882352941176471,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.796078431372549,0.27450980392156865,0.4745098039215686,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.8980392156862745,0.4196078431372549,0.36470588235294116,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.9725490196078431,0.5803921568627451,0.2549019607843137,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.9921568627450981,0.7647058823529411,0.1568627450980392,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9411764705882353,0.9764705882352941,0.12941176470588237,1);\\n  float a0 = smoothstep(e0,e1,x_1306414511);\\n  float a1 = smoothstep(e1,e2,x_1306414511);\\n  float a2 = smoothstep(e2,e3,x_1306414511);\\n  float a3 = smoothstep(e3,e4,x_1306414511);\\n  float a4 = smoothstep(e4,e5,x_1306414511);\\n  float a5 = smoothstep(e5,e6,x_1306414511);\\n  float a6 = smoothstep(e6,e7,x_1306414511);\\n  float a7 = smoothstep(e7,e8,x_1306414511);\\n  return max(mix(v0,v1,a0)*step(e0,x_1306414511)*step(x_1306414511,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_1306414511)*step(x_1306414511,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_1306414511)*step(x_1306414511,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_1306414511)*step(x_1306414511,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_1306414511)*step(x_1306414511,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_1306414511)*step(x_1306414511,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_1306414511)*step(x_1306414511,e7),mix(v7,v8,a7)*step(e7,x_1306414511)*step(x_1306414511,e8)\\n  )))))));\\n}\\n\\nvec4 viridis (float x_1870111103) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.26666666666666666,0.00392156862745098,0.32941176470588235,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.2784313725490196,0.17254901960784313,0.47843137254901963,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.23137254901960785,0.3176470588235294,0.5450980392156862,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.17254901960784313,0.44313725490196076,0.5568627450980392,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.12941176470588237,0.5647058823529412,0.5529411764705883,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.15294117647058825,0.6784313725490196,0.5058823529411764,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.3607843137254902,0.7843137254901961,0.38823529411764707,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.6666666666666666,0.8627450980392157,0.19607843137254902,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9921568627450981,0.9058823529411765,0.1450980392156863,1);\\n  float a0 = smoothstep(e0,e1,x_1870111103);\\n  float a1 = smoothstep(e1,e2,x_1870111103);\\n  float a2 = smoothstep(e2,e3,x_1870111103);\\n  float a3 = smoothstep(e3,e4,x_1870111103);\\n  float a4 = smoothstep(e4,e5,x_1870111103);\\n  float a5 = smoothstep(e5,e6,x_1870111103);\\n  float a6 = smoothstep(e6,e7,x_1870111103);\\n  float a7 = smoothstep(e7,e8,x_1870111103);\\n  return max(mix(v0,v1,a0)*step(e0,x_1870111103)*step(x_1870111103,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_1870111103)*step(x_1870111103,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_1870111103)*step(x_1870111103,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_1870111103)*step(x_1870111103,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_1870111103)*step(x_1870111103,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_1870111103)*step(x_1870111103,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_1870111103)*step(x_1870111103,e7),mix(v7,v8,a7)*step(e7,x_1870111103)*step(x_1870111103,e8)\\n  )))))));\\n}\\n\\nvec4 greys (float x_1268378094) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,1,1);\\n  float a0 = smoothstep(e0,e1,x_1268378094);\\n  return mix(v0,v1,a0)*step(e0,x_1268378094)*step(x_1268378094,e1);\\n}\\n\\nvec4 magma (float x_2443053725) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0.01568627450980392,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.10980392156862745,0.06274509803921569,0.26666666666666666,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.30980392156862746,0.07058823529411765,0.4823529411764706,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.5058823529411764,0.1450980392156863,0.5058823529411764,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.7098039215686275,0.21176470588235294,0.47843137254901963,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.8980392156862745,0.3137254901960784,0.39215686274509803,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.984313725490196,0.5294117647058824,0.3803921568627451,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.996078431372549,0.7607843137254902,0.5294117647058824,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9882352941176471,0.9921568627450981,0.7490196078431373,1);\\n  float a0 = smoothstep(e0,e1,x_2443053725);\\n  float a1 = smoothstep(e1,e2,x_2443053725);\\n  float a2 = smoothstep(e2,e3,x_2443053725);\\n  float a3 = smoothstep(e3,e4,x_2443053725);\\n  float a4 = smoothstep(e4,e5,x_2443053725);\\n  float a5 = smoothstep(e5,e6,x_2443053725);\\n  float a6 = smoothstep(e6,e7,x_2443053725);\\n  float a7 = smoothstep(e7,e8,x_2443053725);\\n  return max(mix(v0,v1,a0)*step(e0,x_2443053725)*step(x_2443053725,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_2443053725)*step(x_2443053725,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_2443053725)*step(x_2443053725,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_2443053725)*step(x_2443053725,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_2443053725)*step(x_2443053725,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_2443053725)*step(x_2443053725,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_2443053725)*step(x_2443053725,e7),mix(v7,v8,a7)*step(e7,x_2443053725)*step(x_2443053725,e8)\\n  )))))));\\n}\\n\\nvec4 jet (float x_623120303) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0.5137254901960784,1);\\n  const float e1 = 0.125;\\n  const vec4 v1 = vec4(0,0.23529411764705882,0.6666666666666666,1);\\n  const float e2 = 0.375;\\n  const vec4 v2 = vec4(0.0196078431372549,1,1,1);\\n  const float e3 = 0.625;\\n  const vec4 v3 = vec4(1,1,0,1);\\n  const float e4 = 0.875;\\n  const vec4 v4 = vec4(0.9803921568627451,0,0,1);\\n  const float e5 = 1.0;\\n  const vec4 v5 = vec4(0.5019607843137255,0,0,1);\\n  float a0 = smoothstep(e0,e1,x_623120303);\\n  float a1 = smoothstep(e1,e2,x_623120303);\\n  float a2 = smoothstep(e2,e3,x_623120303);\\n  float a3 = smoothstep(e3,e4,x_623120303);\\n  float a4 = smoothstep(e4,e5,x_623120303);\\n  return max(mix(v0,v1,a0)*step(e0,x_623120303)*step(x_623120303,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_623120303)*step(x_623120303,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_623120303)*step(x_623120303,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_623120303)*step(x_623120303,e4),mix(v4,v5,a4)*step(e4,x_623120303)*step(x_623120303,e5)\\n  ))));\\n}\\n\\nvec4 bone (float x_783795047) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 0.376;\\n  const vec4 v1 = vec4(0.32941176470588235,0.32941176470588235,0.4549019607843137,1);\\n  const float e2 = 0.753;\\n  const vec4 v2 = vec4(0.6627450980392157,0.7843137254901961,0.7843137254901961,1);\\n  const float e3 = 1.0;\\n  const vec4 v3 = vec4(1,1,1,1);\\n  float a0 = smoothstep(e0,e1,x_783795047);\\n  float a1 = smoothstep(e1,e2,x_783795047);\\n  float a2 = smoothstep(e2,e3,x_783795047);\\n  return max(mix(v0,v1,a0)*step(e0,x_783795047)*step(x_783795047,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_783795047)*step(x_783795047,e2),mix(v2,v3,a2)*step(e2,x_783795047)*step(x_783795047,e3)\\n  ));\\n}\\n\\nvec4 copper (float x_3932431844) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 0.804;\\n  const vec4 v1 = vec4(1,0.6274509803921569,0.4,1);\\n  const float e2 = 1.0;\\n  const vec4 v2 = vec4(1,0.7803921568627451,0.4980392156862745,1);\\n  float a0 = smoothstep(e0,e1,x_3932431844);\\n  float a1 = smoothstep(e1,e2,x_3932431844);\\n  return max(mix(v0,v1,a0)*step(e0,x_3932431844)*step(x_3932431844,e1),mix(v1,v2,a1)*step(e1,x_3932431844)*step(x_3932431844,e2)\\n  );\\n}\\n\\nvec4 density (float x_2921433544) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.21176470588235294,0.054901960784313725,0.1411764705882353,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.34901960784313724,0.09019607843137255,0.3137254901960784,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.43137254901960786,0.17647058823529413,0.5176470588235295,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.47058823529411764,0.30196078431372547,0.6980392156862745,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.47058823529411764,0.44313725490196076,0.8352941176470589,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.45098039215686275,0.592156862745098,0.8941176470588236,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.5254901960784314,0.7254901960784313,0.8901960784313725,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.6941176470588235,0.8392156862745098,0.8901960784313725,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9019607843137255,0.9450980392156862,0.9450980392156862,1);\\n  float a0 = smoothstep(e0,e1,x_2921433544);\\n  float a1 = smoothstep(e1,e2,x_2921433544);\\n  float a2 = smoothstep(e2,e3,x_2921433544);\\n  float a3 = smoothstep(e3,e4,x_2921433544);\\n  float a4 = smoothstep(e4,e5,x_2921433544);\\n  float a5 = smoothstep(e5,e6,x_2921433544);\\n  float a6 = smoothstep(e6,e7,x_2921433544);\\n  float a7 = smoothstep(e7,e8,x_2921433544);\\n  return max(mix(v0,v1,a0)*step(e0,x_2921433544)*step(x_2921433544,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_2921433544)*step(x_2921433544,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_2921433544)*step(x_2921433544,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_2921433544)*step(x_2921433544,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_2921433544)*step(x_2921433544,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_2921433544)*step(x_2921433544,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_2921433544)*step(x_2921433544,e7),mix(v7,v8,a7)*step(e7,x_2921433544)*step(x_2921433544,e8)\\n  )))))));\\n}\\n\\nvec4 inferno (float x_1987546174) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0.01568627450980392,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.12156862745098039,0.047058823529411764,0.2823529411764706,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.3333333333333333,0.058823529411764705,0.42745098039215684,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.5333333333333333,0.13333333333333333,0.41568627450980394,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.7294117647058823,0.21176470588235294,0.3333333333333333,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.8901960784313725,0.34901960784313724,0.2,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.9764705882352941,0.5490196078431373,0.0392156862745098,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.9764705882352941,0.788235294117647,0.19607843137254902,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9882352941176471,1,0.6431372549019608,1);\\n  float a0 = smoothstep(e0,e1,x_1987546174);\\n  float a1 = smoothstep(e1,e2,x_1987546174);\\n  float a2 = smoothstep(e2,e3,x_1987546174);\\n  float a3 = smoothstep(e3,e4,x_1987546174);\\n  float a4 = smoothstep(e4,e5,x_1987546174);\\n  float a5 = smoothstep(e5,e6,x_1987546174);\\n  float a6 = smoothstep(e6,e7,x_1987546174);\\n  float a7 = smoothstep(e7,e8,x_1987546174);\\n  return max(mix(v0,v1,a0)*step(e0,x_1987546174)*step(x_1987546174,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_1987546174)*step(x_1987546174,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_1987546174)*step(x_1987546174,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_1987546174)*step(x_1987546174,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_1987546174)*step(x_1987546174,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_1987546174)*step(x_1987546174,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_1987546174)*step(x_1987546174,e7),mix(v7,v8,a7)*step(e7,x_1987546174)*step(x_1987546174,e8)\\n  )))))));\\n}\\n\\nvec4 cool (float x_761030515) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.49019607843137253,0,0.7019607843137254,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.4549019607843137,0,0.8549019607843137,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.3843137254901961,0.2901960784313726,0.9294117647058824,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.26666666666666666,0.5725490196078431,0.9058823529411765,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0,0.8,0.7725490196078432,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0,0.9686274509803922,0.5725490196078431,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0,1,0.34509803921568627,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.1568627450980392,1,0.03137254901960784,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.5764705882352941,1,0,1);\\n  float a0 = smoothstep(e0,e1,x_761030515);\\n  float a1 = smoothstep(e1,e2,x_761030515);\\n  float a2 = smoothstep(e2,e3,x_761030515);\\n  float a3 = smoothstep(e3,e4,x_761030515);\\n  float a4 = smoothstep(e4,e5,x_761030515);\\n  float a5 = smoothstep(e5,e6,x_761030515);\\n  float a6 = smoothstep(e6,e7,x_761030515);\\n  float a7 = smoothstep(e7,e8,x_761030515);\\n  return max(mix(v0,v1,a0)*step(e0,x_761030515)*step(x_761030515,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_761030515)*step(x_761030515,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_761030515)*step(x_761030515,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_761030515)*step(x_761030515,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_761030515)*step(x_761030515,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_761030515)*step(x_761030515,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_761030515)*step(x_761030515,e7),mix(v7,v8,a7)*step(e7,x_761030515)*step(x_761030515,e8)\\n  )))))));\\n}\\n\\nvec4 hot (float x_180130041) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 0.3;\\n  const vec4 v1 = vec4(0.9019607843137255,0,0,1);\\n  const float e2 = 0.6;\\n  const vec4 v2 = vec4(1,0.8235294117647058,0,1);\\n  const float e3 = 1.0;\\n  const vec4 v3 = vec4(1,1,1,1);\\n  float a0 = smoothstep(e0,e1,x_180130041);\\n  float a1 = smoothstep(e1,e2,x_180130041);\\n  float a2 = smoothstep(e2,e3,x_180130041);\\n  return max(mix(v0,v1,a0)*step(e0,x_180130041)*step(x_180130041,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_180130041)*step(x_180130041,e2),mix(v2,v3,a2)*step(e2,x_180130041)*step(x_180130041,e3)\\n  ));\\n}\\n\\nvec4 spring (float x_755571360) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(1,0,1,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,0,1);\\n  float a0 = smoothstep(e0,e1,x_755571360);\\n  return mix(v0,v1,a0)*step(e0,x_755571360)*step(x_755571360,e1);\\n}\\n\\nvec4 summer (float x_2651158874) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0.5019607843137255,0.4,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,0.4,1);\\n  float a0 = smoothstep(e0,e1,x_2651158874);\\n  return mix(v0,v1,a0)*step(e0,x_2651158874)*step(x_2651158874,e1);\\n}\\n\\nvec4 autumn (float x_626866098) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(1,0,0,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,0,1);\\n  float a0 = smoothstep(e0,e1,x_626866098);\\n  return mix(v0,v1,a0)*step(e0,x_626866098)*step(x_626866098,e1);\\n}\\n\\nvec4 winter (float x_2098958741) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,1,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(0,1,0.5019607843137255,1);\\n  float a0 = smoothstep(e0,e1,x_2098958741);\\n  return mix(v0,v1,a0)*step(e0,x_2098958741)*step(x_2098958741,e1);\\n}\\n\\n// Data (mask) texture\\nuniform sampler2D channel0;\\nuniform sampler2D channel1;\\nuniform sampler2D channel2;\\nuniform sampler2D channel3;\\nuniform sampler2D channel4;\\nuniform sampler2D channel5;\\n\\n// Color texture\\nuniform sampler2D colorTex;\\nuniform float colorTexHeight;\\nuniform float colorTexWidth;\\nuniform float hovered;\\n// range\\nuniform bool channelsVisible[6];\\n\\n// Expression mapping\\nuniform vec2 uColorScaleRange;\\nuniform bool uIsExpressionMode;\\nuniform sampler2D expressionTex;\\n\\n// opacity\\nuniform float opacity;\\n\\nvarying vec2 vTexCoord;\\n\\nvec4 sampleAndGetColor(sampler2D dataTex, vec2 coord, bool isOn){\\n  float sampledData = texture(dataTex, coord).r;\\n  vec4 hoveredColor = float(sampledData == hovered && sampledData > 0. && hovered > 0.) * vec4(0., 0., 1., 1.);\\n  // Colors are laid out corresponding to ids in row-major order in the texture.  So if width of the texture is 10, and you want ID 25,\\n  // you need coordinate (1, 4) (i.e 2 rows down, and 5 columns over indexed from 0 for a total of 25 units covered in row major order).\\n  vec2 colorTexCoord = vec2(mod(sampledData, colorTexWidth) / colorTexWidth, floor(sampledData / colorTexWidth) / (colorTexHeight - 1.));\\n  float expressionValue = texture(expressionTex, colorTexCoord).r / 255.;\\n  float scaledExpressionValue = (expressionValue - uColorScaleRange[0]) / max(0.005, (uColorScaleRange[1] - uColorScaleRange[0]));\\n  vec4 sampledColor = float(uIsExpressionMode) * COLORMAP_FUNC(clamp(scaledExpressionValue, 0.0, 1.0)) +  (1. - float(uIsExpressionMode)) * vec4(texture(colorTex, colorTexCoord).rgb, 1.);\\n  // Only return a color if the data is non-zero.\\n  return max(0., min(sampledData, 1.)) * float(isOn) * (sampledColor + hoveredColor);\\n}\\n\\nvoid main() {\\n\\n  gl_FragColor = sampleAndGetColor(channel0, vTexCoord, channelsVisible[0]);\\n\\n  // If the sampled color and the currently stored color (gl_FragColor) are identical, don't blend and use the sampled color,\\n  // otherwise just use the currently stored color.  Repeat this for all channels.\\n  vec4 sampledColor = sampleAndGetColor(channel1, vTexCoord, channelsVisible[1]);\\n  gl_FragColor = (sampledColor == gl_FragColor || sampledColor == vec4(0.)) ? gl_FragColor : sampledColor;\\n  sampledColor = sampleAndGetColor(channel2, vTexCoord, channelsVisible[2]);\\n  gl_FragColor = (sampledColor == gl_FragColor || sampledColor == vec4(0.)) ? gl_FragColor : sampledColor;\\n  sampledColor = sampleAndGetColor(channel3, vTexCoord, channelsVisible[3]);\\n  gl_FragColor = (sampledColor == gl_FragColor || sampledColor == vec4(0.)) ? gl_FragColor : sampledColor;\\n  sampledColor = sampleAndGetColor(channel4, vTexCoord, channelsVisible[4]);\\n  gl_FragColor = (sampledColor == gl_FragColor || sampledColor == vec4(0.)) ? gl_FragColor : sampledColor;\\n  sampledColor = sampleAndGetColor(channel5, vTexCoord, channelsVisible[5]);\\n  gl_FragColor = (sampledColor == gl_FragColor || sampledColor == vec4(0.)) ? gl_FragColor : sampledColor;\\n  // Apply the opacity if there is pixel data, and if the pixel data is empty i.e no segmentation, use 0 opacity.\\n  gl_FragColor = vec4(gl_FragColor.rgb, (gl_FragColor.rgb == vec3(0., 0., 0.)) ? 0.0 : opacity);\\n\\n  geometry.uv = vTexCoord;\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\";", "import { getChannelStats } from '@hms-dbmi/viv';\nimport { Matrix4 } from 'math.gl';\n\nasync function getSingleSelectionStats2D({ loader, selection }) {\n  const data = Array.isArray(loader) ? loader[loader.length - 1] : loader;\n  const raster = await data.getRaster({ selection });\n  const selectionStats = getChannelStats(raster.data);\n  const { domain, contrastLimits: slider } = selectionStats;\n  return { domain, slider };\n}\n\nasync function getSingleSelectionStats3D({ loader, selection }) {\n  const lowResSource = loader[loader.length - 1];\n  const { shape, labels } = lowResSource;\n  // eslint-disable-next-line no-bitwise\n  const sizeZ = shape[labels.indexOf('z')] >> (loader.length - 1);\n  const raster0 = await lowResSource.getRaster({\n    selection: { ...selection, z: 0 },\n  });\n  const rasterMid = await lowResSource.getRaster({\n    selection: { ...selection, z: Math.floor(sizeZ / 2) },\n  });\n  const rasterTop = await lowResSource.getRaster({\n    selection: { ...selection, z: Math.max(0, sizeZ - 1) },\n  });\n  const stats0 = getChannelStats(raster0.data);\n  const statsMid = getChannelStats(rasterMid.data);\n  const statsTop = getChannelStats(rasterTop.data);\n  return {\n    domain: [\n      Math.min(stats0.domain[0], statsMid.domain[0], statsTop.domain[0]),\n      Math.max(stats0.domain[1], statsMid.domain[1], statsTop.domain[1]),\n    ],\n    slider: [\n      Math.min(\n        stats0.contrastLimits[0],\n        statsMid.contrastLimits[0],\n        statsTop.contrastLimits[0],\n      ),\n      Math.max(\n        stats0.contrastLimits[1],\n        statsMid.contrastLimits[1],\n        statsTop.contrastLimits[1],\n      ),\n    ],\n  };\n}\n\n/**\n * Get bounding cube for a given loader i.e [[0, width], [0, height], [0, depth]]\n * @param {Object} loader PixelSource|PixelSource[]\n * @param {[]} selection Selection for stats.\n * @param {boolean} use3d Whether or not to get 3d stats.\n * @returns {Object} { domains, sliders }\n */\nexport const getSingleSelectionStats = async ({ loader, selection, use3d }) => {\n  const getStats = use3d\n    ? getSingleSelectionStats3D\n    : getSingleSelectionStats2D;\n  return getStats({ loader, selection });\n};\n\nexport const getMultiSelectionStats = async ({ loader, selections, use3d }) => {\n  const stats = await Promise.all(\n    selections.map(selection => getSingleSelectionStats({ loader, selection, use3d })),\n  );\n  const domains = stats.map(stat => stat.domain);\n  const sliders = stats.map(stat => stat.slider);\n  return { domains, sliders };\n};\n\n/**\n * Get physical size scaling Matrix4\n * @param {Object} loader PixelSource\n * @returns {Object} matrix\n */\nexport function getPhysicalSizeScalingMatrix(loader) {\n  const { x, y, z } = loader?.meta?.physicalSizes ?? {};\n  if (x?.size && y?.size && z?.size) {\n    const min = Math.min(z.size, x.size, y.size);\n    const ratio = [x.size / min, y.size / min, z.size / min];\n    return new Matrix4().scale(ratio);\n  }\n  return new Matrix4().identity();\n}\n\n/**\n * Get bounding cube for a given loader\n * @param {Object} loader PixelSource|PixelSource[]\n * @returns {Array} [0, width], [0, height], [0, depth]]\n */\nexport function getBoundingCube(loader) {\n  const source = Array.isArray(loader) ? loader[0] : loader;\n  const { shape, labels } = source;\n  const physicalSizeScalingMatrix = getPhysicalSizeScalingMatrix(source);\n  const xSlice = [0, physicalSizeScalingMatrix[0] * shape[labels.indexOf('x')]];\n  const ySlice = [0, physicalSizeScalingMatrix[5] * shape[labels.indexOf('y')]];\n  const zSlice = [\n    0,\n    physicalSizeScalingMatrix[10] * shape[labels.indexOf('z')],\n  ];\n  return [xSlice, ySlice, zSlice];\n}\n\nexport function abbreviateNumber(value) {\n  // Return an abbreviated representation of value, in 5 characters or less.\n\n  const maxLength = 5;\n  let maxNaiveDigits = maxLength;\n\n  /* eslint-disable no-plusplus */\n  if (!Number.isInteger(value)) {\n    --maxNaiveDigits;\n  } // Wasted on \".\"\n  if (value < 1) {\n    --maxNaiveDigits;\n  } // Wasted on \"0.\"\n  /* eslint-disable no-plusplus */\n\n  const naive = Intl.NumberFormat('en-US', {\n    maximumSignificantDigits: maxNaiveDigits,\n    useGrouping: false,\n  }).format(value);\n  if (naive.length <= maxLength) return naive;\n\n  // \"e+9\" consumes 3 characters, so if we even had two significant digits,\n  // it would take take us to six characters, including the decimal point.\n  return value.toExponential(0);\n}\n", "import React, { PureComponent } from 'react';\nimport DeckGL, { OrthographicView, OrbitView } from 'deck.gl';\nimport ToolMenu from './ToolMenu';\nimport { DEFAULT_GL_OPTIONS } from '../utils';\nimport { getCursor, getCursorWithTool } from './cursor';\n\n/**\n * Abstract class component intended to be inherited by\n * the Spatial and Scatterplot class components.\n * Contains a common constructor, common DeckGL callbacks,\n * and common render function.\n */\nexport default class AbstractSpatialOrScatterplot extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gl: null,\n      tool: null,\n    };\n\n    this.viewport = null;\n\n    this.onViewStateChange = this.onViewStateChange.bind(this);\n    this.onInitializeViewInfo = this.onInitializeViewInfo.bind(this);\n    this.onWebGLInitialized = this.onWebGLInitialized.bind(this);\n    this.onToolChange = this.onToolChange.bind(this);\n    this.onHover = this.onHover.bind(this);\n  }\n\n  /**\n   * Called by DeckGL upon a viewState change,\n   * for example zoom or pan interaction.\n   * Emit the new viewState to the `setViewState`\n   * handler prop.\n   * @param {object} params\n   * @param {object} params.viewState The next deck.gl viewState.\n   */\n  onViewStateChange({ viewState: nextViewState }) {\n    const {\n      setViewState, viewState, layers, spatialAxisFixed,\n    } = this.props;\n    const use3d = layers?.some(l => l.use3d);\n    setViewState({\n      ...nextViewState,\n      // If the axis is fixed, just use the current target in state i.e don't change target.\n      target: spatialAxisFixed && use3d ? viewState.target : nextViewState.target,\n    });\n  }\n\n  /**\n   * Called by DeckGL upon viewport\n   * initialization.\n   * @param {object} viewState\n   * @param {object} viewState.viewport\n   */\n  onInitializeViewInfo({ viewport }) {\n    this.viewport = viewport;\n  }\n\n  /**\n   * Called by DeckGL upon initialization,\n   * helps to understand when to pass layers\n   * to the DeckGL component.\n   * @param {object} gl The WebGL context object.\n   */\n  onWebGLInitialized(gl) {\n    this.setState({ gl });\n  }\n\n  /**\n   * Called by the ToolMenu buttons.\n   * Emits the new tool value to the\n   * `onToolChange` prop.\n   * @param {string} tool Name of tool.\n   */\n  onToolChange(tool) {\n    const { onToolChange: onToolChangeProp } = this.props;\n    this.setState({ tool });\n    if (onToolChangeProp) {\n      onToolChangeProp(tool);\n    }\n  }\n\n  /**\n   * Create the DeckGL layers.\n   * @returns {object[]} Array of\n   * DeckGL layer objects.\n   * Intended to be overriden by descendants.\n   */\n  // eslint-disable-next-line class-methods-use-this\n  getLayers() {\n    return [];\n  }\n\n  // eslint-disable-next-line consistent-return\n  onHover(info) {\n    const {\n      coordinate, sourceLayer: layer, tile,\n    } = info;\n    const {\n      setCellHighlight, cellHighlight, setComponentHover, layers,\n    } = this.props;\n    const hasBitmask = (layers || []).some(l => l.type === 'bitmask');\n    if (!setCellHighlight || !tile) {\n      return null;\n    }\n    if (!layer || !coordinate) {\n      if (cellHighlight && hasBitmask) {\n        setCellHighlight(null);\n      }\n      return null;\n    }\n    const { content, bbox, z } = tile;\n    if (!content) {\n      if (cellHighlight && hasBitmask) {\n        setCellHighlight(null);\n      }\n      return null;\n    }\n    const { data, width, height } = content;\n    const {\n      left, right, top, bottom,\n    } = bbox;\n    const bounds = [\n      left,\n      data.height < layer.tileSize ? height : bottom,\n      data.width < layer.tileSize ? width : right,\n      top,\n    ];\n    if (!data) {\n      if (cellHighlight && hasBitmask) {\n        setCellHighlight(null);\n      }\n      return null;\n    }\n    // Tiled layer needs a custom layerZoomScale.\n    if (layer.id.includes('bitmask')) {\n      // The zoomed out layer needs to use the fixed zoom at which it is rendered.\n      const layerZoomScale = Math.max(\n        1,\n        2 ** Math.round(-z),\n      );\n      const dataCoords = [\n        Math.floor((coordinate[0] - bounds[0]) / layerZoomScale),\n        Math.floor((coordinate[1] - bounds[3]) / layerZoomScale),\n      ];\n      const coords = dataCoords[1] * width + dataCoords[0];\n      const hoverData = data.map(d => d[coords]);\n      const cellId = hoverData.find(i => i > 0);\n      if (cellId !== Number(cellHighlight)) {\n        if (setComponentHover) {\n          setComponentHover();\n        }\n        // eslint-disable-next-line no-unused-expressions\n        setCellHighlight(cellId ? String(cellId) : null);\n      }\n    }\n  }\n\n  /**\n   * Emits a function to project from the\n   * cell ID space to the scatterplot or\n   * spatial coordinate space, via the\n   * `updateViewInfo` prop.\n   */\n  viewInfoDidUpdate(getCellCoords) {\n    const { updateViewInfo, cells, uuid } = this.props;\n    const { viewport } = this;\n    if (updateViewInfo && viewport) {\n      updateViewInfo({\n        uuid,\n        project: (cellId) => {\n          const cell = cells[cellId];\n          try {\n            const [positionX, positionY] = getCellCoords(cell);\n            return viewport.project([positionX, positionY]);\n          } catch (e) {\n            return [null, null];\n          }\n        },\n      });\n    }\n  }\n\n  /**\n   * Intended to be overriden by descendants.\n   */\n  componentDidUpdate() {\n\n  }\n\n  /**\n   * A common render function for both Spatial\n   * and Scatterplot components.\n   */\n  render() {\n    const {\n      deckRef, viewState, uuid, layers: layerProps,\n    } = this.props;\n    const { gl, tool } = this.state;\n    const layers = this.getLayers();\n    const use3d = (layerProps || []).some(l => l.use3d);\n\n    const showCellSelectionTools = this.cellsLayer !== null\n      || (this.cellsEntries.length && this.cellsEntries[0][1].xy);\n    const showPanTool = this.cellsLayer !== null || layerProps.findIndex(l => l.type === 'bitmask' || l.type === 'raster') >= 0;\n    // For large datasets or ray casting, the visual quality takes only a small\n    // hit in exchange for much better performance by setting this to false:\n    // https://deck.gl/docs/api-reference/core/deck#usedevicepixels\n    const useDevicePixels = this.cellsEntries.length < 100000 && !use3d;\n\n    return (\n      <>\n        <ToolMenu\n          activeTool={tool}\n          setActiveTool={this.onToolChange}\n          visibleTools={{\n            pan: showPanTool,\n            selectRectangle: showCellSelectionTools,\n            selectLasso: showCellSelectionTools,\n          }}\n        />\n        <DeckGL\n          id={`deckgl-overlay-${uuid}`}\n          ref={deckRef}\n          views={[\n            use3d\n              ? new OrbitView({ id: 'orbit', controller: true, orbitAxis: 'Y' })\n              : new OrthographicView({\n                id: 'ortho',\n              }),\n          ]} // id is a fix for https://github.com/uber/deck.gl/issues/3259\n          layers={\n            gl && viewState.target.slice(0, 2).every(i => typeof i === 'number')\n              ? layers\n              : []\n          }\n          glOptions={DEFAULT_GL_OPTIONS}\n          onWebGLInitialized={this.onWebGLInitialized}\n          onViewStateChange={this.onViewStateChange}\n          viewState={viewState}\n          useDevicePixels={useDevicePixels}\n          controller={tool ? { dragPan: false } : true}\n          getCursor={tool ? getCursorWithTool : getCursor}\n          onHover={this.onHover}\n        >\n          {this.onInitializeViewInfo}\n        </DeckGL>\n      </>\n    );\n  }\n}\n", "import React from 'react';\nimport { SELECTION_TYPE } from 'nebula.gl';\nimport { ReactComponent as PointerIconSVG } from '../../assets/tools/near_me.svg';\nimport { ReactComponent as SelectRectangleIconSVG } from '../../assets/tools/selection_rectangle.svg';\nimport { ReactComponent as SelectLassoIconSVG } from '../../assets/tools/selection_lasso.svg';\n\nexport function IconButton(props) {\n  const {\n    alt, onClick, isActive, children,\n  } = props;\n  const inactive = 'btn btn-outline-secondary mr-2 icon';\n  const active = `${inactive} active`;\n  return (\n    <button\n      className={isActive ? active : inactive}\n      onClick={onClick}\n      type=\"button\"\n      title={alt}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default function ToolMenu(props) {\n  const {\n    setActiveTool,\n    activeTool,\n    visibleTools = { pan: true, selectRectangle: true, selectLasso: true },\n  } = props;\n  return (\n    <div className=\"tool\">\n      {visibleTools.pan && (\n      <IconButton\n        alt=\"pointer tool\"\n        onClick={() => setActiveTool(null)}\n        isActive={activeTool === null}\n      ><PointerIconSVG />\n      </IconButton>\n      )}\n      {visibleTools.selectRectangle ? (\n        <IconButton\n          alt=\"select rectangle\"\n          onClick={() => setActiveTool(SELECTION_TYPE.RECTANGLE)}\n          isActive={activeTool === SELECTION_TYPE.RECTANGLE}\n        ><SelectRectangleIconSVG />\n        </IconButton>\n      ) : null}\n      {visibleTools.selectLasso ? (\n        <IconButton\n          alt=\"select lasso\"\n          onClick={() => setActiveTool(SELECTION_TYPE.POLYGON)}\n          isActive={activeTool === SELECTION_TYPE.POLYGON}\n        ><SelectLassoIconSVG />\n        </IconButton>\n      ) : null}\n    </div>\n  );\n}\n", "import * as React from \"react\";\n\nfunction SvgNearMe(props) {\n  return <svg width={24} height={24} viewBox=\"0 0 24 24\" {...props}><path fill=\"none\" d=\"M0 0h24v24H0V0z\" /><path d=\"M21 3L3 10.53v.98l6.84 2.65L12.48 21h.98L21 3z\" /></svg>;\n}\n\nexport const ReactComponent = SvgNearMe;", "import * as React from \"react\";\n\nfunction SvgSelectionRectangle(props) {\n  return <svg width={24} height={24} viewBox=\"0 0 24 24\" {...props}><path d=\"       M19 19h2v2h-2v-2zm0-2h2v-2h-2v2z       M3 13h2v-2H3v2zm0 4h2v-2H3v2z       m0-8h2V7H3v2zm0-4h2V3H3v2z       m4 0h2V3H7v2zm8 16h2v-2h-2v2z       m-4 0h2v-2h-2v2z       m4 0h2v-2h-2v2z       m-8 0h2v-2H7v2z       m-4 0h2v-2H3v2z       M11 5h2v-2h-2v2z       M15 5h2v-2h-2v2z       M19 5h2v-2h-2v2z       M19 9h2v-2h-2v2z       M19 13h2v-2h-2v2z     \" /></svg>;\n}\n\nexport const ReactComponent = SvgSelectionRectangle;", "import * as React from \"react\";\n\nfunction SvgSelectionLasso(props) {\n  return <svg width={24} height={24} viewBox=\"0 0 24 24\" {...props}><g transform=\"translate(0,3)\"><path style={{\n        strokeWidth: 0.343565\n      }} d=\"M 23.942314,4.6958443 C 23.446206,1.8868581 19.727461,0 14.687364,0 13.437819,0 12.150138,0.11543779 10.859708,0.34287772 4.1629423,1.5250844 -0.58168816,5.2884937 0.05768601,8.911385 c 0.25355086,1.439193 1.35605049,2.63583 3.04638949,3.461072 -0.2569865,0.387198 -0.4074679,0.826617 -0.4074679,1.29524 0,1.337498 1.1863293,2.457176 2.7639791,2.728248 l -1.3615475,2.333149 c -0.1576963,0.271073 -0.066308,0.61876 0.2047647,0.776457 0.090014,0.05291 0.1886171,0.07799 0.2858459,0.07799 0.1951448,0 0.3851362,-0.100665 0.4912977,-0.281723 l 1.6803757,-2.88148 C 8.41868,16.20561 9.6895264,15.063601 9.6998333,13.683844 c 6.872e-4,-0.0055 0.00137,-0.01065 0.00137,-0.01615 0,-0.02336 -0.00344,-0.04569 -0.00481,-0.06837 1.1292977,-0.0213 2.2847067,-0.130211 3.4435507,-0.334975 6.69711,-1.181863 11.44174,-4.9456164 10.802366,-8.5685077 z M 3.83312,13.667353 c 0,-0.30749 0.1281497,-0.59849 0.3470005,-0.848261 0.1219655,0.04295 0.2456489,0.08383 0.3717372,0.123339 l 1.2234344,2.352045 C 4.6865351,15.149835 3.83312,14.46408 3.83312,13.667353 Z M 7.0141869,15.216144 6.0223152,13.309702 5.4008064,12.114097 c 0.121622,-0.03161 0.2477103,-0.05634 0.3772342,-0.07387 0.1367388,-0.0189 0.2772568,-0.02886 0.420867,-0.02886 0.5067581,0 0.980534,0.11956 1.3701366,0.317454 0.5696305,0.289968 0.9554538,0.750345 0.9904974,1.262944 0.00137,0.02542 0.0055,0.05016 0.0055,0.07593 0,0.698124 -0.6562089,1.310356 -1.5508518,1.548447 z m 5.9185921,-3.126441 c -1.217251,0.214728 -2.429691,0.323982 -3.6060571,0.324669 -0.5765018,-0.911821 -1.7614569,-1.53917 -3.1278143,-1.53917 -0.4717146,0 -0.921441,0.07593 -1.332001,0.211292 -0.3061162,0.100665 -0.5878394,0.237403 -0.8427645,0.39991 C 2.4598914,10.828133 1.4360682,9.8579062 1.2319907,8.7035283 0.72660678,5.8381974 5.2307418,2.5475333 11.067221,1.5175259 c 1.222061,-0.2161023 2.439998,-0.3246688 3.620143,-0.3246688 4.371863,0 7.694479,1.5250844 8.080645,3.7101568 0.505041,2.8653309 -3.998751,6.1566821 -9.83523,7.1866891 z\" id=\"path10\" /></g></svg>;\n}\n\nexport const ReactComponent = SvgSelectionLasso;", "export const getCursorWithTool = () => 'crosshair';\nexport const getCursor = interactionState => (interactionState.isDragging\n  ? 'grabbing' : 'default'\n);\n", "import { quadtree } from 'd3-quadtree';\n\n/**\n * Create a d3-quadtree object for cells data points.\n * @param {array} cellsEntries Array of [cellId, cell] tuples,\n * resulting from running Object.entries on the cells object.\n * @param {function} getCellCoords Given a cell object, return the\n * spatial/scatterplot coordinates [x, y].\n * @returns {object} Quadtree instance.\n */\nexport function createCellsQuadTree(cellsEntries, getCellCoords) {\n  // Use the cellsEntries variable since it is already\n  // an array, converted by Object.entries().\n  // Only use cellsEntries in quadtree calculation if there is\n  // centroid data in the cells (i.e not just ids).\n  // eslint-disable-next-line no-unused-vars\n  if (!cellsEntries || !cellsEntries.length || !getCellCoords(cellsEntries[0][1])) {\n    // Abort if the cells data is not yet available.\n    return null;\n  }\n  const tree = quadtree()\n    .x(d => getCellCoords(d[1])[0])\n    .y(d => getCellCoords(d[1])[1])\n    .addAll(cellsEntries);\n  return tree;\n}\n", "/* eslint-disable no-underscore-dangle */\n/* eslint-disable import/no-extraneous-dependencies */\nimport GL from '@luma.gl/constants';\nimport { LayerExtension } from '@deck.gl/core';\nimport { GLSL_COLORMAPS, GLSL_COLORMAP_DEFAULT, COLORMAP_SHADER_PLACEHOLDER } from '../../layers/constants';\nimport module from './shader-module';\n\nconst defaultProps = {\n  colormap: { type: 'string', value: GLSL_COLORMAP_DEFAULT, compare: true },\n  colorScaleLo: { type: 'number', value: 0.0, compare: true },\n  colorScaleHi: { type: 'number', value: 1.0, compare: true },\n  isExpressionMode: false,\n  getExpressionValue: { type: 'accessor', value: 0 },\n  getSelectionState: { type: 'accessor', value: 0.0 },\n};\n\nexport default class ScaledExpressionExtension extends LayerExtension {\n  getShaders() {\n    const { colormap } = this.props;\n    return {\n      modules: [module],\n      defines: {\n        [COLORMAP_SHADER_PLACEHOLDER]: GLSL_COLORMAPS.includes(colormap)\n          ? colormap\n          : GLSL_COLORMAP_DEFAULT,\n      },\n    };\n  }\n\n  updateState({ props, oldProps }) {\n    if (props.colormap !== oldProps.colormap) {\n      const { gl } = this.context;\n      // Normal single model layers, like ScatterplotLayer\n      if (this.state.model) {\n        // eslint-disable-next-line no-unused-expressions\n        this.state.model?.delete();\n        this.state.model = this._getModel(gl);\n      } else {\n        // Special handling for PolygonLayer sublayer models.\n        if (this.state.models) {\n          // eslint-disable-next-line no-unused-expressions\n          this.state.models?.forEach(model => model?.delete());\n        }\n        if (this.state.topModel) {\n           // eslint-disable-next-line no-unused-expressions\n           this.state.topModel?.delete();\n        }\n        if (this.state.sideModel) {\n           // eslint-disable-next-line no-unused-expressions\n           this.state.sideModel?.delete();\n        }\n        if (this._getModels) {\n          this.setState(this._getModels(this.context.gl));\n        }\n      }\n      const attributeManager = this.getAttributeManager();\n      if (attributeManager) {\n        this.getAttributeManager().invalidateAll();\n      }\n    }\n  }\n\n  initializeState() {\n    const layer = this.getCurrentLayer();\n    // No need to run this on layers that don't have a `draw` call.\n    if (layer.isComposite) {\n      return;\n    }\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      // This attributes is the array of expression data needed for\n      // coloring cells against the colormap.\n      attributeManager.add({\n        expressionValue: {\n          type: GL.FLOAT,\n          size: 1,\n          transition: true,\n          accessor: 'getExpressionValue',\n          defaultValue: 1,\n          // PolygonLayer fill needs not-intsanced attribute but\n          // ScatterplotLayer and the PolygonLayer stroke needs instanced.\n          // So use another attribute's divisor property as a proxy for this divisor.\n          divisor: Object.values(attributeManager.attributes)[0].settings.divisor,\n        },\n      });\n    }\n  }\n\n  draw() {\n    const {\n      colorScaleLo,\n      colorScaleHi,\n      isExpressionMode,\n    } = this.props;\n    const {\n      topModel, sideModel, models, model,\n    } = this.state;\n    const uniforms = {\n      uColorScaleRange: [colorScaleLo, colorScaleHi],\n      uIsExpressionMode: isExpressionMode,\n    };\n    // ScatterplotLayer model\n    // eslint-disable-next-line no-unused-expressions\n    model?.setUniforms(uniforms);\n\n    // PolygonLayer models from sublayers\n    // eslint-disable-next-line no-unused-expressions\n    models?.forEach(m => m.setUniforms(uniforms));\n    // eslint-disable-next-line no-unused-expressions\n    topModel?.setUniforms(uniforms);\n    // eslint-disable-next-line no-unused-expressions\n    sideModel?.setUniforms(uniforms);\n  }\n}\n\nScaledExpressionExtension.extensionName = 'ScaledExpressionExtension';\nScaledExpressionExtension.defaultProps = defaultProps;\n", "/**\n *\n * Reference: https://github.com/visgl/deck.gl/blob/8.4-release/modules/layers/src/scatterplot-layer/scatterplot-layer-vertex.glsl.js\n * Reference: https://observablehq.com/@rreusser/selecting-the-right-opacity-for-2d-point-clouds\n * Reference: https://github.com/flekschas/regl-scatterplot/blob/5e3b03e/src/point.vs\n */\nvar vs = \"\\nvec4 plasma (float x_1648624884) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.050980392156862744,0.03137254901960784,0.5294117647058824,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.29411764705882354,0.011764705882352941,0.6313725490196078,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.49019607843137253,0.011764705882352941,0.6588235294117647,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.6588235294117647,0.13333333333333333,0.5882352941176471,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.796078431372549,0.27450980392156865,0.4745098039215686,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.8980392156862745,0.4196078431372549,0.36470588235294116,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.9725490196078431,0.5803921568627451,0.2549019607843137,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.9921568627450981,0.7647058823529411,0.1568627450980392,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9411764705882353,0.9764705882352941,0.12941176470588237,1);\\n  float a0 = smoothstep(e0,e1,x_1648624884);\\n  float a1 = smoothstep(e1,e2,x_1648624884);\\n  float a2 = smoothstep(e2,e3,x_1648624884);\\n  float a3 = smoothstep(e3,e4,x_1648624884);\\n  float a4 = smoothstep(e4,e5,x_1648624884);\\n  float a5 = smoothstep(e5,e6,x_1648624884);\\n  float a6 = smoothstep(e6,e7,x_1648624884);\\n  float a7 = smoothstep(e7,e8,x_1648624884);\\n  return max(mix(v0,v1,a0)*step(e0,x_1648624884)*step(x_1648624884,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_1648624884)*step(x_1648624884,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_1648624884)*step(x_1648624884,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_1648624884)*step(x_1648624884,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_1648624884)*step(x_1648624884,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_1648624884)*step(x_1648624884,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_1648624884)*step(x_1648624884,e7),mix(v7,v8,a7)*step(e7,x_1648624884)*step(x_1648624884,e8)\\n  )))))));\\n}\\n\\nvec4 viridis (float x_686877309) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.26666666666666666,0.00392156862745098,0.32941176470588235,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.2784313725490196,0.17254901960784313,0.47843137254901963,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.23137254901960785,0.3176470588235294,0.5450980392156862,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.17254901960784313,0.44313725490196076,0.5568627450980392,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.12941176470588237,0.5647058823529412,0.5529411764705883,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.15294117647058825,0.6784313725490196,0.5058823529411764,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.3607843137254902,0.7843137254901961,0.38823529411764707,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.6666666666666666,0.8627450980392157,0.19607843137254902,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9921568627450981,0.9058823529411765,0.1450980392156863,1);\\n  float a0 = smoothstep(e0,e1,x_686877309);\\n  float a1 = smoothstep(e1,e2,x_686877309);\\n  float a2 = smoothstep(e2,e3,x_686877309);\\n  float a3 = smoothstep(e3,e4,x_686877309);\\n  float a4 = smoothstep(e4,e5,x_686877309);\\n  float a5 = smoothstep(e5,e6,x_686877309);\\n  float a6 = smoothstep(e6,e7,x_686877309);\\n  float a7 = smoothstep(e7,e8,x_686877309);\\n  return max(mix(v0,v1,a0)*step(e0,x_686877309)*step(x_686877309,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_686877309)*step(x_686877309,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_686877309)*step(x_686877309,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_686877309)*step(x_686877309,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_686877309)*step(x_686877309,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_686877309)*step(x_686877309,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_686877309)*step(x_686877309,e7),mix(v7,v8,a7)*step(e7,x_686877309)*step(x_686877309,e8)\\n  )))))));\\n}\\n\\nvec4 greys (float x_3692066534) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,1,1);\\n  float a0 = smoothstep(e0,e1,x_3692066534);\\n  return mix(v0,v1,a0)*step(e0,x_3692066534)*step(x_3692066534,e1);\\n}\\n\\nvec4 magma (float x_652973032) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0.01568627450980392,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.10980392156862745,0.06274509803921569,0.26666666666666666,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.30980392156862746,0.07058823529411765,0.4823529411764706,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.5058823529411764,0.1450980392156863,0.5058823529411764,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.7098039215686275,0.21176470588235294,0.47843137254901963,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.8980392156862745,0.3137254901960784,0.39215686274509803,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.984313725490196,0.5294117647058824,0.3803921568627451,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.996078431372549,0.7607843137254902,0.5294117647058824,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9882352941176471,0.9921568627450981,0.7490196078431373,1);\\n  float a0 = smoothstep(e0,e1,x_652973032);\\n  float a1 = smoothstep(e1,e2,x_652973032);\\n  float a2 = smoothstep(e2,e3,x_652973032);\\n  float a3 = smoothstep(e3,e4,x_652973032);\\n  float a4 = smoothstep(e4,e5,x_652973032);\\n  float a5 = smoothstep(e5,e6,x_652973032);\\n  float a6 = smoothstep(e6,e7,x_652973032);\\n  float a7 = smoothstep(e7,e8,x_652973032);\\n  return max(mix(v0,v1,a0)*step(e0,x_652973032)*step(x_652973032,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_652973032)*step(x_652973032,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_652973032)*step(x_652973032,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_652973032)*step(x_652973032,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_652973032)*step(x_652973032,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_652973032)*step(x_652973032,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_652973032)*step(x_652973032,e7),mix(v7,v8,a7)*step(e7,x_652973032)*step(x_652973032,e8)\\n  )))))));\\n}\\n\\nvec4 jet (float x_799389509) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0.5137254901960784,1);\\n  const float e1 = 0.125;\\n  const vec4 v1 = vec4(0,0.23529411764705882,0.6666666666666666,1);\\n  const float e2 = 0.375;\\n  const vec4 v2 = vec4(0.0196078431372549,1,1,1);\\n  const float e3 = 0.625;\\n  const vec4 v3 = vec4(1,1,0,1);\\n  const float e4 = 0.875;\\n  const vec4 v4 = vec4(0.9803921568627451,0,0,1);\\n  const float e5 = 1.0;\\n  const vec4 v5 = vec4(0.5019607843137255,0,0,1);\\n  float a0 = smoothstep(e0,e1,x_799389509);\\n  float a1 = smoothstep(e1,e2,x_799389509);\\n  float a2 = smoothstep(e2,e3,x_799389509);\\n  float a3 = smoothstep(e3,e4,x_799389509);\\n  float a4 = smoothstep(e4,e5,x_799389509);\\n  return max(mix(v0,v1,a0)*step(e0,x_799389509)*step(x_799389509,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_799389509)*step(x_799389509,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_799389509)*step(x_799389509,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_799389509)*step(x_799389509,e4),mix(v4,v5,a4)*step(e4,x_799389509)*step(x_799389509,e5)\\n  ))));\\n}\\n\\nvec4 bone (float x_1404936397) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 0.376;\\n  const vec4 v1 = vec4(0.32941176470588235,0.32941176470588235,0.4549019607843137,1);\\n  const float e2 = 0.753;\\n  const vec4 v2 = vec4(0.6627450980392157,0.7843137254901961,0.7843137254901961,1);\\n  const float e3 = 1.0;\\n  const vec4 v3 = vec4(1,1,1,1);\\n  float a0 = smoothstep(e0,e1,x_1404936397);\\n  float a1 = smoothstep(e1,e2,x_1404936397);\\n  float a2 = smoothstep(e2,e3,x_1404936397);\\n  return max(mix(v0,v1,a0)*step(e0,x_1404936397)*step(x_1404936397,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_1404936397)*step(x_1404936397,e2),mix(v2,v3,a2)*step(e2,x_1404936397)*step(x_1404936397,e3)\\n  ));\\n}\\n\\nvec4 copper (float x_41650866) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 0.804;\\n  const vec4 v1 = vec4(1,0.6274509803921569,0.4,1);\\n  const float e2 = 1.0;\\n  const vec4 v2 = vec4(1,0.7803921568627451,0.4980392156862745,1);\\n  float a0 = smoothstep(e0,e1,x_41650866);\\n  float a1 = smoothstep(e1,e2,x_41650866);\\n  return max(mix(v0,v1,a0)*step(e0,x_41650866)*step(x_41650866,e1),mix(v1,v2,a1)*step(e1,x_41650866)*step(x_41650866,e2)\\n  );\\n}\\n\\nvec4 density (float x_681601952) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.21176470588235294,0.054901960784313725,0.1411764705882353,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.34901960784313724,0.09019607843137255,0.3137254901960784,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.43137254901960786,0.17647058823529413,0.5176470588235295,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.47058823529411764,0.30196078431372547,0.6980392156862745,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.47058823529411764,0.44313725490196076,0.8352941176470589,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.45098039215686275,0.592156862745098,0.8941176470588236,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.5254901960784314,0.7254901960784313,0.8901960784313725,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.6941176470588235,0.8392156862745098,0.8901960784313725,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9019607843137255,0.9450980392156862,0.9450980392156862,1);\\n  float a0 = smoothstep(e0,e1,x_681601952);\\n  float a1 = smoothstep(e1,e2,x_681601952);\\n  float a2 = smoothstep(e2,e3,x_681601952);\\n  float a3 = smoothstep(e3,e4,x_681601952);\\n  float a4 = smoothstep(e4,e5,x_681601952);\\n  float a5 = smoothstep(e5,e6,x_681601952);\\n  float a6 = smoothstep(e6,e7,x_681601952);\\n  float a7 = smoothstep(e7,e8,x_681601952);\\n  return max(mix(v0,v1,a0)*step(e0,x_681601952)*step(x_681601952,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_681601952)*step(x_681601952,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_681601952)*step(x_681601952,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_681601952)*step(x_681601952,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_681601952)*step(x_681601952,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_681601952)*step(x_681601952,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_681601952)*step(x_681601952,e7),mix(v7,v8,a7)*step(e7,x_681601952)*step(x_681601952,e8)\\n  )))))));\\n}\\n\\nvec4 inferno (float x_902288871) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0.01568627450980392,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.12156862745098039,0.047058823529411764,0.2823529411764706,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.3333333333333333,0.058823529411764705,0.42745098039215684,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.5333333333333333,0.13333333333333333,0.41568627450980394,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.7294117647058823,0.21176470588235294,0.3333333333333333,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.8901960784313725,0.34901960784313724,0.2,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.9764705882352941,0.5490196078431373,0.0392156862745098,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.9764705882352941,0.788235294117647,0.19607843137254902,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9882352941176471,1,0.6431372549019608,1);\\n  float a0 = smoothstep(e0,e1,x_902288871);\\n  float a1 = smoothstep(e1,e2,x_902288871);\\n  float a2 = smoothstep(e2,e3,x_902288871);\\n  float a3 = smoothstep(e3,e4,x_902288871);\\n  float a4 = smoothstep(e4,e5,x_902288871);\\n  float a5 = smoothstep(e5,e6,x_902288871);\\n  float a6 = smoothstep(e6,e7,x_902288871);\\n  float a7 = smoothstep(e7,e8,x_902288871);\\n  return max(mix(v0,v1,a0)*step(e0,x_902288871)*step(x_902288871,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_902288871)*step(x_902288871,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_902288871)*step(x_902288871,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_902288871)*step(x_902288871,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_902288871)*step(x_902288871,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_902288871)*step(x_902288871,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_902288871)*step(x_902288871,e7),mix(v7,v8,a7)*step(e7,x_902288871)*step(x_902288871,e8)\\n  )))))));\\n}\\n\\nvec4 cool (float x_2444426143) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.49019607843137253,0,0.7019607843137254,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.4549019607843137,0,0.8549019607843137,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.3843137254901961,0.2901960784313726,0.9294117647058824,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.26666666666666666,0.5725490196078431,0.9058823529411765,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0,0.8,0.7725490196078432,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0,0.9686274509803922,0.5725490196078431,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0,1,0.34509803921568627,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.1568627450980392,1,0.03137254901960784,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.5764705882352941,1,0,1);\\n  float a0 = smoothstep(e0,e1,x_2444426143);\\n  float a1 = smoothstep(e1,e2,x_2444426143);\\n  float a2 = smoothstep(e2,e3,x_2444426143);\\n  float a3 = smoothstep(e3,e4,x_2444426143);\\n  float a4 = smoothstep(e4,e5,x_2444426143);\\n  float a5 = smoothstep(e5,e6,x_2444426143);\\n  float a6 = smoothstep(e6,e7,x_2444426143);\\n  float a7 = smoothstep(e7,e8,x_2444426143);\\n  return max(mix(v0,v1,a0)*step(e0,x_2444426143)*step(x_2444426143,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_2444426143)*step(x_2444426143,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_2444426143)*step(x_2444426143,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_2444426143)*step(x_2444426143,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_2444426143)*step(x_2444426143,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_2444426143)*step(x_2444426143,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_2444426143)*step(x_2444426143,e7),mix(v7,v8,a7)*step(e7,x_2444426143)*step(x_2444426143,e8)\\n  )))))));\\n}\\n\\nvec4 hot (float x_1123650753) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 0.3;\\n  const vec4 v1 = vec4(0.9019607843137255,0,0,1);\\n  const float e2 = 0.6;\\n  const vec4 v2 = vec4(1,0.8235294117647058,0,1);\\n  const float e3 = 1.0;\\n  const vec4 v3 = vec4(1,1,1,1);\\n  float a0 = smoothstep(e0,e1,x_1123650753);\\n  float a1 = smoothstep(e1,e2,x_1123650753);\\n  float a2 = smoothstep(e2,e3,x_1123650753);\\n  return max(mix(v0,v1,a0)*step(e0,x_1123650753)*step(x_1123650753,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_1123650753)*step(x_1123650753,e2),mix(v2,v3,a2)*step(e2,x_1123650753)*step(x_1123650753,e3)\\n  ));\\n}\\n\\nvec4 spring (float x_3460271019) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(1,0,1,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,0,1);\\n  float a0 = smoothstep(e0,e1,x_3460271019);\\n  return mix(v0,v1,a0)*step(e0,x_3460271019)*step(x_3460271019,e1);\\n}\\n\\nvec4 summer (float x_1787574999) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0.5019607843137255,0.4,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,0.4,1);\\n  float a0 = smoothstep(e0,e1,x_1787574999);\\n  return mix(v0,v1,a0)*step(e0,x_1787574999)*step(x_1787574999,e1);\\n}\\n\\nvec4 autumn (float x_204634793) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(1,0,0,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,0,1);\\n  float a0 = smoothstep(e0,e1,x_204634793);\\n  return mix(v0,v1,a0)*step(e0,x_204634793)*step(x_204634793,e1);\\n}\\n\\nvec4 winter (float x_4071283602) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,1,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(0,1,0.5019607843137255,1);\\n  float a0 = smoothstep(e0,e1,x_4071283602);\\n  return mix(v0,v1,a0)*step(e0,x_4071283602)*step(x_4071283602,e1);\\n}\\n\\n// Custom attributes for Vitessce:\\nattribute float expressionValue;\\n\\n// Custom uniforms for Vitessce:\\nuniform vec2 uColorScaleRange;\\nuniform bool uIsExpressionMode;\\n\\n\";\nvar inject = {\n  'vs:DECKGL_FILTER_COLOR': \"\\n    if(uIsExpressionMode) {\\n      float normalizedExpressionValue = expressionValue / 255.0;\\n      float scaledExpressionValue = (normalizedExpressionValue - uColorScaleRange[0]) / max(0.005, (uColorScaleRange[1] - uColorScaleRange[0]));\\n      color.rgb = COLORMAP_FUNC(clamp(scaledExpressionValue, 0.0, 1.0)).rgb;\\n    }\\n  \"\n};\nexport default {\n  name: 'scaled-expression',\n  vs: vs,\n  inject: inject\n};", "import ScaledExpressionExtension from './ScaledExpressionExtension';\n\nexport default ScaledExpressionExtension;\n", "/* eslint-disable no-underscore-dangle */\n/* eslint-disable import/no-extraneous-dependencies */\nimport GL from '@luma.gl/constants';\nimport { LayerExtension } from '@deck.gl/core';\nimport module from './shader-module';\n\nexport default class SelectionExtension extends LayerExtension {\n  // eslint-disable-next-line class-methods-use-this\n  getShaders() {\n    return {\n      modules: [module],\n    };\n  }\n\n  initializeState(context, extension) {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.add({\n        isSelected: {\n          type: GL.FLOAT,\n          size: 1,\n          transition: true,\n          accessor: 'getCellIsSelected',\n          defaultValue: 1,\n          // PolygonLayer needs not-intsanced attribute but\n          // ScatterplotLayer needs instanced.\n          divisor: Number(extension.opts.instanced),\n        },\n      });\n    }\n  }\n}\n\nSelectionExtension.extensionName = 'SelectionExtension';\n", "var vs = \"\\nattribute float isSelected;\\n\";\nvar inject = {\n  'vs:DECKGL_FILTER_GL_POSITION': \"\\n    position.z += (1. - isSelected) * .00005; // Add a small z offset for unselected points in the positive direction i.e into the screen.\\n  \",\n  'fs:#main-start': \" // Gets rid of bad border effects (active after deck.gl 8.5): https://github.com/visgl/deck.gl/pull/6081\\n    float distToCenterNew = length(unitPosition) * outerRadiusPixels;\\n    float inCircleNew = step(distToCenterNew, outerRadiusPixels);\\n    if (inCircleNew == 0.0) {\\n      discard;\\n    }\\n  \"\n};\nexport default {\n  name: 'selection',\n  vs: vs,\n  inject: inject\n};", "import SelectionExtension from './SelectionExtension';\n\nexport default SelectionExtension;\n", "import React, { useCallback } from 'react';\nimport debounce from 'lodash/debounce';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport CellColorEncodingOption from '../shared-plot-options/CellColorEncodingOption';\nimport OptionSelect from '../shared-plot-options/OptionSelect';\nimport { GLSL_COLORMAPS } from '../../layers/constants';\n\nconst useToggleStyles = makeStyles(() => createStyles({\n  cameraLabel: {\n    padding: '0px 0px 0px 16px',\n  },\n  box: {\n    padding: '0px',\n  },\n  button: {\n    padding: '0px 0px 0px 8px',\n  },\n}));\n\nconst ToggleFixedAxisButton = ({\n  setSpatialAxisFixed,\n  spatialAxisFixed,\n  use3d,\n}) => {\n  const classes = useToggleStyles();\n  return (\n    <TableRow>\n      <TableCell className={classes.cameraLabel}>\n      Fix Camera Axis\n      </TableCell>\n      <TableCell className={classes.box}>\n        <Checkbox\n          onClick={() => setSpatialAxisFixed(!spatialAxisFixed)}\n          disabled={!use3d}\n          checked={Boolean(spatialAxisFixed)}\n        />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default function SpatialOptions(props) {\n  const {\n    observationsLabel,\n    cellColorEncoding,\n    setCellColorEncoding,\n    setSpatialAxisFixed,\n    spatialAxisFixed,\n    use3d,\n    geneExpressionColormap,\n    setGeneExpressionColormap,\n    geneExpressionColormapRange,\n    setGeneExpressionColormapRange,\n    canShowExpressionOptions,\n    canShowColorEncodingOption,\n    canShow3DOptions,\n  } = props;\n\n  function handleGeneExpressionColormapChange(event) {\n    setGeneExpressionColormap(event.target.value);\n  }\n\n  function handleColormapRangeChange(event, value) {\n    setGeneExpressionColormapRange(value);\n  }\n  const handleColormapRangeChangeDebounced = useCallback(\n    debounce(handleColormapRangeChange, 5, { trailing: true }),\n    [handleColormapRangeChange],\n  );\n\n  const classes = useStyles();\n\n  return (\n    <OptionsContainer>\n      {canShowColorEncodingOption ? (\n        <CellColorEncodingOption\n          observationsLabel={observationsLabel}\n          cellColorEncoding={cellColorEncoding}\n          setCellColorEncoding={setCellColorEncoding}\n        />\n      ) : null}\n      {canShow3DOptions ? (\n        <ToggleFixedAxisButton\n          setSpatialAxisFixed={setSpatialAxisFixed}\n          spatialAxisFixed={spatialAxisFixed}\n          use3d={use3d}\n        />\n      ) : null}\n      {canShowExpressionOptions ? (\n        <>\n          <TableRow>\n            <TableCell className={classes.labelCell} htmlFor=\"gene-expression-colormap-select\">\n          Gene Expression Colormap\n            </TableCell>\n            <TableCell className={classes.inputCell}>\n              <OptionSelect\n                className={classes.select}\n                value={geneExpressionColormap}\n                onChange={handleGeneExpressionColormapChange}\n                inputProps={{\n                  id: 'gene-expression-colormap-select',\n                }}\n              >\n                {GLSL_COLORMAPS.map(cmap => (\n                  <option key={cmap} value={cmap}>{cmap}</option>\n                ))}\n              </OptionSelect>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell className={classes.labelCell}>\n          Gene Expression Colormap Range\n            </TableCell>\n            <TableCell className={classes.inputCell}>\n              <Slider\n                classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n                value={geneExpressionColormapRange}\n                onChange={handleColormapRangeChangeDebounced}\n                aria-labelledby=\"gene-expression-colormap-range-slider\"\n                valueLabelDisplay=\"auto\"\n                step={0.005}\n                min={0.0}\n                max={1.0}\n              />\n            </TableCell>\n          </TableRow>\n        </>\n      ) : null}\n    </OptionsContainer>\n  );\n}\n", "import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { capitalize } from '../../utils';\nimport OptionSelect from './OptionSelect';\nimport { useStyles } from './styles';\n\nexport default function CellColorEncodingOption(props) {\n  const {\n    observationsLabel,\n    cellColorEncoding,\n    setCellColorEncoding,\n  } = props;\n\n  const classes = useStyles();\n\n  const observationsLabelNice = capitalize(observationsLabel);\n\n  function handleColorEncodingChange(event) {\n    setCellColorEncoding(event.target.value);\n  }\n\n  return (\n    <TableRow>\n      <TableCell className={classes.labelCell} htmlFor=\"cell-color-encoding-select\">\n        {observationsLabelNice} Color Encoding\n      </TableCell>\n      <TableCell className={classes.inputCell}>\n        <OptionSelect\n          className={classes.select}\n          value={cellColorEncoding}\n          onChange={handleColorEncodingChange}\n          inputProps={{\n            id: 'cell-color-encoding-select',\n          }}\n        >\n          <option value=\"cellSetSelection\">Cell Sets</option>\n          <option value=\"geneSelection\">Gene Expression</option>\n        </OptionSelect>\n      </TableCell>\n    </TableRow>\n  );\n}\n", "import React from 'react';\nimport Tooltip2D from '../tooltip/Tooltip2D';\nimport TooltipContent from '../tooltip/TooltipContent';\nimport { useComponentHover, useComponentViewInfo } from '../../app/state/hooks';\n\nexport default function SpatialTooltipSubscriber(props) {\n  const {\n    parentUuid,\n    cellHighlight,\n    width,\n    height,\n    getCellInfo,\n  } = props;\n\n  const sourceUuid = useComponentHover();\n  const viewInfo = useComponentViewInfo(parentUuid);\n\n  const [cellInfo, x, y] = (cellHighlight && getCellInfo ? (\n    [\n      getCellInfo(cellHighlight),\n      ...(viewInfo && viewInfo.project ? viewInfo.project(cellHighlight) : [null, null]),\n    ]\n  ) : ([null, null, null]));\n\n  return (\n    (cellInfo ? (\n      <Tooltip2D\n        x={x}\n        y={y}\n        parentUuid={parentUuid}\n        sourceUuid={sourceUuid}\n        parentWidth={width}\n        parentHeight={height}\n      >\n        <TooltipContent info={cellInfo} />\n      </Tooltip2D>\n    ) : null)\n  );\n}\n", "import React, {\n  useState, useEffect, useCallback, useMemo,\n} from 'react';\nimport { extent } from 'd3-array';\nimport isEqual from 'lodash/isEqual';\nimport TitleInfo from '../TitleInfo';\nimport { pluralize, capitalize } from '../../utils';\nimport {\n  useDeckCanvasSize, useReady, useUrls, useExpressionValueGetter,\n} from '../hooks';\nimport { setCellSelection, mergeCellSets } from '../utils';\nimport { getCellSetPolygons } from '../sets/cell-set-utils';\nimport {\n  useCellsData,\n  useCellSetsData,\n  useGeneSelection,\n  useExpressionAttrs,\n} from '../data-hooks';\nimport { getCellColors } from '../interpolate-colors';\nimport Scatterplot from './Scatterplot';\nimport ScatterplotTooltipSubscriber from './ScatterplotTooltipSubscriber';\nimport ScatterplotOptions from './ScatterplotOptions';\nimport {\n  useCoordination,\n  useLoaders,\n  useSetComponentHover,\n  useSetComponentViewInfo,\n} from '../../app/state/hooks';\nimport {\n  getPointSizeDevicePixels,\n  getPointOpacity,\n} from '../shared-spatial-scatterplot/dynamic-opacity';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\n\nconst SCATTERPLOT_DATA_TYPES = ['cells', 'expression-matrix', 'cell-sets'];\n\n/**\n * A subscriber component for the scatterplot.\n * @param {object} props\n * @param {number} props.uuid The unique identifier for this component.\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {boolean} props.disableTooltip Should the tooltip be disabled?\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title An override value for the component title.\n * @param {number} props.averageFillDensity Override the average fill density calculation\n * when using dynamic opacity mode.\n */\nexport default function ScatterplotSubscriber(props) {\n  const {\n    uuid,\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    disableTooltip = false,\n    observationsLabelOverride: observationsLabel = 'cell',\n    observationsPluralLabelOverride: observationsPluralLabel = `${observationsLabel}s`,\n    title: titleOverride,\n    // Average fill density for dynamic opacity calculation.\n    averageFillDensity,\n  } = props;\n\n  const loaders = useLoaders();\n  const setComponentHover = useSetComponentHover();\n  const setComponentViewInfo = useSetComponentViewInfo(uuid);\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    embeddingZoom: zoom,\n    embeddingTargetX: targetX,\n    embeddingTargetY: targetY,\n    embeddingTargetZ: targetZ,\n    embeddingType: mapping,\n    cellFilter,\n    cellHighlight,\n    geneSelection,\n    cellSetSelection,\n    cellSetColor,\n    cellColorEncoding,\n    additionalCellSets,\n    embeddingCellSetPolygonsVisible: cellSetPolygonsVisible,\n    embeddingCellSetLabelsVisible: cellSetLabelsVisible,\n    embeddingCellSetLabelSize: cellSetLabelSize,\n    embeddingCellRadius: cellRadiusFixed,\n    embeddingCellRadiusMode: cellRadiusMode,\n    embeddingCellOpacity: cellOpacityFixed,\n    embeddingCellOpacityMode: cellOpacityMode,\n    geneExpressionColormap,\n    geneExpressionColormapRange,\n  }, {\n    setEmbeddingZoom: setZoom,\n    setEmbeddingTargetX: setTargetX,\n    setEmbeddingTargetY: setTargetY,\n    setEmbeddingTargetZ: setTargetZ,\n    setCellFilter,\n    setCellSetSelection,\n    setCellHighlight,\n    setCellSetColor,\n    setCellColorEncoding,\n    setAdditionalCellSets,\n    setEmbeddingCellSetPolygonsVisible: setCellSetPolygonsVisible,\n    setEmbeddingCellSetLabelsVisible: setCellSetLabelsVisible,\n    setEmbeddingCellSetLabelSize: setCellSetLabelSize,\n    setEmbeddingCellRadius: setCellRadiusFixed,\n    setEmbeddingCellRadiusMode: setCellRadiusMode,\n    setEmbeddingCellOpacity: setCellOpacityFixed,\n    setEmbeddingCellOpacityMode: setCellOpacityMode,\n    setGeneExpressionColormap,\n    setGeneExpressionColormapRange,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.scatterplot, coordinationScopes);\n\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [width, height, deckRef] = useDeckCanvasSize();\n  const [\n    isReady,\n    setItemIsReady,\n    setItemIsNotReady, // eslint-disable-line no-unused-vars\n    resetReadyItems,\n  ] = useReady(\n    SCATTERPLOT_DATA_TYPES,\n  );\n\n  const title = titleOverride || `Scatterplot (${mapping})`;\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [cells, cellsCount] = useCellsData(loaders, dataset, setItemIsReady, addUrl, true);\n  const [cellSets] = useCellSetsData(\n    loaders,\n    dataset,\n    setItemIsReady,\n    addUrl,\n    false,\n    { setCellSetSelection, setCellSetColor },\n    { cellSetSelection, cellSetColor },\n  );\n  const [expressionData] = useGeneSelection(\n    loaders, dataset, setItemIsReady, false, geneSelection, setItemIsNotReady,\n  );\n  const [attrs] = useExpressionAttrs(\n    loaders, dataset, setItemIsReady, addUrl, false,\n  );\n\n  const [dynamicCellRadius, setDynamicCellRadius] = useState(cellRadiusFixed);\n  const [dynamicCellOpacity, setDynamicCellOpacity] = useState(cellOpacityFixed);\n\n  const mergedCellSets = useMemo(() => mergeCellSets(\n    cellSets, additionalCellSets,\n  ), [cellSets, additionalCellSets]);\n\n  const setCellSelectionProp = useCallback((v) => {\n    setCellSelection(\n      v, additionalCellSets, cellSetColor,\n      setCellSetSelection, setAdditionalCellSets, setCellSetColor,\n      setCellColorEncoding,\n    );\n  }, [additionalCellSets, cellSetColor, setCellColorEncoding,\n    setAdditionalCellSets, setCellSetColor, setCellSetSelection]);\n\n  const cellColors = useMemo(() => getCellColors({\n    cellColorEncoding,\n    expressionData: expressionData && expressionData[0],\n    geneSelection,\n    cellSets: mergedCellSets,\n    cellSetSelection,\n    cellSetColor,\n    expressionDataAttrs: attrs,\n    theme,\n  }), [cellColorEncoding, geneSelection, mergedCellSets, theme,\n    cellSetSelection, cellSetColor, expressionData, attrs]);\n\n  // cellSetPolygonCache is an array of tuples like [(key0, val0), (key1, val1), ...],\n  // where the keys are cellSetSelection arrays.\n  const [cellSetPolygonCache, setCellSetPolygonCache] = useState([]);\n  const cacheHas = (cache, key) => cache.findIndex(el => isEqual(el[0], key)) !== -1;\n  const cacheGet = (cache, key) => cache.find(el => isEqual(el[0], key))?.[1];\n  const cellSetPolygons = useMemo(() => {\n    if ((cellSetLabelsVisible || cellSetPolygonsVisible)\n      && !cacheHas(cellSetPolygonCache, cellSetSelection)\n      && mergedCellSets?.tree?.length\n      && Object.values(cells).length\n      && cellSetColor?.length) {\n      const newCellSetPolygons = getCellSetPolygons({\n        cells,\n        mapping,\n        cellSets: mergedCellSets,\n        cellSetSelection,\n        cellSetColor,\n        theme,\n      });\n      setCellSetPolygonCache(cache => [...cache, [cellSetSelection, newCellSetPolygons]]);\n      return newCellSetPolygons;\n    }\n    return cacheGet(cellSetPolygonCache, cellSetSelection) || [];\n  }, [cellSetPolygonsVisible, cellSetPolygonCache, cellSetLabelsVisible, theme,\n    cells, mapping, mergedCellSets, cellSetSelection, cellSetColor]);\n\n\n  const cellSelection = useMemo(() => Array.from(cellColors.keys()), [cellColors]);\n\n  const [xRange, yRange, xExtent, yExtent, numCells] = useMemo(() => {\n    const cellValues = cells && Object.values(cells);\n    if (cellValues?.length) {\n      const cellCoordinates = Object.values(cells)\n        .map(c => c.mappings[mapping]);\n      const xE = extent(cellCoordinates, c => c[0]);\n      const yE = extent(cellCoordinates, c => c[1]);\n      const xR = xE[1] - xE[0];\n      const yR = yE[1] - yE[0];\n      return [xR, yR, xE, yE, cellValues.length];\n    }\n    return [null, null, null, null, null];\n  }, [cells, mapping]);\n\n  // After cells have loaded or changed,\n  // compute the cell radius scale based on the\n  // extents of the cell coordinates on the x/y axes.\n  useEffect(() => {\n    if (xRange && yRange) {\n      const pointSizeDevicePixels = getPointSizeDevicePixels(\n        window.devicePixelRatio, zoom, xRange, yRange, width, height,\n      );\n      setDynamicCellRadius(pointSizeDevicePixels);\n\n      const nextCellOpacityScale = getPointOpacity(\n        zoom, xRange, yRange, width, height, numCells, averageFillDensity,\n      );\n      setDynamicCellOpacity(nextCellOpacityScale);\n\n      if (typeof targetX !== 'number' || typeof targetY !== 'number') {\n        const newTargetX = xExtent[0] + xRange / 2;\n        const newTargetY = yExtent[0] + yRange / 2;\n        const newZoom = Math.log2(Math.min(width / xRange, height / yRange));\n        setTargetX(newTargetX);\n        // Graphics rendering has the y-axis going south so we need to multiply by negative one.\n        setTargetY(-newTargetY);\n        setZoom(newZoom);\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [xRange, yRange, xExtent, yExtent, numCells, cells, mapping,\n    width, height, zoom, averageFillDensity]);\n\n  const getCellInfo = useCallback((cellId) => {\n    const cellInfo = cells[cellId];\n    return {\n      [`${capitalize(observationsLabel)} ID`]: cellId,\n      ...(cellInfo ? cellInfo.factors : {}),\n    };\n  }, [cells, observationsLabel]);\n\n  const cellSelectionSet = useMemo(() => new Set(cellSelection), [cellSelection]);\n  const getCellIsSelected = useCallback(cellEntry => (\n    (cellSelectionSet || new Set([])).has(cellEntry[0]) ? 1.0 : 0.0), [cellSelectionSet]);\n\n  const cellRadius = (cellRadiusMode === 'manual' ? cellRadiusFixed : dynamicCellRadius);\n  const cellOpacity = (cellOpacityMode === 'manual' ? cellOpacityFixed : dynamicCellOpacity);\n\n  // Set up a getter function for gene expression values, to be used\n  // by the DeckGL layer to obtain values for instanced attributes.\n  const getExpressionValue = useExpressionValueGetter({ attrs, expressionData });\n\n  return (\n    <TitleInfo\n      title={title}\n      info={`${cellsCount} ${pluralize(observationsLabel, observationsPluralLabel, cellsCount)}`}\n      removeGridComponent={removeGridComponent}\n      urls={urls}\n      theme={theme}\n      isReady={isReady}\n      options={(\n        <ScatterplotOptions\n          observationsLabel={observationsLabel}\n          cellRadius={cellRadiusFixed}\n          setCellRadius={setCellRadiusFixed}\n          cellRadiusMode={cellRadiusMode}\n          setCellRadiusMode={setCellRadiusMode}\n          cellOpacity={cellOpacityFixed}\n          setCellOpacity={setCellOpacityFixed}\n          cellOpacityMode={cellOpacityMode}\n          setCellOpacityMode={setCellOpacityMode}\n          cellSetLabelsVisible={cellSetLabelsVisible}\n          setCellSetLabelsVisible={setCellSetLabelsVisible}\n          cellSetLabelSize={cellSetLabelSize}\n          setCellSetLabelSize={setCellSetLabelSize}\n          cellSetPolygonsVisible={cellSetPolygonsVisible}\n          setCellSetPolygonsVisible={setCellSetPolygonsVisible}\n          cellColorEncoding={cellColorEncoding}\n          setCellColorEncoding={setCellColorEncoding}\n          geneExpressionColormap={geneExpressionColormap}\n          setGeneExpressionColormap={setGeneExpressionColormap}\n          geneExpressionColormapRange={geneExpressionColormapRange}\n          setGeneExpressionColormapRange={setGeneExpressionColormapRange}\n        />\n      )}\n    >\n      <Scatterplot\n        ref={deckRef}\n        uuid={uuid}\n        theme={theme}\n        viewState={{ zoom, target: [targetX, targetY, targetZ] }}\n        setViewState={({ zoom: newZoom, target }) => {\n          setZoom(newZoom);\n          setTargetX(target[0]);\n          setTargetY(target[1]);\n          setTargetZ(target[2] || 0);\n        }}\n        cells={cells}\n        mapping={mapping}\n        cellFilter={cellFilter}\n        cellSelection={cellSelection}\n        cellHighlight={cellHighlight}\n        cellColors={cellColors}\n        cellSetPolygons={cellSetPolygons}\n        cellSetLabelSize={cellSetLabelSize}\n        cellSetLabelsVisible={cellSetLabelsVisible}\n        cellSetPolygonsVisible={cellSetPolygonsVisible}\n        setCellFilter={setCellFilter}\n        setCellSelection={setCellSelectionProp}\n        setCellHighlight={setCellHighlight}\n        cellRadius={cellRadius}\n        cellOpacity={cellOpacity}\n        cellColorEncoding={cellColorEncoding}\n        geneExpressionColormap={geneExpressionColormap}\n        geneExpressionColormapRange={geneExpressionColormapRange}\n        setComponentHover={() => {\n          setComponentHover(uuid);\n        }}\n        updateViewInfo={setComponentViewInfo}\n        getExpressionValue={getExpressionValue}\n        getCellIsSelected={getCellIsSelected}\n\n      />\n      {!disableTooltip && (\n      <ScatterplotTooltipSubscriber\n        parentUuid={uuid}\n        cellHighlight={cellHighlight}\n        width={width}\n        height={height}\n        getCellInfo={getCellInfo}\n      />\n      )}\n    </TitleInfo>\n  );\n}\n", "import React, { forwardRef } from 'react';\nimport { PolygonLayer, TextLayer, ScatterplotLayer } from '@deck.gl/layers'; // eslint-disable-line import/no-extraneous-dependencies\nimport { forceSimulation } from 'd3-force';\nimport { getSelectionLayers } from '../../layers';\nimport { cellLayerDefaultProps, getDefaultColor } from '../utils';\nimport {\n  createCellsQuadTree,\n} from '../shared-spatial-scatterplot/quadtree';\nimport AbstractSpatialOrScatterplot from '../shared-spatial-scatterplot/AbstractSpatialOrScatterplot';\nimport { forceCollideRects } from '../shared-spatial-scatterplot/force-collide-rects';\nimport { ScaledExpressionExtension, SelectionExtension } from '../../layer-extensions';\n\nconst CELLS_LAYER_ID = 'scatterplot';\nconst LABEL_FONT_FAMILY = \"-apple-system, 'Helvetica Neue', Arial, sans-serif\";\nconst NUM_FORCE_SIMULATION_TICKS = 100;\nconst LABEL_UPDATE_ZOOM_DELTA = 0.25;\n\n// Default getter function props.\nconst makeDefaultGetCellPosition = mapping => (cellEntry) => {\n  const { mappings } = cellEntry[1];\n  if (!(mapping in mappings)) {\n    const available = Object.keys(mappings).map(s => `\"${s}\"`).join(', ');\n    throw new Error(`Expected to find \"${mapping}\", but available mappings are: ${available}`);\n  }\n  const mappedCell = mappings[mapping];\n  // The negative applied to the y-axis is because\n  // graphics rendering has the y-axis positive going south.\n  return [mappedCell[0], -mappedCell[1], 0];\n};\nconst makeDefaultGetCellCoords = mapping => cell => cell.mappings[mapping];\nconst makeDefaultGetCellColors = (cellColors, theme) => (cellEntry) => {\n  const [r, g, b, a] = (cellColors && cellColors.get(cellEntry[0])) || getDefaultColor(theme);\n  return [r, g, b, 255 * (a || 1)];\n};\n\n/**\n * React component which renders a scatterplot from cell data, typically tSNE or PCA.\n * @param {object} props\n * @param {string} props.uuid A unique identifier for this component.\n * @param {string} props.theme The current vitessce theme.\n * @param {object} props.viewState The deck.gl view state.\n * @param {function} props.setViewState Function to call to update the deck.gl view state.\n * @param {object} props.cells\n * @param {string} props.mapping The name of the coordinate mapping field,\n * for each cell, for example \"PCA\" or \"t-SNE\".\n * @param {Map} props.cellColors Mapping of cell IDs to colors.\n * @param {array} props.cellSelection Array of selected cell IDs.\n * @param {array} props.cellFilter Array of filtered cell IDs. By default, null.\n * @param {number} props.cellRadius The value for `radiusScale` to pass\n * to the deck.gl cells ScatterplotLayer.\n * @param {number} props.cellOpacity The value for `opacity` to pass\n * to the deck.gl cells ScatterplotLayer.\n * @param {function} props.getCellCoords Getter function for cell coordinates\n * (used by the selection layer).\n * @param {function} props.getCellPosition Getter function for cell [x, y, z] position.\n * @param {function} props.getCellColor Getter function for cell color as [r, g, b] array.\n * @param {function} props.getCellIsSelected Getter function for cell layer isSelected.\n * @param {function} props.setCellSelection\n * @param {function} props.setCellHighlight\n * @param {function} props.updateViewInfo\n * @param {function} props.onToolChange Callback for tool changes\n * (lasso/pan/rectangle selection tools).\n * @param {function} props.onCellClick Getter function for cell layer onClick.\n */\nclass Scatterplot extends AbstractSpatialOrScatterplot {\n  constructor(props) {\n    super(props);\n\n    // To avoid storing large arrays/objects\n    // in React state, this component\n    // uses instance variables.\n    // All instance variables used in this class:\n    this.cellsEntries = [];\n    this.cellsQuadTree = null;\n    this.cellsLayer = null;\n    this.cellSetsForceSimulation = forceCollideRects();\n    this.cellSetsLabelPrevZoom = null;\n    this.cellSetsLayers = [];\n\n    // Initialize data and layers.\n    this.onUpdateCellsData();\n    this.onUpdateCellsLayer();\n    this.onUpdateCellSetsLayers();\n  }\n\n  createCellsLayer() {\n    const { cellsEntries } = this;\n    const {\n      theme,\n      mapping,\n      getCellPosition = makeDefaultGetCellPosition(mapping),\n      cellRadius = 1.0,\n      cellOpacity = 1.0,\n      cellFilter,\n      cellSelection,\n      setCellHighlight,\n      setComponentHover,\n      getCellIsSelected,\n      cellColors,\n      getCellColor = makeDefaultGetCellColors(cellColors, theme),\n      getExpressionValue,\n      onCellClick,\n      geneExpressionColormap,\n      geneExpressionColormapRange = [0.0, 1.0],\n      cellColorEncoding,\n    } = this.props;\n    const filteredCellsEntries = (cellFilter\n      ? cellsEntries.filter(cellEntry => cellFilter.includes(cellEntry[0]))\n      : cellsEntries);\n    return new ScatterplotLayer({\n      id: CELLS_LAYER_ID,\n      backgroundColor: (theme === 'dark' ? [0, 0, 0] : [241, 241, 241]),\n      getCellIsSelected,\n      opacity: cellOpacity,\n      radiusScale: cellRadius,\n      radiusMinPixels: 1,\n      radiusMaxPixels: 30,\n      // Our radius pixel setters measure in pixels.\n      radiusUnits: 'pixels',\n      getPosition: getCellPosition,\n      getFillColor: getCellColor,\n      getLineColor: getCellColor,\n      getRadius: 1,\n      getExpressionValue,\n      getLineWidth: 0,\n      extensions: [\n        new ScaledExpressionExtension(),\n        new SelectionExtension({ instanced: true }),\n      ],\n      colorScaleLo: geneExpressionColormapRange[0],\n      colorScaleHi: geneExpressionColormapRange[1],\n      isExpressionMode: (cellColorEncoding === 'geneSelection'),\n      colormap: geneExpressionColormap,\n      onClick: (info) => {\n        if (onCellClick) {\n          onCellClick(info);\n        }\n      },\n      updateTriggers: {\n        getExpressionValue,\n        getFillColor: [cellColorEncoding, cellSelection, cellColors],\n        getLineColor: [cellColorEncoding, cellSelection, cellColors],\n        getCellIsSelected,\n      },\n      ...cellLayerDefaultProps(\n        filteredCellsEntries, undefined, setCellHighlight, setComponentHover,\n      ),\n      stroked: 0,\n    });\n  }\n\n  createCellSetsLayers() {\n    const {\n      theme,\n      cellSetPolygons,\n      viewState,\n      cellSetPolygonsVisible,\n      cellSetLabelsVisible,\n      cellSetLabelSize,\n    } = this.props;\n\n    const result = [];\n\n    if (cellSetPolygonsVisible) {\n      result.push(new PolygonLayer({\n        id: 'cell-sets-polygon-layer',\n        data: cellSetPolygons,\n        stroked: true,\n        filled: false,\n        wireframe: true,\n        lineWidthMaxPixels: 1,\n        getPolygon: d => d.hull,\n        getLineColor: d => d.color,\n        getLineWidth: 1,\n      }));\n    }\n\n    if (cellSetLabelsVisible) {\n      const { zoom } = viewState;\n      const nodes = cellSetPolygons.map(p => ({\n        x: p.centroid[0],\n        y: p.centroid[1],\n        label: p.name,\n      }));\n\n      const collisionForce = this.cellSetsForceSimulation\n        .size(d => ([\n          cellSetLabelSize * 1 / (2 ** zoom) * 4 * d.label.length,\n          cellSetLabelSize * 1 / (2 ** zoom) * 1.5,\n        ]));\n\n      forceSimulation()\n        .nodes(nodes)\n        .force('collision', collisionForce)\n        .tick(NUM_FORCE_SIMULATION_TICKS);\n\n      result.push(new TextLayer({\n        id: 'cell-sets-text-layer',\n        data: nodes,\n        getPosition: d => ([d.x, d.y]),\n        getText: d => d.label,\n        getColor: (theme === 'dark' ? [255, 255, 255] : [0, 0, 0]),\n        getSize: cellSetLabelSize,\n        getAngle: 0,\n        getTextAnchor: 'middle',\n        getAlignmentBaseline: 'center',\n        fontFamily: LABEL_FONT_FAMILY,\n        fontWeight: 'normal',\n      }));\n    }\n\n    return result;\n  }\n\n  createSelectionLayers() {\n    const {\n      viewState,\n      mapping,\n      getCellCoords = makeDefaultGetCellCoords(mapping),\n      setCellSelection,\n    } = this.props;\n    const { tool } = this.state;\n    const { cellsQuadTree } = this;\n    const flipYTooltip = true;\n    return getSelectionLayers(\n      tool,\n      viewState.zoom,\n      CELLS_LAYER_ID,\n      getCellCoords,\n      setCellSelection,\n      cellsQuadTree,\n      flipYTooltip,\n    );\n  }\n\n  getLayers() {\n    const {\n      cellsLayer,\n      cellSetsLayers,\n    } = this;\n    return [\n      cellsLayer,\n      ...cellSetsLayers,\n      ...this.createSelectionLayers(),\n    ];\n  }\n\n  onUpdateCellsData() {\n    const {\n      cells = {},\n      mapping,\n      getCellCoords = makeDefaultGetCellCoords(mapping),\n    } = this.props;\n    const cellsEntries = Object.entries(cells);\n    this.cellsEntries = cellsEntries;\n    this.cellsQuadTree = createCellsQuadTree(cellsEntries, getCellCoords);\n  }\n\n  onUpdateCellsLayer() {\n    this.cellsLayer = this.createCellsLayer();\n  }\n\n  onUpdateCellSetsLayers(onlyViewStateChange) {\n    // Because the label sizes for the force simulation depend on the zoom level,\n    // we _could_ run the simulation every time the zoom level changes.\n    // However, this has a performance impact in firefox.\n    if (onlyViewStateChange) {\n      const { viewState, cellSetLabelsVisible } = this.props;\n      const { zoom } = viewState;\n      const { cellSetsLabelPrevZoom } = this;\n      // Instead, we can just check if the zoom level has changed\n      // by some relatively large delta, to be more conservative\n      // about re-running the force simulation.\n      if (cellSetLabelsVisible\n        && (\n          cellSetsLabelPrevZoom === null\n          || Math.abs(cellSetsLabelPrevZoom - zoom) > LABEL_UPDATE_ZOOM_DELTA\n        )\n      ) {\n        this.cellSetsLayers = this.createCellSetsLayers();\n        this.cellSetsLabelPrevZoom = zoom;\n      }\n    } else {\n      // Otherwise, something more substantial than just\n      // the viewState has changed, such as the label array\n      // itself, so we always want to update the layer\n      // in this case.\n      this.cellSetsLayers = this.createCellSetsLayers();\n    }\n  }\n\n  viewInfoDidUpdate() {\n    const {\n      mapping,\n      getCellPosition = makeDefaultGetCellPosition(mapping),\n    } = this.props;\n    super.viewInfoDidUpdate(cell => getCellPosition([null, cell]));\n  }\n\n  /**\n   * Here, asynchronously check whether props have\n   * updated which require re-computing memoized variables,\n   * followed by a re-render.\n   * This function does not follow React conventions or paradigms,\n   * it is only implemented this way to try to squeeze out\n   * performance.\n   * @param {object} prevProps The previous props to diff against.\n   */\n  componentDidUpdate(prevProps) {\n    this.viewInfoDidUpdate();\n\n    const shallowDiff = propName => (prevProps[propName] !== this.props[propName]);\n    if (['cells'].some(shallowDiff)) {\n      // Cells data changed.\n      this.onUpdateCellsData();\n      this.forceUpdate();\n    }\n\n    if ([\n      'cells', 'cellFilter', 'cellSelection', 'cellColors',\n      'cellRadius', 'cellOpacity', 'cellRadiusMode', 'geneExpressionColormap',\n      'geneExpressionColormapRange', 'geneSelection', 'cellColorEncoding',\n    ].some(shallowDiff)) {\n      // Cells layer props changed.\n      this.onUpdateCellsLayer();\n      this.forceUpdate();\n    }\n    if ([\n      'cellSetPolygons', 'cellSetPolygonsVisible',\n      'cellSetLabelsVisible', 'cellSetLabelSize',\n    ].some(shallowDiff)) {\n      // Cell sets layer props changed.\n      this.onUpdateCellSetsLayers(false);\n      this.forceUpdate();\n    }\n    if (shallowDiff('viewState')) {\n      // The viewState prop has changed (due to zoom or pan).\n      this.onUpdateCellSetsLayers(true);\n      this.forceUpdate();\n    }\n  }\n\n  // render() is implemented in the abstract parent class.\n}\n\n/**\n * Need this wrapper function here,\n * since we want to pass a forwardRef\n * so that outer components can\n * access the grandchild DeckGL ref,\n * but we are using a class component.\n */\nconst ScatterplotWrapper = forwardRef((props, deckRef) => (\n  <Scatterplot\n    {...props}\n    deckRef={deckRef}\n  />\n));\nexport default ScatterplotWrapper;\n", "/* eslint-disable no-plusplus */\n/* eslint-disable no-param-reassign */\nimport { quadtree } from 'd3-quadtree';\n\n/**\n * Returns a closure that returns a constant value.\n */\nfunction constant(v) {\n  return (() => v);\n}\n\n/**\n * Adds a tiny bit of randomness to a number.\n */\nfunction jiggle(v) {\n  return v + (Math.random() - 0.5) * 1e-6;\n}\n\n/**\n * A force function to be used with d3.forceSimulation.\n * This has been adapted for use here, with comments explaining each part.\n * Reference: https://bl.ocks.org/cmgiven/547658968d365bcc324f3e62e175709b\n */\nexport function forceCollideRects() {\n  // D3 implements things with function prototypes rather than classes.\n  // Pretend these variables are the \"instance members\" of a class.\n  // Note that this function actually returns the internal force() function,\n  // but that the force() function is a closure with access to these instance members.\n\n  let nodes;\n  let masses;\n  let strength = 1;\n  let iterations = 1;\n\n  let sizes;\n  let size = constant([0, 0]);\n\n  // Given a node, return the center point along the x-axis.\n  function xCenter(d) {\n    return d.x + d.vx + sizes[d.index][0] / 2;\n  }\n\n  // Given a node, return the center point along the y-axis.\n  function yCenter(d) {\n    return d.y + d.vy + sizes[d.index][1] / 2;\n  }\n\n  // Given a quadtree node, initialize its .size property.\n  function prepare(quad) {\n    if (quad.data) {\n      // This is a leaf node, so we set quad.size to the node's size.\n      // (No need to compute the max of internal nodes,\n      // since leaf nodes do not have any internal nodes).\n      quad.size = sizes[quad.data.index];\n    } else {\n      quad.size = [0, 0];\n      // Internal nodes of the quadtree are represented\n      // as four-element arrays in left-to-right, top-to-bottom order.\n      // Here, we are setting quad.size to [maxWidth, maxHeight]\n      // among the internal nodes of this current `quad` node.\n      for (let i = 0; i < 4; i++) {\n        if (quad[i] && quad[i].size) {\n          quad.size[0] = Math.max(quad.size[0], quad[i].size[0]);\n          quad.size[1] = Math.max(quad.size[1], quad[i].size[1]);\n        }\n      }\n    }\n  }\n\n  function force() {\n    let node;\n    let nodeSize;\n    let nodeMass;\n    let xi;\n    let yi;\n\n    // Create a quadtree based on node center points.\n    // Initialize each quadtree node's .size property by calling\n    // the prepare() function on each quadtree node.\n    const tree = quadtree(nodes, xCenter, yCenter).visitAfter(prepare);\n\n    // Update the .vx and .vy properties of both `node` and `data`\n    // (the current node pair).\n    function apply(quad, x0, y0, x1, y1) {\n      // `quad` is a quadtree node.\n      const { data } = quad;\n      const xSize = (nodeSize[0] + quad.size[0]) / 2;\n      const ySize = (nodeSize[1] + quad.size[1]) / 2;\n\n      if (data && data.index > node.index) {\n        // This is a leaf node because `data` is defined.\n        // `x` is the difference in x centers between `node` and `data`.\n        // `y` is the difference in y centers between `node` and `data`.\n        let x = jiggle(xi - xCenter(data));\n        let y = jiggle(yi - yCenter(data));\n        const xd = Math.abs(x) - xSize;\n        const yd = Math.abs(y) - ySize;\n\n        // If `xd` and `yd` is less than zero,\n        // then there is an overlap between the two nodes.\n        if (xd < 0 && yd < 0) {\n          const l = Math.sqrt(x * x + y * y);\n          const m = masses[data.index] / (nodeMass + masses[data.index]);\n\n          // We move the nodes either in the x or y direction.\n          // Nodes are moved proportionally to:\n          // their distance apart (`l`), their amount of overlap (`xd` or `yd`), their masses (`m`),\n          // and the strength parameter (`strength`).\n          if (Math.abs(xd) < Math.abs(yd)) {\n            node.vx -= (x *= xd / l * strength) * m;\n            data.vx += x * (1 - m);\n          } else {\n            node.vy -= (y *= yd / l * strength) * m;\n            data.vy += y * (1 - m);\n          }\n        }\n        // When the quadtree.visit callback returns _true_ for a node,\n        // then the node's children will _not_ be visited.\n        return x0 > xi + xSize || x1 < xi - xSize || y0 > yi + ySize || y1 < yi - ySize;\n      }\n      return false;\n    }\n\n    function iterate() {\n      // On every iteration, use the `apply` function to visit every node\n      // which has an index greater than the current node's index,\n      // (visiting every node pair).\n      for (let j = 0; j < nodes.length; j++) {\n        node = nodes[j];\n        nodeSize = sizes[j];\n        nodeMass = masses[j];\n        xi = xCenter(node);\n        yi = yCenter(node);\n\n        tree.visit(apply);\n      }\n    }\n\n    // Do the specified number of iterations.\n    for (let i = 0; i < iterations; i++) {\n      iterate();\n    }\n  }\n\n  // The \"constructor\".\n  // Takes a list of nodes as input.\n  force.initialize = (v) => {\n    nodes = v;\n    // Get the size [w, h] of each node using the size getter function.\n    sizes = nodes.map(size);\n    // Get the mass of each node,\n    // which is the sum of its horizontal and vertical edge lengths.\n    masses = sizes.map(d => d[0] + d[1]);\n  };\n\n  // Set the number of iterations.\n  // If no value is provided as a parameter, this acts as a getter function.\n  force.iterations = (...v) => {\n    if (v.length) {\n      iterations = +v[0];\n      return force;\n    }\n    return iterations;\n  };\n\n  // Set the strength value.\n  // If no value is provided as a parameter, this acts as a getter function.\n  force.strength = (...v) => {\n    if (v.length) {\n      strength = +v[0];\n      return force;\n    }\n    return strength;\n  };\n\n  // Set the size function.\n  // The size function takes a node as a parameter and returns its size.\n  // If no size function is provided as a parameter, this acts as a getter function.\n  force.size = (...v) => {\n    if (v.length) {\n      size = (typeof v[0] === 'function' ? v[0] : constant(v[0]));\n      return force;\n    }\n    return size;\n  };\n\n  // Returns the force closure.\n  return force;\n}\n", "import React from 'react';\nimport Tooltip2D from '../tooltip/Tooltip2D';\nimport TooltipContent from '../tooltip/TooltipContent';\nimport { useComponentHover, useComponentViewInfo } from '../../app/state/hooks';\n\nexport default function ScatterplotTooltipSubscriber(props) {\n  const {\n    parentUuid,\n    cellHighlight,\n    width,\n    height,\n    getCellInfo,\n  } = props;\n\n  const sourceUuid = useComponentHover();\n  const viewInfo = useComponentViewInfo(parentUuid);\n\n  const [cellInfo, x, y] = (cellHighlight && getCellInfo ? (\n    [\n      getCellInfo(cellHighlight),\n      ...(viewInfo && viewInfo.project ? viewInfo.project(cellHighlight) : [null, null]),\n    ]\n  ) : ([null, null, null]));\n\n  return (\n    (cellInfo ? (\n      <Tooltip2D\n        x={x}\n        y={y}\n        parentUuid={parentUuid}\n        sourceUuid={sourceUuid}\n        parentWidth={width}\n        parentHeight={height}\n      >\n        <TooltipContent info={cellInfo} />\n      </Tooltip2D>\n    ) : null)\n  );\n}\n", "import React, { useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Slider from '@material-ui/core/Slider';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { capitalize } from '../../utils';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport OptionSelect from '../shared-plot-options/OptionSelect';\nimport CellColorEncodingOption from '../shared-plot-options/CellColorEncodingOption';\nimport { GLSL_COLORMAPS } from '../../layers/constants';\n\nexport default function ScatterplotOptions(props) {\n  const {\n    observationsLabel,\n    cellRadius,\n    setCellRadius,\n    cellRadiusMode,\n    setCellRadiusMode,\n    cellOpacity,\n    setCellOpacity,\n    cellOpacityMode,\n    setCellOpacityMode,\n    cellSetLabelsVisible,\n    setCellSetLabelsVisible,\n    cellSetLabelSize,\n    setCellSetLabelSize,\n    cellSetPolygonsVisible,\n    setCellSetPolygonsVisible,\n    cellColorEncoding,\n    setCellColorEncoding,\n    geneExpressionColormap,\n    setGeneExpressionColormap,\n    geneExpressionColormapRange,\n    setGeneExpressionColormapRange,\n  } = props;\n\n  const observationsLabelNice = capitalize(observationsLabel);\n\n  const classes = useStyles();\n\n  function handleCellRadiusModeChange(event) {\n    setCellRadiusMode(event.target.value);\n  }\n\n  function handleCellOpacityModeChange(event) {\n    setCellOpacityMode(event.target.value);\n  }\n\n  function handleRadiusChange(event, value) {\n    setCellRadius(value);\n  }\n\n  function handleOpacityChange(event, value) {\n    setCellOpacity(value);\n  }\n\n  function handleLabelVisibilityChange(event) {\n    setCellSetLabelsVisible(event.target.checked);\n  }\n\n  function handleLabelSizeChange(event, value) {\n    setCellSetLabelSize(value);\n  }\n\n  function handlePolygonVisibilityChange(event) {\n    setCellSetPolygonsVisible(event.target.checked);\n  }\n\n  function handleGeneExpressionColormapChange(event) {\n    setGeneExpressionColormap(event.target.value);\n  }\n\n  function handleColormapRangeChange(event, value) {\n    setGeneExpressionColormapRange(value);\n  }\n  const handleColormapRangeChangeDebounced = useCallback(\n    debounce(handleColormapRangeChange, 5, { trailing: true }),\n    [handleColormapRangeChange],\n  );\n\n  return (\n    <OptionsContainer>\n      <CellColorEncodingOption\n        observationsLabel={observationsLabel}\n        cellColorEncoding={cellColorEncoding}\n        setCellColorEncoding={setCellColorEncoding}\n      />\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Set Labels Visible\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Checkbox\n            className={classes.checkbox}\n            checked={cellSetLabelsVisible}\n            onChange={handleLabelVisibilityChange}\n            name=\"scatterplot-option-cell-set-labels\"\n            color=\"default\"\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Set Label Size\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            disabled={!cellSetLabelsVisible}\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={cellSetLabelSize}\n            onChange={handleLabelSizeChange}\n            aria-labelledby=\"cell-set-label-size-slider\"\n            valueLabelDisplay=\"auto\"\n            step={1}\n            min={8}\n            max={36}\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Set Polygons Visible\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Checkbox\n            className={classes.checkbox}\n            checked={cellSetPolygonsVisible}\n            onChange={handlePolygonVisibilityChange}\n            name=\"scatterplot-option-cell-set-polygons\"\n            color=\"default\"\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell} htmlFor=\"cell-radius-mode-select\">\n          {observationsLabelNice} Radius Mode\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <OptionSelect\n            className={classes.select}\n            value={cellRadiusMode}\n            onChange={handleCellRadiusModeChange}\n            inputProps={{\n              id: 'cell-radius-mode-select',\n            }}\n          >\n            <option value=\"auto\">Auto</option>\n            <option value=\"manual\">Manual</option>\n          </OptionSelect>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Radius\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            disabled={cellRadiusMode !== 'manual'}\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={cellRadius}\n            onChange={handleRadiusChange}\n            aria-labelledby=\"cell-radius-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.01}\n            min={0.01}\n            max={10}\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell} htmlFor=\"cell-opacity-mode-select\">\n          {observationsLabelNice} Opacity Mode\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <OptionSelect\n            className={classes.select}\n            value={cellOpacityMode}\n            onChange={handleCellOpacityModeChange}\n            inputProps={{\n              id: 'cell-opacity-mode-select',\n            }}\n          >\n            <option value=\"auto\">Auto</option>\n            <option value=\"manual\">Manual</option>\n          </OptionSelect>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Opacity\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            disabled={cellOpacityMode !== 'manual'}\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={cellOpacity}\n            onChange={handleOpacityChange}\n            aria-labelledby=\"cell-opacity-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.05}\n            min={0.0}\n            max={1.0}\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell} htmlFor=\"gene-expression-colormap-select\">\n          Gene Expression Colormap\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <OptionSelect\n            className={classes.select}\n            value={geneExpressionColormap}\n            onChange={handleGeneExpressionColormapChange}\n            inputProps={{\n              id: 'gene-expression-colormap-select',\n            }}\n          >\n            {GLSL_COLORMAPS.map(cmap => (\n              <option key={cmap} value={cmap}>{cmap}</option>\n            ))}\n          </OptionSelect>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          Gene Expression Colormap Range\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={geneExpressionColormapRange}\n            onChange={handleColormapRangeChangeDebounced}\n            aria-labelledby=\"gene-expression-colormap-range-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.005}\n            min={0.0}\n            max={1.0}\n          />\n        </TableCell>\n      </TableRow>\n    </OptionsContainer>\n  );\n}\n", "import { OrthographicView } from 'deck.gl';\nimport clamp from 'lodash/clamp';\n\n// Reference: https://observablehq.com/@rreusser/selecting-the-right-opacity-for-2d-point-clouds\n// Reference: https://observablehq.com/@bmschmidt/dot-density-election-maps-with-webgl\nexport function getPointSizeDevicePixels(devicePixelRatio, zoom, xRange, yRange, width, height) {\n  // Size of a point, in units of the diagonal axis.\n  const pointSize = 0.001;\n  // Point size maximum, in screen pixels.\n  const pointScreenSizeMax = 10;\n\n  // Point size minimum, in screen pixels.\n  const pointScreenSizeMin = 1 / devicePixelRatio;\n\n  const scaleFactor = 2 ** zoom;\n  const xAxisRange = 2.0 / ((xRange * scaleFactor) / width);\n  const yAxisRange = 2.0 / ((yRange * scaleFactor) / height);\n\n  // The diagonal screen size as a fraction of the current diagonal axis range,\n  // then converted to device pixels.\n  const diagonalScreenSize = Math.sqrt((width ** 2) + (height ** 2));\n  const diagonalAxisRange = Math.sqrt((xAxisRange ** 2) + (yAxisRange ** 2));\n  const diagonalFraction = pointSize / diagonalAxisRange;\n  const deviceSize = diagonalFraction * diagonalScreenSize;\n\n  const pointSizeDevicePixels = clamp(\n    deviceSize,\n    pointScreenSizeMin,\n    pointScreenSizeMax,\n  );\n  return pointSizeDevicePixels;\n}\n\n// Reference: https://observablehq.com/@rreusser/selecting-the-right-opacity-for-2d-point-clouds\nexport function getPointOpacity(zoom, xRange, yRange, width, height, numCells, avgFillDensity) {\n  const N = numCells;\n  const [minX, minY, maxX, maxY] = new OrthographicView({ zoom }).makeViewport({\n    height,\n    width,\n    viewState: { zoom, target: [0, 0, 0] },\n  }).getBounds();\n  const X = maxY - minY;\n  const Y = maxX - minX;\n  const X0 = xRange;\n  const Y0 = yRange;\n  const W = width;\n  const H = height;\n\n  let rho = avgFillDensity;\n  if (!rho) {\n    rho = Math.min(1, 1 / (10 ** (Math.log10(N) - 3)));\n  }\n  // p in the calculation is the pixel length/width of a given point, which for us is 1\n  // so it does not factor into our calculation here.\n  const alpha = ((rho * W * H) / N) * (Y0 / Y) * (X0 / X);\n  const pointOpacity = clamp(alpha, 1.01 / 255, 1.0);\n  return pointOpacity;\n}\n", "import React, {\n  useEffect,\n} from 'react';\nimport { VitessceGridLayout } from './vitessce-grid-layout';\nimport { useRowHeight, createLoaders } from './vitessce-grid-utils';\nimport {\n  useViewConfigStoreApi,\n  useSetViewConfig,\n  useSetLoaders,\n  useEmitGridResize,\n  useRemoveComponent,\n  useChangeLayout,\n  useLayout,\n} from './state/hooks';\n\nconst padding = 10;\nconst margin = 5;\n\n/**\n * The wrapper for the VitessceGrid and LoadingIndicator components.\n * @param {object} props\n * @param {number} props.rowHeight The height of each grid row. Optional.\n * @param {object} props.config The view config.\n * @param {function} props.getComponent A function that maps component names to their\n * React counterparts.\n * @param {string} props.theme The theme name.\n * @param {number} props.height Total height for grid. Optional.\n * @param {function} props.onWarn A callback for warning messages. Optional.\n */\nexport default function VitessceGrid(props) {\n  const {\n    rowHeight: initialRowHeight,\n    config,\n    getComponent,\n    theme,\n    height,\n  } = props;\n\n  const [rowHeight, containerRef] = useRowHeight(config, initialRowHeight, height, margin, padding);\n  const onResize = useEmitGridResize();\n\n  // When the row height has changed, publish a GRID_RESIZE event.\n  useEffect(() => {\n    onResize();\n  }, [rowHeight, onResize]);\n\n  const viewConfigStoreApi = useViewConfigStoreApi();\n  const setViewConfig = useSetViewConfig(viewConfigStoreApi);\n  const setLoaders = useSetLoaders();\n  const removeComponent = useRemoveComponent();\n  const changeLayout = useChangeLayout();\n  const layout = useLayout();\n\n  // Update the view config and loaders in the global state.\n  useEffect(() => {\n    if (config) {\n      setViewConfig(config);\n      const loaders = createLoaders(config.datasets, config.description);\n      setLoaders(loaders);\n    } else {\n      // No config found, so clear the loaders.\n      setLoaders({});\n    }\n  }, [config, setViewConfig, setLoaders]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={`vitessce-container vitessce-theme-${theme}`}\n    >\n      {layout && (\n        <VitessceGridLayout\n          layout={layout}\n          height={height}\n          rowHeight={rowHeight}\n          theme={theme}\n          getComponent={getComponent}\n          draggableHandle=\".title\"\n          margin={margin}\n          padding={padding}\n          onRemoveComponent={removeComponent}\n          onLayoutChange={changeLayout}\n          reactGridLayoutProps={{\n            onResize,\n            onResizeStop: onResize,\n          }}\n        />\n      )}\n    </div>\n  );\n}\n", "import React from 'react';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport isEqual from 'lodash/isEqual';\nimport { getMaxRows, resolveLayout, COMPONENT_ID_PREFIX } from './layout-utils';\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nclass ResponsiveHeightGridLayout extends ResponsiveGridLayout {\n  componentDidUpdate(prevProps) {\n    if (this.props.height !== prevProps.height) {\n      this.onWindowResize();\n    }\n  }\n}\n\nexport default function VitessceGridLayout(props) {\n  const {\n    layout,\n    getComponent, padding, margin, draggableHandle,\n    reactGridLayoutProps, rowHeight, theme, height,\n    onRemoveComponent, onLayoutChange: onLayoutChangeProp,\n  } = props;\n\n  // If layout changes, update grid components.\n  const {\n    cols: gridCols, layouts: gridLayouts, breakpoints: gridBreakpoints, components: gridComponents,\n  } = resolveLayout(layout);\n\n  const maxRows = getMaxRows(gridLayouts);\n\n  // Inline CSS is generally avoided, but this saves the end-user a little work,\n  // and prevents class names from getting out of sync.\n  const style = (\n    <style>\n      {`\n        ${draggableHandle} {\n          cursor: grab;\n        }\n        ${draggableHandle}:active {\n          cursor: grabbing;\n        }\n     `}\n    </style>\n  );\n\n  const onLayoutChange = (newLayout) => {\n    if (newLayout.length === Object.entries(gridComponents).length) {\n      const newComponentProps = [];\n      newLayout.forEach((nextC) => {\n        const id = nextC.i;\n        const prevC = gridComponents[id];\n        if (prevC) {\n          const i = parseInt(id.substring(id.indexOf(COMPONENT_ID_PREFIX) + 1), 10);\n          const nextProps = {\n            x: nextC.x, y: nextC.y, w: nextC.w, h: nextC.h,\n          };\n          const prevProps = {\n            x: prevC.x, y: prevC.y, w: prevC.w, h: prevC.h,\n          };\n          if (!isEqual(nextProps, prevProps)) {\n            newComponentProps.push([i, nextProps]);\n          }\n        }\n      });\n      if (newComponentProps.length > 0) {\n        onLayoutChangeProp(newComponentProps);\n      }\n    }\n  };\n\n  const layoutChildren = Object.entries(gridComponents).map(([k, v], i) => {\n    const Component = getComponent(v.component);\n\n    const removeGridComponent = () => {\n      onRemoveComponent(i);\n    };\n\n    return (\n      <div key={k}>\n        <Component\n          {... v.props}\n          uuid={i}\n          coordinationScopes={v.coordinationScopes}\n          theme={theme}\n          removeGridComponent={removeGridComponent}\n        />\n      </div>\n    );\n  });\n  return (gridLayouts && gridComponents && gridBreakpoints && gridCols) && (\n    <>\n      {style}\n      <ResponsiveHeightGridLayout\n        className=\"layout\"\n        cols={gridCols}\n        layouts={gridLayouts}\n        breakpoints={gridBreakpoints}\n        height={height}\n        rowHeight={\n          rowHeight\n          || (\n            (window.innerHeight - 2 * padding - (maxRows - 1) * margin)\n            / maxRows\n          )}\n        containerPadding={[padding, padding]}\n        margin={[margin, margin]}\n        draggableHandle={draggableHandle}\n        onLayoutChange={onLayoutChange}\n        {... reactGridLayoutProps}\n      >\n        {layoutChildren}\n      </ResponsiveHeightGridLayout>\n    </>\n  );\n}\n\nVitessceGridLayout.defaultProps = {\n  padding: 10,\n  margin: 10,\n};\n", "import { range } from '../../utils';\n\nexport const COMPONENT_ID_PREFIX = 'i';\n\nfunction sum(a) {\n  return a.reduce((x, y) => x + y, 0);\n}\n\nexport function makeGridLayout(colXs, colLayout) {\n  const colWs = [];\n  for (let i = 0; i < colXs.length; i++) { // eslint-disable-line no-plusplus\n    colWs.push(colXs[i + 1] - colXs[i]);\n  }\n  return Object.entries(colLayout).map(([id, spec]) => ({\n    i: id,\n    y: spec.y,\n    h: spec.h || 1,\n    x: colXs[spec.x],\n    w: sum(colWs.slice(spec.x, spec.x + (spec.w || 1))),\n  }));\n}\n\nexport function getMaxRows(layouts) {\n  return Math.max(\n    ...Object.values(layouts).map(\n      layout => Math.max(\n        ...layout.map(xywh => xywh.y + xywh.h),\n      ),\n    ),\n  );\n}\n\nexport function resolveLayout(layout) {\n  const cols = {};\n  const layouts = {};\n  const breakpoints = {};\n  const components = {};\n  const positions = {};\n\n  (('components' in layout) ? layout.components : layout).forEach(\n    (def, i) => {\n      const id = `${COMPONENT_ID_PREFIX}${i}`;\n      components[id] = {\n        component: def.component,\n        props: def.props || {},\n        coordinationScopes: def.coordinationScopes || {},\n      };\n      positions[id] = {\n        id, x: def.x, y: def.y, w: def.w, h: def.h,\n      };\n    },\n  );\n\n  if ('components' in layout) {\n    Object.entries(layout.columns).forEach(\n      ([width, columnXs]) => {\n        cols[width] = columnXs[columnXs.length - 1];\n        layouts[width] = makeGridLayout(columnXs, positions);\n        breakpoints[width] = width;\n      },\n    );\n  } else {\n    // static layout\n    const id = 'ID';\n    const columnCount = 12;\n    cols[id] = columnCount;\n    layouts[id] = makeGridLayout(range(columnCount + 1), positions);\n    breakpoints[id] = 1000;\n    // Default has different numbers of columns at different widths,\n    // so we do need to override that to ensure the same number of columns,\n    // regardless of window width.\n  }\n  return {\n    cols, layouts, breakpoints, components,\n  };\n}\n", "import {\n  useState, useEffect, useRef,\n} from 'react';\nimport { getSourceAndLoaderFromFileType } from '../loaders/types';\n\n/**\n * Return the bottom coordinate of the layout.\n * https://github.com/STRML/react-grid-layout/blob/20dac73f91274526034c00968b5bedb9c2ed36b9/lib/utils.js#L82\n * @param  {array} layout react-grid-layout layout array.\n * @returns {number} Bottom coordinate.\n */\nfunction getNumRows(layout) {\n  let max = 0;\n  let bottomY;\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0, len = layout.length; i < len; i++) {\n    bottomY = layout[i].y + layout[i].h;\n    if (bottomY > max) max = bottomY;\n  }\n  return max;\n}\n\n/**\n * Compute the row height based on the container height, number of rows,\n * and margin/padding. Basically the reverse of the react-grid-layout's\n * `.containerHeight()` function.\n * https://github.com/STRML/react-grid-layout/blob/83251e5e682abfa3252ff89d4bacf47fdc1f4270/lib/ReactGridLayout.jsx#L223\n * @param {number} containerHeight The height of the .vitessce-container element.\n * @param {number} numRows The number of rows in the layout.\n * @param {number} margin The margin value that will be passed to VitessceGrid.\n * @param {number} padding The padding value that will be passed to VitessceGrid.\n * @returns {number} The new row height value.\n */\nfunction getRowHeight(containerHeight, numRows, margin, padding) {\n  const effectiveContainerHeight = containerHeight - 2 * padding - (numRows - 1) * margin;\n  return effectiveContainerHeight / numRows;\n}\n\nexport function useRowHeight(config, initialRowHeight, height, margin, padding) {\n  const [containerHeight, setContainerHeight] = useState(height);\n  const [rowHeight, setRowHeight] = useState(initialRowHeight);\n  const containerRef = useRef();\n\n  // Detect when the `config` or `containerHeight` variables\n  // have changed, and update `rowHeight` in response.\n  useEffect(() => {\n    const numRows = getNumRows(config.layout);\n    const newRowHeight = getRowHeight(containerHeight, numRows, margin, padding);\n    setRowHeight(newRowHeight);\n  }, [containerHeight, config, margin, padding]);\n\n  // Update the `containerHeight` state when the `height` prop has changed.\n  useEffect(() => {\n    if (height !== null && height !== undefined) {\n      setContainerHeight(height);\n    }\n  }, [height]);\n\n  // If no height prop has been provided, set the `containerHeight`\n  // using height of the `.vitessce-container` element.\n  // Check the container element height whenever the window has been\n  // resized, as it may change if `.vitessce-container` should be\n  // sized relative to its parent (and by extension, potentially the window).\n  useEffect(() => {\n    if (height !== null && height !== undefined) {\n      // eslint will complain if the return value is inconsistent,\n      // so return a no-op function.\n      return () => {};\n    }\n    function onWindowResize() {\n      if (!containerRef.current) return;\n      const containerRect = containerRef.current.getBoundingClientRect();\n      setContainerHeight(containerRect.height);\n    }\n    window.addEventListener('resize', onWindowResize);\n    onWindowResize();\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n    };\n  }, [containerRef, height]);\n\n\n  return [rowHeight, containerRef];\n}\n\n/**\n * Create a mapping from dataset ID to loader objects by data type.\n * @param {object[]} datasets The datasets array from the view config.\n * @param {string} configDescription The top-level description in the\n * view config.\n * @returns {object} Mapping from dataset ID to data type to loader\n * instance.\n */\nexport function createLoaders(datasets, configDescription) {\n  const result = {};\n  const dataSources = {};\n  datasets.forEach((dataset) => {\n    const datasetLoaders = {\n      name: dataset.name,\n      description: dataset.description || configDescription,\n      loaders: {},\n    };\n    dataset.files.forEach((file) => {\n      const [DataSourceClass, LoaderClass] = getSourceAndLoaderFromFileType(file.fileType);\n      // Create _one_ DataSourceClass instance per URL. Derived loaders share this object.\n      const { url, options, requestInit } = file;\n      const fileId = url || JSON.stringify(options);\n      if (!(fileId in dataSources)) {\n        dataSources[fileId] = new DataSourceClass({ url, requestInit });\n      }\n      const loader = new LoaderClass(dataSources[fileId], file);\n      datasetLoaders.loaders[file.type] = loader;\n    });\n    result[dataset.uid] = datasetLoaders;\n  });\n  return result;\n}\n", "import Ajv from 'ajv';\nimport AbstractTwoStepLoader from './AbstractTwoStepLoader';\nimport { LoaderValidationError, AbstractLoaderError } from './errors/index';\nimport LoaderResult from './LoaderResult';\n\nimport cellsSchema from '../schemas/cells.schema.json';\nimport moleculesSchema from '../schemas/molecules.schema.json';\nimport neighborhoodsSchema from '../schemas/neighborhoods.schema.json';\nimport rasterSchema from '../schemas/raster.schema.json';\nimport cellSetsSchema from '../schemas/cell-sets.schema.json';\n\nconst typeToSchema = {\n  cells: cellsSchema,\n  molecules: moleculesSchema,\n  neighborhoods: neighborhoodsSchema,\n  raster: rasterSchema,\n  'cell-sets': cellSetsSchema,\n};\n\nexport default class JsonLoader extends AbstractTwoStepLoader {\n  constructor(dataSource, params) {\n    super(dataSource, params);\n\n    const { type } = params;\n    this.schema = typeToSchema[type];\n  }\n\n  load() {\n    const {\n      url, type, fileType,\n    } = this;\n    if (this.data) {\n      return this.data;\n    }\n    this.data = this.dataSource.data\n      .then((data) => {\n        if (data instanceof AbstractLoaderError) {\n          return Promise.reject(data);\n        }\n        const [valid, reason] = this.validate(data);\n        if (valid) {\n          return Promise.resolve(new LoaderResult(data, url));\n        }\n        return Promise.reject(new LoaderValidationError(type, fileType, url, reason));\n      });\n    return this.data;\n  }\n\n  validate(data) {\n    const { schema, type } = this;\n    if (!schema) {\n      throw Error(`No schema for ${type}`);\n    }\n    const validate = new Ajv().compile(schema);\n    const valid = validate(data);\n    let failureReason;\n    if (!valid) {\n      failureReason = validate.errors;\n    }\n    return [valid, failureReason];\n  }\n}\n", "import uuidv4 from 'uuid/v4';\n\n/**\n * A loader ancestor class containing a default constructor\n * and a stub for the required load() method.\n */\nexport default class AbstractLoader {\n  constructor({\n    type, url, requestInit, options,\n  }) {\n    this.type = type;\n    this.url = url;\n    this.requestInit = requestInit;\n    this.options = options;\n\n    this.subscriptions = {};\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  load() {\n    throw new Error('The load() method has not been implemented.');\n  }\n\n  subscribe(subscriber) {\n    const token = uuidv4();\n    this.subscriptions[token] = subscriber;\n    return token;\n  }\n\n  unsubscribe(token) {\n    delete this.subscriptions[token];\n  }\n\n  publish(data) {\n    Object.values(this.subscriptions).forEach((subscriber) => {\n      subscriber(data);\n    });\n  }\n}\n", "import AbstractLoader from './AbstractLoader';\n\nexport default class AbstractTwoStepLoader extends AbstractLoader {\n  constructor(dataSource, params) {\n    super(params);\n    this.dataSource = dataSource;\n  }\n}\n", "\n\nexport default class LoaderResult {\n  constructor(data, url, coordinationValues = null) {\n    this.data = data;\n    this.url = url;\n    this.coordinationValues = coordinationValues;\n  }\n}\n", "import { openArray } from 'zarr';\nimport AbstractTwoStepLoader from './AbstractTwoStepLoader';\nimport LoaderResult from './LoaderResult';\n\nexport default class MatrixZarrLoader extends AbstractTwoStepLoader {\n  loadAttrs() {\n    if (this.attrs) {\n      return this.attrs;\n    }\n    this.attrs = this.dataSource.getJson('.zattrs');\n    return this.attrs;\n  }\n\n  loadArr() {\n    const { store } = this.dataSource;\n    if (this.arr) {\n      return this.arr;\n    }\n    this.arr = openArray({ store, path: '/', mode: 'r' }).then(z => new Promise((resolve) => {\n      z.getRaw([null, null])\n        .then(resolve);\n    }));\n    return this.arr;\n  }\n\n  load() {\n    return Promise\n      .all([this.loadAttrs(), this.loadArr()])\n      .then(data => Promise.resolve(new LoaderResult(data, null)));\n  }\n}\n", "import genesSchema from '../schemas/genes.schema.json';\nimport JsonLoader from './JsonLoader';\nimport { AbstractLoaderError } from './errors';\nimport LoaderResult from './LoaderResult';\n\nexport default class GenesJsonAsMatrixZarrLoader extends JsonLoader {\n  constructor(dataSource, params) {\n    super(dataSource, params);\n\n    this.schema = genesSchema;\n  }\n\n  async load() {\n    const payload = await super.load().catch(reason => Promise.resolve(reason));\n    if (payload instanceof AbstractLoaderError) {\n      return Promise.reject(payload);\n    }\n    const { data, url } = payload;\n    const cols = Object.keys(data);\n    const rows = (cols.length > 0 ? Object.keys(data[cols[0]].cells) : []);\n    const attrs = { rows, cols };\n\n    const normalizedFlatMatrix = rows\n      .flatMap(cellId => cols.map(\n        geneId => (data[geneId].cells[cellId] / data[geneId].max) * 255,\n      ));\n    // Need to wrap the NestedArray to mock the HTTPStore-based array\n    // which returns promises.\n    const arr = { data: Uint8Array.from(normalizedFlatMatrix) };\n    return Promise.resolve(new LoaderResult([attrs, arr], url));\n  }\n}\n", "import { extent } from 'd3-array';\nimport range from 'lodash/range';\nimport clustersSchema from '../schemas/clusters.schema.json';\nimport JsonLoader from './JsonLoader';\nimport { AbstractLoaderError } from './errors';\nimport LoaderResult from './LoaderResult';\n\nexport default class ClustersJsonAsMatrixZarrLoader extends JsonLoader {\n  constructor(dataSource, params) {\n    super(dataSource, params);\n\n    this.schema = clustersSchema;\n  }\n\n  async load() {\n    const payload = await super.load().catch(reason => Promise.resolve(reason));\n    if (payload instanceof AbstractLoaderError) {\n      return Promise.reject(payload);\n    }\n    const { data, url } = payload;\n    const { rows, cols, matrix } = data;\n    const attrs = {\n      rows: cols,\n      cols: rows,\n    };\n    const shape = [attrs.rows.length, attrs.cols.length];\n    // Normalize values by converting to one-byte integers.\n    // Normalize for each gene (column) independently.\n    const normalizedMatrix = matrix.map((col) => {\n      const [min, max] = extent(col);\n      const normalize = d => Math.floor(((d - min) / (max - min)) * 255);\n      return col.map(normalize);\n    });\n    // Transpose the normalized matrix.\n    const tNormalizedMatrix = range(shape[0])\n      .map(i => range(shape[1]).map(j => normalizedMatrix[j][i]));\n    // Flatten the transposed matrix.\n    const normalizedFlatMatrix = tNormalizedMatrix.flat();\n    // Need to wrap the NestedArray to mock the HTTPStore-based array\n    // which returns promises.\n    const arr = { data: Uint8Array.from(normalizedFlatMatrix) };\n    return Promise.resolve(new LoaderResult([attrs, arr], url));\n  }\n}\n", "import { ZarrPixelSource, loadOmeTiff } from '@hms-dbmi/viv';\nimport { openArray } from 'zarr';\nimport rasterSchema from '../schemas/raster.schema.json';\nimport JsonLoader from './JsonLoader';\nimport { AbstractLoaderError } from './errors';\nimport LoaderResult from './LoaderResult';\n\nimport { initializeRasterLayersAndChannels } from '../components/spatial/utils';\n\nasync function initLoader(imageData) {\n  const {\n    type, url, metadata, requestInit,\n  } = imageData;\n  switch (type) {\n    case ('zarr'): {\n      const {\n        dimensions, isPyramid, transform,\n      } = metadata || {};\n      const labels = dimensions.map(d => d.field);\n      let source;\n      if (isPyramid) {\n        const metadataUrl = `${url}${\n          url.slice(-1) === '/' ? '' : '/'\n        }.zmetadata`;\n        const response = await fetch(metadataUrl);\n        const { metadata: zarrMetadata } = await response.json();\n        const paths = Object.keys(zarrMetadata)\n          .filter(metaKey => metaKey.includes('.zarray'))\n          .map(arrMetaKeys => arrMetaKeys.slice(0, -7));\n        const data = await Promise.all(\n          paths.map(path => openArray({ store: url, path })),\n        );\n        const [yChunk, xChunk] = data[0].chunks.slice(-2);\n        const size = Math.min(yChunk, xChunk);\n        // deck.gl requirement for power-of-two tile size.\n        const tileSize = 2 ** Math.floor(Math.log2(size));\n        source = data.map(d => new ZarrPixelSource(d, labels, tileSize));\n      } else {\n        const data = await openArray({ store: url });\n        source = new ZarrPixelSource(data, labels);\n      }\n      return { data: source, metadata: { dimensions, transform }, channels: (dimensions.find(d => d.field === 'channel') || dimensions[0]).values };\n    }\n    case ('ome-tiff'): {\n      let loader;\n      // Fetch offsets for ome-tiff if needed.\n      if (metadata && 'omeTiffOffsetsUrl' in metadata) {\n        const { omeTiffOffsetsUrl } = metadata;\n        const res = await fetch(omeTiffOffsetsUrl, (requestInit || {}));\n        if (res.ok) {\n          const offsets = await res.json();\n          loader = await loadOmeTiff(\n            url,\n            {\n              offsets,\n              headers: requestInit?.headers,\n            },\n          );\n        } else {\n          throw new Error('Offsets not found but provided.');\n        }\n      } else {\n        loader = await loadOmeTiff(url, { headers: requestInit?.headers });\n      }\n      const { Pixels: { Channels } } = loader.metadata;\n      const channels = Array.isArray(Channels)\n        ? Channels.map((channel, i) => channel.Name || `Channel ${i}`)\n        : [Channels.Name || `Channel ${0}`];\n      return { ...loader, channels };\n    }\n    default: {\n      throw Error(`Image type (${type}) is not supported`);\n    }\n  }\n}\n\nexport default class RasterLoader extends JsonLoader {\n  constructor(dataSource, params) {\n    const { url, options } = params;\n    if (!url && options) {\n      // eslint-disable-next-line no-param-reassign\n      dataSource.url = URL.createObjectURL(new Blob([JSON.stringify(options)]));\n    }\n    super(dataSource, params);\n    this.schema = rasterSchema;\n  }\n\n  async load() {\n    const payload = await super.load().catch(reason => Promise.resolve(reason));\n    if (payload instanceof AbstractLoaderError) {\n      return Promise.reject(payload);\n    }\n    const { data: raster } = payload;\n    const { images, renderLayers, usePhysicalSizeScaling = false } = raster;\n\n    // Get image name and URL tuples.\n    const urls = images\n      .filter(image => !image.url.includes('zarr'))\n      .map(image => ([image.url, image.name]));\n\n    // Add a loaderCreator function for each image layer.\n    const imagesWithLoaderCreators = images.map(image => ({\n      ...image,\n      loaderCreator: async () => initLoader(image),\n    }));\n\n    // TODO: use options for initial selection of channels\n    // which omit domain/slider ranges.\n    if (!this.autoImageCache) {\n      this.autoImageCache = initializeRasterLayersAndChannels(\n        imagesWithLoaderCreators,\n        renderLayers,\n        usePhysicalSizeScaling,\n      );\n    }\n\n    return this.autoImageCache.then((autoImages) => {\n      const [autoImageLayers, imageLayerLoaders, imageLayerMeta] = autoImages;\n\n      const coordinationValues = {\n        spatialRasterLayers: autoImageLayers,\n      };\n      return new LoaderResult(\n        { loaders: imageLayerLoaders, meta: imageLayerMeta },\n        urls,\n        coordinationValues,\n      );\n    });\n  }\n}\n", "import { loadOmeZarr } from '@hms-dbmi/viv';\nimport { AbstractLoaderError } from './errors';\nimport LoaderResult from './LoaderResult';\n\nimport { initializeRasterLayersAndChannels } from '../components/spatial/utils';\nimport AbstractTwoStepLoader from './AbstractTwoStepLoader';\n\nfunction hexToRgb(hex) {\n  const result = /^#?([A-F\\d]{2})([A-F\\d]{2})([A-F\\d]{2})$/i.exec(hex);\n  return [\n    parseInt(result[1].toLowerCase(), 16),\n    parseInt(result[2].toLowerCase(), 16),\n    parseInt(result[3].toLowerCase(), 16),\n  ];\n}\n\nexport default class OmeZarrLoader extends AbstractTwoStepLoader {\n  async load() {\n    const payload = await this.dataSource.getJson('.zattrs').catch(reason => Promise.resolve(reason));\n    if (payload instanceof AbstractLoaderError) {\n      return Promise.reject(payload);\n    }\n\n    const loader = await loadOmeZarr(this.url, { fetchOptions: this.requestInit, type: 'multiscales' });\n    const { metadata } = loader;\n\n    const { omero } = metadata;\n\n    if (!omero) {\n      console.error('Path for image not valid');\n      return Promise.reject(payload);\n    }\n\n    const { rdefs, channels } = omero;\n\n    const t = rdefs.defaultT ?? 0;\n    const z = rdefs.defaultZ ?? 0;\n\n    const imagesWithLoaderCreators = [\n      {\n        name: omero.name,\n        channels: channels.map((channel, i) => ({\n          selection: { z, t, c: i },\n          slider: [channel.window.start, channel.window.end],\n          color: hexToRgb(channel.color),\n        })),\n        loaderCreator: async () => ({ ...loader, channels: channels.map(c => c.label) }),\n      },\n    ];\n\n    // TODO: use options for initial selection of channels\n    // which omit domain/slider ranges.\n    const [\n      autoImageLayers, imageLayerLoaders, imageLayerMeta,\n    ] = await initializeRasterLayersAndChannels(\n      imagesWithLoaderCreators, undefined,\n    );\n\n    const coordinationValues = {\n      spatialRasterLayers: autoImageLayers,\n    };\n    return Promise.resolve(new LoaderResult(\n      { loaders: imageLayerLoaders, meta: imageLayerMeta },\n      [],\n      coordinationValues,\n    ));\n  }\n}\n", "import Ajv from 'ajv';\nimport isNil from 'lodash/isNil';\nimport { dsvFormat } from 'd3-dsv';\nimport { parse as json2csv } from 'json2csv';\nimport { colorArrayToString, colorStringToArray } from './utils';\nimport { nodeTransform } from './cell-set-utils';\nimport { getDefaultColor } from '../utils';\nimport {\n  HIERARCHICAL_SCHEMAS, TABULAR_SCHEMAS,\n  MIME_TYPE_JSON, MIME_TYPE_TABULAR,\n  SEPARATOR_TABULAR, NA_VALUE_TABULAR,\n} from './constants';\n\n/**\n * Check if an imported tree has an old schema version that we know how to\n * \"upgrade\" to the latest schema version.  Validate against the schema.\n * @param {object} currTree A hierarchical tree object with a .version property,\n * which has already passed schema validation, but may not have the latest schema version.\n * @param {string} datatype The data type of the items in the schema.\n */\nexport function tryUpgradeTreeToLatestSchema(currTree, datatype) {\n  const validate = new Ajv().compile(HIERARCHICAL_SCHEMAS[datatype].schema);\n  const valid = validate(currTree);\n  if (!valid) {\n    const failureReason = JSON.stringify(validate.errors, null, 2);\n    throw new Error(`Tree validation failed: ${failureReason}`);\n  } else if (currTree.datatype !== datatype) {\n    throw new Error(\n      `The data type does not match the expected data type of '${datatype}'.`,\n    );\n  }\n  if (currTree.version === '0.1.2') {\n    // To upgrade from cell-sets schema 0.1.2 to 0.1.3,\n    // add a confidence value of null for each cell ID.\n    return {\n      ...currTree,\n      version: HIERARCHICAL_SCHEMAS[datatype].latestVersion,\n      tree: currTree.tree.map(levelZeroNode => nodeTransform(\n        levelZeroNode,\n        n => !n.children && Array.isArray(n.set),\n        n => ({ ...n, set: n.set.map(itemId => ([itemId, null])) }), [],\n      )),\n    };\n  }\n  return currTree;\n}\n\n/**\n * Handler for JSON imports. Validates and upgrades against the hierarchical sets schema.\n * @param {string} result The data passed from the FileReader as a string.\n * @param {string} datatype The data type to validate against.\n * @param {string} theme \"light\" or \"dark\" for the vitessce theme\n * @returns {object} The imported tree object.\n * @throws {Error} Throws error if validation fails or if the datatype does not match.\n */\n// eslint-disable-next-line no-unused-vars\nexport function handleImportJSON(result, datatype, theme) {\n  let importData = JSON.parse(result);\n  // Validate the imported file.\n  importData = tryUpgradeTreeToLatestSchema(importData, datatype);\n  return importData;\n}\n\n/**\n * Handler for tabular imports. Validates against the tabular sets schema.\n * @param {string} result The data passed from the FileReader as a string.\n * @param {string} datatype The data type to validate against.\n * @param {string} theme \"light\" or \"dark\" for the vitessce theme\n * @returns {object} The imported tree object.\n * @throws {Error} Throws error if validation fails or if the datatype does not match.\n */\nexport function handleImportTabular(result, datatype, theme) {\n  const dsvParser = dsvFormat(SEPARATOR_TABULAR);\n  const importData = dsvParser.parse(result, row => ({\n    groupName: row.groupName,\n    setName: row.setName,\n    setColor: (row.setColor ? colorStringToArray(row.setColor) : getDefaultColor(theme)),\n    obsId: row.obsId,\n    predictionScore: (\n      (\n        isNil(row.predictionScore)\n        || row.predictionScore === NA_VALUE_TABULAR\n      )\n        ? null\n        : +row.predictionScore\n    ),\n  }));\n  // Validate the imported file.\n  const validate = new Ajv().compile(TABULAR_SCHEMAS[datatype].schema);\n  const valid = validate(importData);\n  if (!valid) {\n    const failureReason = JSON.stringify(validate.errors, null, 2);\n    throw new Error(`Import validation failed: ${failureReason}`);\n  } else {\n    // Convert the validated array to a tree representation.\n    const treeToImport = {\n      version: HIERARCHICAL_SCHEMAS[datatype].latestVersion,\n      datatype,\n      tree: [],\n    };\n    const uniqueGroupNames = Array.from(new Set(importData.map(d => d.groupName)));\n    uniqueGroupNames.forEach((groupName) => {\n      const levelZeroNode = {\n        name: groupName,\n        children: [],\n      };\n      const groupRows = importData.filter(d => d.groupName === groupName);\n      const uniqueSetNames = Array.from(new Set(groupRows.map(d => d.setName)));\n      uniqueSetNames.forEach((setName) => {\n        const setRows = groupRows.filter(d => d.setName === setName);\n        const { setColor } = setRows[0];\n        const levelOneNode = {\n          name: setName,\n          color: setColor,\n          set: setRows.map(d => ([d.obsId, d.predictionScore])),\n        };\n        levelZeroNode.children.push(levelOneNode);\n      });\n      treeToImport.tree.push(levelZeroNode);\n    });\n    return treeToImport;\n  }\n}\n\n/**\n * Convert a tree object to a JSON representation.\n * @param {object} result The object to export.\n * @returns {string} The data in a string representation.\n */\nexport function handleExportJSON(result) {\n  const jsonString = JSON.stringify(result);\n  const dataString = `data:${MIME_TYPE_JSON};charset=utf-8,${encodeURIComponent(jsonString)}`;\n  return dataString;\n}\n\n/**\n * Convert a tree object with one level (height === 1) to a tabular representation.\n * @param {object} result The object to export.\n * @returns {string} The data in a string representation.\n */\nexport function handleExportTabular(result) {\n  // Convert a tree object to an array of JSON objects.\n  const exportData = [];\n  result.tree.forEach((levelZeroNode) => {\n    levelZeroNode.children.forEach((levelOneNode) => {\n      if (levelOneNode.set) {\n        levelOneNode.set.forEach(([obsId, prob]) => {\n          exportData.push({\n            groupName: levelZeroNode.name,\n            setName: levelOneNode.name,\n            setColor: colorArrayToString(levelOneNode.color),\n            obsId,\n            predictionScore: isNil(prob) ? NA_VALUE_TABULAR : prob,\n          });\n        });\n      }\n    });\n  });\n  const csvString = json2csv(exportData, {\n    fields: ['groupName', 'setName', 'setColor', 'obsId', 'predictionScore'],\n    delimiter: SEPARATOR_TABULAR,\n  });\n  const dataString = `data:${MIME_TYPE_TABULAR};charset=utf-8,${encodeURIComponent(csvString)}`;\n  return dataString;\n}\n\n/**\n * Download a file. Appends and removes an anchor node in the DOM.\n * @param {string} dataString The function that converts the data to a string.\n * @param {string} fileName The name of the file to be downloaded.\n */\nexport function downloadForUser(dataString, fileName) {\n  const downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute('href', dataString);\n  downloadAnchorNode.setAttribute('download', fileName);\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n}\n", "import cellSetsSchema from '../schemas/cell-sets.schema.json';\nimport JsonLoader from './JsonLoader';\nimport { tryUpgradeTreeToLatestSchema } from '../components/sets/io';\nimport { AbstractLoaderError } from './errors';\nimport LoaderResult from './LoaderResult';\n\nimport { initializeCellSetColor } from '../components/sets/cell-set-utils';\n\nexport default class CellSetsJsonLoader extends JsonLoader {\n  constructor(dataSource, params) {\n    super(dataSource, params);\n\n    this.schema = cellSetsSchema;\n  }\n\n  async load() {\n    const payload = await super.load().catch(reason => Promise.resolve(reason));\n    if (payload instanceof AbstractLoaderError) {\n      return Promise.reject(payload);\n    }\n    const { data: rawData, url } = payload;\n    const upgradedData = tryUpgradeTreeToLatestSchema(rawData, 'cell');\n\n    const coordinationValues = {\n      cellSetSelection: [],\n      cellSetColor: [],\n    };\n\n    // Set up the initial coordination values.\n    if (upgradedData && upgradedData.tree.length >= 1) {\n      const { tree } = upgradedData;\n      const newAutoSetSelectionParentName = tree[0].name;\n      // Create a list of set paths to initally select.\n      const newAutoSetSelections = tree[0].children\n        .map(node => ([newAutoSetSelectionParentName, node.name]));\n      // Create a list of cell set objects with color mappings.\n      const newAutoSetColors = initializeCellSetColor(upgradedData, []);\n      coordinationValues.cellSetSelection = newAutoSetSelections;\n      coordinationValues.cellSetColor = newAutoSetColors;\n    }\n    return Promise.resolve(new LoaderResult(upgradedData, url, coordinationValues));\n  }\n}\n", "/* eslint-disable no-control-regex */\nimport { InternMap } from 'internmap';\nimport {\n  treeInitialize,\n  nodeAppendChild,\n  initializeCellSetColor,\n} from '../../components/sets/cell-set-utils';\nimport {\n  SETS_DATATYPE_CELL,\n} from '../../components/sets/constants';\nimport AbstractTwoStepLoader from '../AbstractTwoStepLoader';\nimport LoaderResult from '../LoaderResult';\n\nexport function dataToCellSetsTree(data, options) {\n  const [cellNames, cellSets] = data;\n  const cellSetsTree = treeInitialize(SETS_DATATYPE_CELL);\n  cellSets.forEach((cellSetIds, j) => {\n    const name = options[j].groupName;\n    let levelZeroNode = {\n      name,\n      children: [],\n    };\n    if (cellSetIds.length > 0 && Array.isArray(cellSetIds[0])) {\n      // Multi-level case.\n      const levelSets = new InternMap([], JSON.stringify);\n\n      cellNames.forEach((id, i) => {\n        const classes = cellSetIds.map(col => col[i]);\n        if (levelSets.has(classes)) {\n          levelSets.get(classes).push([id, null]);\n        } else {\n          levelSets.set(classes, [[id, null]]);\n        }\n      });\n\n      const levels = Array.from(levelSets.keys());\n\n      const getNextLevelNames = (levelSuffixes) => {\n        const nextLevelNames = Array.from(new Set(levelSuffixes.map(l => l[0])));\n        return nextLevelNames.sort((a, b) => a.localeCompare(b));\n      };\n\n      // Recursive function to create nodes.\n      const getNode = (parentLevelPrefixes, currLevelName, childLevelSuffixes) => {\n        const isLeaf = childLevelSuffixes.length === 0;\n        const resultNode = {\n          name: currLevelName,\n        };\n        if (isLeaf) {\n          // Base case: this is a leaf node.\n          resultNode.set = levelSets.get([...parentLevelPrefixes, currLevelName]);\n        } else {\n          // Are the remaining suffices redundant?\n          // Consider [\"Parent\", \"Child\", \"Child\"]\n          // where parentLevelPrefixes is [\"Parent\"] and currLevelName is \"Child\".\n          const shouldBeLeaf = (\n            childLevelSuffixes.length === 1\n            && currLevelName === childLevelSuffixes[0][childLevelSuffixes[0].length - 1]\n          );\n          if (shouldBeLeaf) {\n            resultNode.set = levelSets.get(\n              [...parentLevelPrefixes, currLevelName, ...childLevelSuffixes[0]],\n            );\n          } else {\n            // Recursion, run getNode() on each of the unique names at the next level.\n            const nextLevelNames = getNextLevelNames(childLevelSuffixes);\n\n            resultNode.children = nextLevelNames\n              .map(nextLevelName => getNode(\n                [...parentLevelPrefixes, currLevelName],\n                nextLevelName,\n                childLevelSuffixes\n                  .filter(l => l[0] === nextLevelName)\n                  .map(l => l.slice(1))\n                  .filter(v => v.length > 0),\n              ));\n          }\n        }\n        return resultNode;\n      };\n      // Start the recursion.\n      const levelOneNodes = getNextLevelNames(levels)\n        .map(levelOneName => getNode(\n          [],\n          levelOneName,\n          levels.filter(l => l[0] === levelOneName).map(l => l.slice(1)),\n        ));\n\n      levelZeroNode.children = levelOneNodes;\n    } else {\n      // Single-level case.\n      const uniqueCellSetIds = Array.from(new Set(cellSetIds)).sort();\n      const clusters = {};\n      // eslint-disable-next-line no-return-assign\n      uniqueCellSetIds.forEach(id => (clusters[id] = { name: id, set: [] }));\n      cellSetIds.forEach((id, i) => clusters[id].set.push([cellNames[i], null]));\n      Object.values(clusters).forEach(\n        // eslint-disable-next-line no-return-assign\n        cluster => (levelZeroNode = nodeAppendChild(levelZeroNode, cluster)),\n      );\n    }\n    cellSetsTree.tree.push(levelZeroNode);\n  });\n  return cellSetsTree;\n}\n\n/**\n * Loader for converting zarr into the cell sets json schema.\n */\nexport default class CellSetsZarrLoader extends AbstractTwoStepLoader {\n  loadCellSetIds() {\n    const { options } = this;\n    const cellSetZarrLocation = options.map(({ setName }) => setName);\n    return this.dataSource.loadObsVariables(cellSetZarrLocation);\n  }\n\n  async load() {\n    if (!this.cellSetsTree) {\n      const { options } = this;\n      this.cellSetsTree = Promise.all([\n        this.dataSource.loadObsIndex(),\n        this.loadCellSetIds(),\n      ]).then(data => dataToCellSetsTree(data, options));\n    }\n    const cellSetsTree = await this.cellSetsTree;\n    const coordinationValues = {};\n    const { tree } = cellSetsTree;\n    const newAutoSetSelectionParentName = tree[0].name;\n    // Create a list of set paths to initally select.\n    const newAutoSetSelections = tree[0].children.map(node => [\n      newAutoSetSelectionParentName,\n      node.name,\n    ]);\n    // Create a list of cell set objects with color mappings.\n    const newAutoSetColors = initializeCellSetColor(cellSetsTree, []);\n    coordinationValues.cellSetSelection = newAutoSetSelections;\n    coordinationValues.cellSetColor = newAutoSetColors;\n    return Promise.resolve(\n      new LoaderResult(cellSetsTree, null, coordinationValues),\n    );\n  }\n}\n", "import LoaderResult from '../LoaderResult';\nimport AbstractTwoStepLoader from '../AbstractTwoStepLoader';\n\n/**\n * Loader for converting zarr into the cell json schema.\n */\nexport default class CellsZarrLoader extends AbstractTwoStepLoader {\n  /**\n   * Class method for loading spatial cell centroids.\n   * @returns {Promise} A promise for an array of tuples/triples for cell centroids.\n   */\n  loadXy() {\n    const { xy } = (this.options || {});\n    if (this.xy) {\n      return this.xy;\n    }\n    if (!this.xy && xy) {\n      this.xy = this.dataSource.loadNumeric(xy);\n      return this.xy;\n    }\n    this.xy = Promise.resolve(null);\n    return this.xy;\n  }\n\n  /**\n   * Class method for loading spatial cell polygons.\n   * @returns {Promise} A promise for an array of arrays for cell polygons.\n   */\n  loadPoly() {\n    const { poly } = (this.options || {});\n    if (this.poly) {\n      return this.poly;\n    }\n    if (!this.poly && poly) {\n      this.poly = this.dataSource.loadNumeric(poly);\n      return this.poly;\n    }\n    this.poly = Promise.resolve(null);\n    return this.poly;\n  }\n\n  /**\n   * Class method for loading various mappings, like UMAP or tSNE cooridnates.\n   * @returns {Promise} A promise for an array of tuples of coordinates.\n   */\n  loadMappings() {\n    const { mappings } = (this.options || {});\n    if (this.mappings) {\n      return this.mappings;\n    }\n    if (!this.mappings && mappings) {\n      this.mappings = Promise.all(\n        Object.keys(mappings).map(async (coordinationName) => {\n          const { key } = mappings[coordinationName];\n          return { coordinationName, arr: await this.dataSource.loadNumeric(key) };\n        }),\n      );\n      return this.mappings;\n    }\n    this.mappings = Promise.resolve(null);\n    return this.mappings;\n  }\n\n  /**\n   * Class method for loading factors, which are cell set ids.\n   * @returns {Promise} A promise for an array of an array of strings of ids,\n   * where subarray is a clustering/factor.\n   */\n  loadFactors() {\n    const { factors } = (this.options || {});\n    if (factors) {\n      return this.dataSource.loadObsVariables(factors);\n    }\n    return Promise.resolve(null);\n  }\n\n  async load() {\n    if (!this.cells) {\n      this.cells = Promise.all([\n        this.loadMappings(),\n        this.loadXy(),\n        this.loadPoly(),\n        this.dataSource.loadObsIndex(),\n        this.loadFactors(),\n      ]).then(([mappings, xy, poly, cellNames, factors]) => {\n        const cells = {};\n        cellNames.forEach((name, i) => {\n          cells[name] = {};\n          if (mappings) {\n            mappings.forEach(({ coordinationName, arr }) => {\n              if (!cells[name].mappings) {\n                cells[name].mappings = {};\n              }\n              const { dims } = this.options.mappings[coordinationName];\n              cells[name].mappings[coordinationName] = dims.map(\n                dim => arr.data[i][dim],\n              );\n            });\n          }\n          if (xy) {\n            cells[name].xy = xy.data[i];\n          }\n          if (poly) {\n            cells[name].poly = poly.data[i];\n          }\n          if (factors) {\n            const factorsObj = {};\n            factors.forEach(\n              // eslint-disable-next-line no-return-assign\n              (factor, j) => (factorsObj[this.options.factors[j].split('/').slice(-1)] = factor[i]),\n            );\n            cells[name].factors = factorsObj;\n          }\n        });\n        return cells;\n      });\n    }\n    return Promise.resolve(new LoaderResult(await this.cells, null));\n  }\n}\n", "/* eslint-disable no-underscore-dangle */\nimport { openArray, slice } from 'zarr';\nimport { extent } from 'd3-array';\nimport LoaderResult from '../LoaderResult';\nimport AbstractTwoStepLoader from '../AbstractTwoStepLoader';\n\nconst normalize = (arr) => {\n  const [min, max] = extent(arr);\n  const ratio = 255 / (max - min);\n  const data = new Uint8Array(\n    arr.map(i => Math.floor((i - min) * ratio)),\n  );\n  return { data };\n};\n\nconst concatenateColumnVectors = (arr) => {\n  const numCols = arr.length;\n  const numRows = arr[0].length;\n  const { BYTES_PER_ELEMENT } = arr[0];\n  const view = new DataView(new ArrayBuffer(numCols * numRows * BYTES_PER_ELEMENT));\n  const TypedArray = arr[0].constructor;\n  const dtype = TypedArray.name.replace('Array', '');\n  for (let i = 0; i < numCols; i += 1) {\n    for (let j = 0; j < numRows; j += 1) {\n      view[`set${dtype}`](BYTES_PER_ELEMENT * (j * numCols + i), arr[i][j], true);\n    }\n  }\n  return new TypedArray(view.buffer);\n};\n\n/**\n * Loader for converting zarr into the a cell x gene matrix for use in Genes/Heatmap components.\n */\nexport default class MatrixZarrLoader extends AbstractTwoStepLoader {\n  /**\n   * Class method for loading the genes list from AnnData.var,\n   * filtered if a there is a `geneFilterZarr` present in the view config.\n   * @returns {Promise} A promise for the zarr array contianing the gene names.\n   */\n  async loadFilteredGeneNames() {\n    if (this.filteredGeneNames) {\n      return this.filteredGeneNames;\n    }\n    const { geneFilter: geneFilterZarr } = this.options;\n    const getFilterFn = async () => {\n      if (!geneFilterZarr) return data => data;\n      const geneFilter = await this.dataSource.getFlatArrDecompressed(geneFilterZarr);\n      return data => data.filter((_, j) => geneFilter[j]);\n    };\n\n    this.filteredGeneNames = Promise\n      .all([this.dataSource.loadVarIndex(), getFilterFn()])\n      .then(([data, filter]) => filter(data));\n    return this.filteredGeneNames;\n  }\n\n  /**\n   * Class method for loading a filtered subset of the genes list\n   * @param {String} filterZarr A location in the zarr store to fetch a boolean array from.\n   * @returns {Array} A list of filtered genes.\n   */\n  async _getFilteredGenes(filterZarr) {\n    const filter = await this.dataSource.getFlatArrDecompressed(filterZarr);\n    const geneNames = await this.loadFilteredGeneNames();\n    const genes = geneNames.filter((_, i) => filter[i]);\n    return genes;\n  }\n\n  /**\n   * Class method for getting the integer indices of a selection of genes within a list.\n   * @param {Array} selection A list of gene names.\n   * @returns {Array} A list of integer indices.\n   */\n  async _getGeneIndices(selection) {\n    const geneNames = await this.loadFilteredGeneNames();\n    return selection.map(gene => geneNames.indexOf(gene));\n  }\n\n  /**\n   * Class method for getting the number of cells i.e entries in `obs`.\n   * @returns {Number} The number of cells.\n   */\n  async _getNumCells() {\n    const cells = await this.dataSource.loadObsIndex();\n    return cells.length;\n  }\n\n  /**\n   * Class method for getting the number of genes i.e entries in `var`,\n   * potentially filtered by `genesFilter`.\n   * @returns {Number} The number of genes.\n   */\n  async _getNumGenes() {\n    const genes = await this.loadFilteredGeneNames();\n    return genes.length;\n  }\n\n  /**\n   * Class method for opening the sparse matrix arrays in zarr.\n   * @returns {Array} A list of promises pointing to the indptr, indices, and data of the matrix.\n   */\n  async _openSparseArrays() {\n    const { options: { matrix } } = this;\n    const { store } = this.dataSource;\n    if (this.sparseArrays) {\n      return this.sparseArrays;\n    }\n    this.sparseArrays = Promise.all(\n      ['indptr', 'indices', 'data'].map(name => openArray({ store, path: `${matrix}/${name}`, mode: 'r' })),\n    );\n    return this.sparseArrays;\n  }\n\n  /**\n   * Class method for loading a gene selection from a CSC matrix.\n   * @param {Array} selection A list of gene names whose data should be fetched.\n   * @returns {Promise} A Promise.all array of promises containing Uint8Arrays, one per selection.\n   */\n  async _loadCSCGeneSelection(selection) {\n    const indices = await this._getGeneIndices(selection);\n    const [indptrArr, indexArr, cellXGeneArr] = await this._openSparseArrays();\n    const numCells = await this._getNumCells();\n    const { data: cols } = await indptrArr.getRaw(null);\n    // If there is not change in the column indexer, then the data is all zeros\n    return Promise.all(\n      indices.map(async (index) => {\n        const startRowIndex = cols[index];\n        const endRowIndex = cols[index + 1];\n        const isColumnAllZeros = startRowIndex === endRowIndex;\n        const geneData = new Float32Array(numCells).fill(0);\n        if (isColumnAllZeros) {\n          return geneData;\n        }\n        const { data: rowIndices } = await indexArr.get([\n          slice(startRowIndex, endRowIndex),\n        ]);\n        const { data: cellXGeneData } = await cellXGeneArr.get([\n          slice(startRowIndex, endRowIndex),\n        ]);\n        for (let rowIndex = 0; rowIndex < rowIndices.length; rowIndex += 1) {\n          geneData[rowIndices[rowIndex]] = cellXGeneData[rowIndex];\n        }\n        return geneData;\n      }),\n    );\n  }\n\n  /**\n   * Class method for loading a gene selection from a CSR matrix.\n   * @param {Array} selection A list of gene names whose data should be fetched.\n   * @returns {Promise} A Promise.all array of promises containing Uint8Arrays, one per selection.\n   */\n  async _loadCSRGeneSelection(selection) {\n    const indices = await this._getGeneIndices(selection);\n    const numGenes = await this._getNumGenes();\n    const numCells = await this._getNumCells();\n    const cellXGene = await this._loadCSRSparseCellXGene();\n    return indices.map((index) => {\n      const geneData = new Float32Array(numCells).fill(0);\n      for (let i = 0; i < numCells; i += 1) {\n        geneData[i] = cellXGene[i * numGenes + index];\n      }\n      return geneData;\n    });\n  }\n\n  /**\n   * Class method for loading row oriented (CSR) sparse data from zarr.\n   *\n   * @returns {Object} A { data: Float32Array } contianing the CellXGene matrix.\n   */\n  async _loadCSRSparseCellXGene() {\n    if (this._sparseMatrix) {\n      return this._sparseMatrix;\n    }\n    this._sparseMatrix = this._openSparseArrays().then(async (sparseArrays) => {\n      const { options: { matrix } } = this;\n      const { shape } = await this.dataSource.getJson(`${matrix}/.zattrs`);\n      const [rows, cols, cellXGene] = await Promise.all(\n        sparseArrays.map(async (arr) => {\n          const { data } = await arr.getRaw(null);\n          return data;\n        }),\n      );\n      const cellXGeneMatrix = new Float32Array(shape[0] * shape[1]).fill(0);\n      let row = 0;\n      rows.forEach((_, index) => {\n        const rowStart = rows[index];\n        const rowEnd = rows[index + 1];\n        for (let i = rowStart; i < rowEnd; i += 1) {\n          const val = cellXGene[i];\n          const col = cols[i];\n          cellXGeneMatrix[row * shape[1] + col] = val;\n        }\n        row += 1;\n      });\n      return cellXGeneMatrix;\n    });\n    return this._sparseMatrix;\n  }\n\n  /**\n   * Class method for loading column oriented (CSC) sparse data from zarr.\n   * @returns {Object} A { data: Float32Array } contianing the CellXGene matrix.\n   */\n  async _loadCSCSparseCellXGene() {\n    if (this._sparseMatrix) {\n      return this._sparseMatrix;\n    }\n    this._sparseMatrix = this._openSparseArrays().then(async (sparseArrays) => {\n      const { options: { matrix } } = this;\n      const { shape } = await this.dataSource.getJson(`${matrix}/.zattrs`);\n      const [cols, rows, cellXGene] = await Promise.all(\n        sparseArrays.map(async (arr) => {\n          const { data } = await arr.getRaw(null);\n          return data;\n        }),\n      );\n      const cellXGeneMatrix = new Float32Array(shape[0] * shape[1]).fill(0);\n      let col = 0;\n      cols.forEach((_, index) => {\n        const colStart = cols[index];\n        const colEnd = cols[index + 1];\n        for (let i = colStart; i < colEnd; i += 1) {\n          const val = cellXGene[i];\n          const row = rows[i];\n          cellXGeneMatrix[row * shape[1] + col] = val;\n        }\n        col += 1;\n      });\n      return cellXGeneMatrix;\n    });\n    return this._sparseMatrix;\n  }\n\n  /**\n   * Class method for loading the cell x gene matrix.\n   * @returns {Promise} A promise for the zarr array contianing the cell x gene data.\n   */\n  async loadCellXGene() {\n    const { store } = this.dataSource;\n    if (this.cellXGene) {\n      return this.cellXGene;\n    }\n    const { options: { matrix, matrixGeneFilter } } = this;\n    if (!this._matrixZattrs) {\n      this._matrixZattrs = await this.dataSource.getJson(`${matrix}/.zattrs`);\n    }\n    const encodingType = this._matrixZattrs['encoding-type'];\n    if (!matrixGeneFilter) {\n      if (encodingType === 'csr_matrix') {\n        this.cellXGene = this._loadCSRSparseCellXGene().then(data => normalize(data));\n      } else if (encodingType === 'csc_matrix') {\n        this.cellXGene = this._loadCSCSparseCellXGene().then(data => normalize(data));\n      } else {\n        if (!this.arr) {\n          this.arr = openArray({ store, path: matrix, mode: 'r' });\n        }\n        this.cellXGene = this.arr.then(z => z.getRaw(null).then(({ data }) => normalize(data)));\n      }\n    } else if (encodingType === 'csr_matrix') {\n      this.cellXGene = this._loadCSRSparseCellXGene().then(\n        async (cellXGene) => {\n          const filteredGenes = await this._getFilteredGenes(matrixGeneFilter);\n          const numGenesFiltered = filteredGenes.length;\n          const geneNames = await this.loadFilteredGeneNames();\n          const numGenes = geneNames.length;\n          const numCells = await this._getNumCells();\n          const cellXGeneMatrixFiltered = new Float32Array(\n            numCells * numGenesFiltered,\n          ).fill(0);\n          for (let i = 0; i < numGenesFiltered; i += 1) {\n            const index = geneNames.indexOf(filteredGenes[i]);\n            for (let j = 0; j < numCells; j += 1) {\n              cellXGeneMatrixFiltered[j * numGenesFiltered + i] = cellXGene[j * numGenes + index];\n            }\n          }\n          return normalize(cellXGeneMatrixFiltered);\n        },\n      );\n    } else {\n      const genes = await this._getFilteredGenes(matrixGeneFilter);\n      this.cellXGene = this.loadGeneSelection({ selection: genes, shouldNormalize: false })\n        .then(({ data }) => (normalize(concatenateColumnVectors(data))));\n    }\n    return this.cellXGene;\n  }\n\n  /**\n   * Class method for loading a gene selection.\n   * @param {Object} args\n   * @param {Array} args.selection A list of gene names whose data should be fetched.\n   * @param {Boolean} args.shouldNormalize A list of gene names whose data should be fetched.\n   * @returns {Object} { data } containing an array of gene expression data.\n   */\n  async loadGeneSelection({ selection, shouldNormalize = true }) {\n    const { options: { matrix } } = this;\n    const { store } = this.dataSource;\n    if (!this._matrixZattrs) {\n      this._matrixZattrs = await this.dataSource.getJson(`${matrix}/.zattrs`);\n    }\n    const encodingType = this._matrixZattrs['encoding-type'];\n    let genes;\n    if (encodingType === 'csc_matrix') {\n      genes = await this._loadCSCGeneSelection(selection);\n    } else if (encodingType === 'csr_matrix') {\n      genes = await this._loadCSRGeneSelection(selection);\n    } else {\n      if (!this.arr) {\n        this.arr = openArray({ store, path: matrix, mode: 'r' });\n      }\n      const indices = await this._getGeneIndices(selection);\n      // We can index directly into a normal dense array zarr store via `get`.\n      genes = await Promise.all(\n        indices.map(index => this.arr.then(z => z.get([null, index])).then(({ data }) => data)),\n      );\n    }\n    return { data: genes.map(i => (shouldNormalize ? normalize(i).data : i)), url: null };\n  }\n\n  /**\n   * Class method for loading only attributes i.e rows and columns\n   * @param {Array} selection A list of gene names whose data should be fetched.\n   * @returns {Object} { data: { rows, cols }, url } containing row and col labels for the matrix.\n   */\n  loadAttrs() {\n    return Promise.all([this.dataSource.loadObsIndex(), this.loadFilteredGeneNames()])\n      .then((d) => {\n        const [cellNames, geneNames] = d;\n        const attrs = { rows: cellNames, cols: geneNames };\n        return {\n          data: attrs,\n          url: null,\n        };\n      });\n  }\n\n  load() {\n    return Promise.all([this.loadAttrs(), this.loadCellXGene()]).then(\n      async (d) => {\n        const [{ data: attrs }, cellXGene] = d;\n        const {\n          options: { matrixGeneFilter: matrixGeneFilterZarr },\n        } = this;\n        // In order to return the correct gene list with the heatmap data,\n        // we need to filter the columns of attrs so it matches the cellXGene data.\n        if (matrixGeneFilterZarr) {\n          const matrixGeneFilter = await this.dataSource.getFlatArrDecompressed(\n            matrixGeneFilterZarr,\n          );\n          attrs.cols = attrs.cols.filter((_, i) => matrixGeneFilter[i]);\n        }\n        return Promise.resolve(new LoaderResult([attrs, cellXGene], null));\n      },\n    );\n  }\n}\n", "import CellSetsZarrLoader from './CellSetsZarrLoader';\nimport CellsZarrLoader from './CellsZarrLoader';\nimport MatrixZarrLoader from './MatrixZarrLoader';\n\nexport default { CellSetsZarrLoader, CellsZarrLoader, MatrixZarrLoader };\n", "import AbstractTwoStepLoader from './AbstractTwoStepLoader';\nimport LoaderResult from './LoaderResult';\n\nexport default class GenomicProfilesZarrLoader extends AbstractTwoStepLoader {\n  loadAttrs() {\n    if (this.attrs) {\n      return this.attrs;\n    }\n    this.attrs = this.dataSource.getJson('.zattrs');\n    return this.attrs;\n  }\n\n  load() {\n    const { url } = this;\n    return this.loadAttrs()\n      .then(attrs => Promise.resolve(new LoaderResult(attrs, url)));\n  }\n}\n", "/* eslint-disable no-underscore-dangle */\nimport { openArray } from 'zarr';\nimport range from 'lodash/range';\nimport ZarrDataSource from './ZarrDataSource';\n\nconst readFloat32FromUint8 = (bytes) => {\n  if (bytes.length !== 4) {\n    throw new Error('readFloat32 only takes in length 4 byte buffers');\n  }\n  return new Int32Array(bytes.buffer)[0];\n};\n\nconst HEADER_LENGTH = 4;\n\n/**\n   * Method for decoding text arrays from zarr.\n   * Largerly a port of https://github.com/zarr-developers/numcodecs/blob/2c1aff98e965c3c4747d9881d8b8d4aad91adb3a/numcodecs/vlen.pyx#L135-L178\n   * @returns {string[]} An array of strings.\n   */\nfunction parseVlenUtf8(buffer) {\n  const decoder = new TextDecoder();\n  let data = 0;\n  const dataEnd = data + buffer.length;\n  const length = readFloat32FromUint8(buffer.slice(data, HEADER_LENGTH));\n  if (buffer.length < HEADER_LENGTH) {\n    throw new Error('corrupt buffer, missing or truncated header');\n  }\n  data += HEADER_LENGTH;\n  const output = new Array(length);\n  for (let i = 0; i < length; i += 1) {\n    if (data + 4 > dataEnd) {\n      throw new Error('corrupt buffer, data seem truncated');\n    }\n    const l = readFloat32FromUint8(buffer.slice(data, data + 4));\n    data += 4;\n    if (data + l > dataEnd) {\n      throw new Error('corrupt buffer, data seem truncated');\n    }\n    output[i] = decoder.decode(buffer.slice(data, data + l));\n    data += l;\n  }\n  return output;\n}\n\n/**\n * A base AnnData loader which has all shared methods for more comlpex laoders,\n * like loading cell names and ids. It inherits from AbstractLoader.\n */\nexport default class AnnDataSource extends ZarrDataSource {\n  constructor(...args) {\n    super(...args);\n    /** @type {Map<string, Promise<string[]>} */\n    this.obsPromises = new Map();\n  }\n\n  /**\n   * Class method for loading obs variables.\n   * Takes the location as an argument because this is shared across objects,\n   * which have different ways of specifying location.\n   * @param {string[]} obsPaths An array of strings like \"obs/leiden\" or \"obs/bulk_labels.\"\n   * @returns {Promise} A promise for an array of ids with one per cell.\n   */\n  loadObsVariables(obsPaths) {\n    const obsPromises = obsPaths.map((obsPath) => {\n      const getObsCol = (obsCol) => {\n        if (!this.obsPromises.has(obsCol)) {\n          const obsPromise = this._loadObsVariable(obsCol).catch((err) => {\n            // clear from cache if promise rejects\n            this.obsPromises.delete(obsCol);\n            // propagate error\n            throw err;\n          });\n          this.obsPromises.set(obsCol, obsPromise);\n        }\n        return this.obsPromises.get(obsCol);\n      };\n      if (Array.isArray(obsPath)) {\n        return Promise.resolve(Promise.all(obsPath.map(getObsCol)));\n      }\n      return getObsCol(obsPath);\n    });\n    return Promise.all(obsPromises);\n  }\n\n  async _loadObsVariable(obs) {\n    const { store } = this;\n    const { categories } = await this.getJson(`${obs}/.zattrs`);\n    let categoriesValues;\n    if (categories) {\n      const { dtype } = await this.getJson(`/obs/${categories}/.zarray`);\n      if (dtype === '|O') {\n        categoriesValues = await this.getFlatArrDecompressed(`/obs/${categories}`);\n      }\n    }\n    const obsArr = await openArray({ store, path: obs, mode: 'r' });\n    const obsValues = await obsArr.get();\n    const { data } = obsValues;\n    const mappedObsValues = Array.from(data).map(\n      i => (!categoriesValues ? String(i) : categoriesValues[i]),\n    );\n    return mappedObsValues;\n  }\n\n  /**\n   * Class method for loading general numeric arrays.\n   * @param {string} path A string like obsm.X_pca.\n   * @returns {Promise} A promise for a zarr array containing the data.\n   */\n  loadNumeric(path) {\n    const { store } = this;\n    return openArray({\n      store,\n      path,\n      mode: 'r',\n    }).then(arr => arr.get());\n  }\n\n  /**\n   * A common method for loading flattened data\n   * i.e that which has shape [n] where n is a natural number.\n   * @param {string} path A path to a flat array location, like obs/_index\n   * @returns {Array} The data from the zarr array.\n   */\n  getFlatArrDecompressed(path) {\n    const { store } = this;\n    return openArray({\n      store,\n      path,\n      mode: 'r',\n    }).then(async (z) => {\n      let data;\n      const parseAndMergeTextBytes = (dbytes) => {\n        const text = parseVlenUtf8(dbytes);\n        if (!data) {\n          data = text;\n        } else {\n          data = data.concat(text);\n        }\n      };\n      const mergeBytes = (dbytes) => {\n        if (!data) {\n          data = dbytes;\n        } else {\n          const tmp = new Uint8Array(dbytes.buffer.byteLength + data.buffer.byteLength);\n          tmp.set(new Uint8Array(data.buffer), 0);\n          tmp.set(dbytes, data.buffer.byteLength);\n          data = tmp;\n        }\n      };\n      const numRequests = Math.ceil(z.meta.shape[0] / z.meta.chunks[0]);\n      const requests = range(numRequests).map(async item => store.getItem(`${z.keyPrefix}${String(item)}`)\n        .then(buf => z.compressor.then(compressor => compressor.decode(buf))));\n      const dbytesArr = await Promise.all(requests);\n      dbytesArr.forEach((dbytes) => {\n        // Use vlenutf-8 decoding if necessary and merge `data` as a normal array.\n        if (Array.isArray(z.meta.filters) && z.meta.filters[0].id === 'vlen-utf8') {\n          parseAndMergeTextBytes(dbytes);\n          // Otherwise just merge the bytes as a typed array.\n        } else {\n          mergeBytes(dbytes);\n        }\n      });\n      const {\n        meta: {\n          shape: [length],\n        },\n      } = z;\n      // truncate the filled in values\n      return data.slice(0, length);\n    });\n  }\n\n  /**\n   * Class method for loading the obs index.\n   * @returns {Promise} An promise for a zarr array containing the indices.\n   */\n  loadObsIndex() {\n    if (this.obsIndex) {\n      return this.obsIndex;\n    }\n    this.obsIndex = this.getJson('obs/.zattrs')\n      .then(({ _index }) => this.getFlatArrDecompressed(`/obs/${_index}`));\n    return this.obsIndex;\n  }\n\n  /**\n   * Class method for loading the var index.\n   * @returns {Promise} An promise for a zarr array containing the indices.\n   */\n  loadVarIndex() {\n    if (this.varIndex) {\n      return this.varIndex;\n    }\n    this.varIndex = this.getJson('var/.zattrs')\n      .then(({ _index }) => this.getFlatArrDecompressed(`/var/${_index}`));\n    return this.varIndex;\n  }\n}\n", "import { HTTPStore, KeyError } from 'zarr';\n\n/**\n * A loader ancestor class containing a default constructor\n * and a stub for the required load() method.\n */\nexport default class ZarrDataSource {\n  constructor({ url, requestInit }) {\n    // TODO: We should probably add a way of allowing HEAD requests as well:\n    // https://github.com/gzuidhof/zarr.js/blob/375ce0c299469a970da6bb5653513564e25806bb/docs/getting-started/remote-data.md#stores\n    const supportedMethods = ['GET'];\n    this.store = new HTTPStore(url, {\n      supportedMethods, fetchOptions: requestInit,\n    });\n  }\n\n  /**\n   * Class method for decoding json from the store.\n   * @param {string} key A path to the item.\n   * @returns {Promise} This async function returns a promise\n   * that resolves to the parsed JSON if successful.\n   * @throws This may throw an error.\n   */\n  async getJson(key) {\n    try {\n      const buf = await this.store.getItem(key);\n      const text = new TextDecoder('utf-8').decode(buf);\n      return JSON.parse(text);\n    } catch (err) {\n      if (err instanceof KeyError) {\n        return {};\n      }\n      throw err;\n    }\n  }\n}\n", "import AbstractLoaderError from './AbstractLoaderError';\n\nexport default class DataSourceFetchError extends AbstractLoaderError {\n  constructor(source, url, headers) {\n    super(`${source} Error HTTP Status fetching from ${url}`);\n    this.source = source;\n    this.url = url;\n    this.headers = headers;\n  }\n\n  warnInConsole() {\n    const { source, url, headers } = this;\n    console.warn(`${source} failed to fetch from ${url} with headers ${headers}`);\n  }\n}\n", "/* eslint-disable no-underscore-dangle */\nimport DataSourceFetchError from '../errors/DataSourceFetchError';\n\nexport default class JsonSource {\n  constructor({ url, requestInit }) {\n    this.url = url;\n    this.requestInit = requestInit;\n  }\n\n  get data() {\n    if (this._data) return this._data;\n    this._data = fetch(this.url, this.requestInit).then((response) => {\n      if (!response.ok) {\n        return Promise.reject(new DataSourceFetchError('JsonSource', this.url, response.headers));\n      }\n      return response.json();\n    // eslint-disable-next-line no-console\n    }).catch(() => Promise.reject(new DataSourceFetchError('JsonSource', this.url, {})));\n    return this._data;\n  }\n}\n", "import JsonLoader from './JsonLoader';\nimport MatrixZarrLoader from './MatrixZarrLoader';\nimport GenesJsonAsMatrixZarrLoader from './GenesJsonAsMatrixZarrLoader';\nimport ClustersJsonAsMatrixZarrLoader from './ClustersJsonAsMatrixZarrLoader';\nimport RasterJsonLoader from './RasterJsonLoader';\nimport OmeZarrLoader from './OmeZarrLoader';\nimport CellSetsJsonLoader from './CellSetsJsonLoader';\nimport AnnDataLoaders from './anndata-loaders';\nimport GenomicProfilesZarrLoader from './GenomicProfilesZarrLoader';\n\nimport { AnnDataSource, ZarrDataSource, JsonSource } from './data-sources';\n\nconst ANNDATA = 'anndata';\n\nconst fileTypeToLoaderAndSource = {\n  'expression-matrix.zarr': [ZarrDataSource, MatrixZarrLoader],\n  'clusters.json': [JsonSource, ClustersJsonAsMatrixZarrLoader],\n  'genes.json': [JsonSource, GenesJsonAsMatrixZarrLoader],\n  'cells.json': [JsonSource, JsonLoader],\n  'molecules.json': [JsonSource, JsonLoader],\n  'neighborhoods.json': [JsonSource, JsonLoader],\n  'raster.json': [JsonSource, RasterJsonLoader],\n  'raster.ome-zarr': [ZarrDataSource, OmeZarrLoader],\n  'cell-sets.json': [JsonSource, CellSetsJsonLoader],\n  [`${ANNDATA}-cell-sets.zarr`]: [AnnDataSource, AnnDataLoaders.CellSetsZarrLoader],\n  [`${ANNDATA}-cells.zarr`]: [AnnDataSource, AnnDataLoaders.CellsZarrLoader],\n  [`${ANNDATA}-expression-matrix.zarr`]: [AnnDataSource, AnnDataLoaders.MatrixZarrLoader],\n  'genomic-profiles.zarr': [ZarrDataSource, GenomicProfilesZarrLoader],\n};\n\nexport function getSourceAndLoaderFromFileType(type) {\n  return fileTypeToLoaderAndSource[type] || [JsonSource, JsonLoader];\n}\n", "import React, { useEffect, useRef, useState } from 'react';\nimport { getConfig, listConfigs } from './api';\nimport Welcome from './Welcome';\nimport Warning from './Warning';\nimport Vitessce from './Vitessce';\n\nimport '../css/index.scss';\nimport '../../node_modules/react-grid-layout/css/styles.css';\nimport '../../node_modules/react-resizable/css/styles.css';\n\nfunction AwaitResponse(props) {\n  const {\n    response,\n    theme,\n  } = props;\n  const [isLoading, setIsLoading] = useState(true);\n  const responseRef = useRef();\n  useEffect(() => {\n    response.then((c) => {\n      responseRef.current = c;\n      setIsLoading(false);\n    });\n  }, [response]);\n  return (!isLoading ? React.createElement(responseRef.current) : <Warning title=\"Loading...\" theme={theme} />);\n}\n\nfunction preformattedDetails(response) {\n  return `\n    ok: ${response.ok}\n    status: ${response.status}\n    statusText: ${response.statusText}\n    redirected: ${response.redirected}\n    type: ${response.type}\n    url: ${response.url}`; // TODO: headers\n}\n\n\nfunction checkResponse(response, theme, debug) {\n  if (!response.ok) {\n    return Promise.resolve(\n      () => (\n        <Warning\n          title=\"Fetch response not OK\"\n          preformatted={preformattedDetails(response)}\n          theme={theme}\n        />\n      ),\n    );\n  }\n  return response.text().then((text) => {\n    try {\n      const config = JSON.parse(text);\n      return Promise.resolve(() => (\n        <Vitessce\n          config={config}\n          theme={theme}\n          // eslint-disable-next-line no-console\n          onConfigChange={debug ? console.log : undefined}\n          validateOnConfigChange={debug}\n        />\n      ));\n    } catch (e) {\n      return Promise.resolve(() => (\n        <Warning\n          title=\"Error parsing JSON\"\n          preformatted={preformattedDetails(response)}\n          unformatted={`${e.message}: ${text}`}\n          theme={theme}\n        />\n      ));\n    }\n  });\n}\n\n/**\n * Use the theme provided if it is valid, otherwise fall back to the 'dark' theme.\n * @param {string} theme A potentially invalid theme name.\n * @returns {string} A valid theme name.\n */\nfunction validateTheme(theme) {\n  return (['light', 'dark'].includes(theme) ? theme : 'dark');\n}\n\n/**\n * Convenience function for creating the minimal Vitessce demo and demo listing\n * components based on the current URL parameters.\n * @param {object} params\n * @param {number|null} params.rowHeight The row height to pass to the Vitessce grid.\n * Optional. By default, null.\n * @param {boolean} showBetaHeader Should the header which links to the beta documentation\n * website be rendered? Optional. By default, false.\n * @returns A component, either <Welcome/> or <Vitessce/> depending on the URL params.\n */\nexport function createApp(params) {\n  const { rowHeight = null, showBetaHeader = false } = params;\n  const urlParams = new URLSearchParams(window.location.search);\n  const datasetId = urlParams.get('dataset');\n  const debug = urlParams.get('debug') === 'true';\n  const datasetUrl = urlParams.get('url');\n  const showAll = urlParams.get('show') === 'all';\n  const theme = validateTheme(urlParams.get('theme'));\n\n  if (datasetId) {\n    const config = getConfig(datasetId);\n    return (\n      <Vitessce\n        config={config}\n        rowHeight={rowHeight}\n        theme={theme}\n        // eslint-disable-next-line no-console\n        onConfigChange={(debug ? console.log : undefined)}\n        validateOnConfigChange={debug}\n      />\n    );\n  }\n  if (datasetUrl) {\n    const responsePromise = fetch(datasetUrl)\n      .then(response => checkResponse(response, theme, debug))\n      .catch(error => Promise.resolve(() => (\n        <Warning\n          title=\"Error fetching\"\n          unformatted={error.message}\n          theme={theme}\n        />\n      )));\n    return (\n      <AwaitResponse response={responsePromise} theme={theme} />\n    );\n  }\n  const configs = listConfigs(showAll);\n  return (<Welcome configs={configs} theme={theme} showBetaHeader={showBetaHeader} />);\n}\n", "// Exported because used by the cypress tests: They route API requests to the fixtures instead.\nexport const urlPrefix = 'https://s3.amazonaws.com/vitessce-data/0.0.31/master_release';\n\nfunction makeLayerNameToConfig(datasetPrefix) {\n  return name => ({\n    name,\n    type: name.toUpperCase(),\n    fileType: `${name}.json`,\n    url: `${urlPrefix}/${datasetPrefix}/${datasetPrefix}.${name}.json`,\n  });\n}\n\nconst linnarssonLayerNames = [\n  'cells',\n  'cell-sets',\n  'raster',\n  'molecules',\n  'neighborhoods',\n];\nconst linnarssonDescription = 'Spatial organization of the somatosensory cortex revealed by cyclic smFISH';\nconst linnarssonBase = {\n  description: linnarssonDescription,\n  layers: [\n    ...linnarssonLayerNames.map(makeLayerNameToConfig('linnarsson')),\n    {\n      // TODO: remove this temporary override when the\n      // clusters.json file has been converted to expression-matrix.zarr format.\n      ...makeLayerNameToConfig('linnarsson')('clusters'),\n      type: 'EXPRESSION-MATRIX',\n    },\n  ],\n};\nconst linnarssonBaseNoClusters = {\n  description: linnarssonDescription,\n  layers: linnarssonLayerNames.filter(name => name !== 'clusters')\n    .map(makeLayerNameToConfig('linnarsson')),\n};\n\nconst driesDescription = 'Giotto, a pipeline for integrative analysis and visualization of single-cell spatial transcriptomic data';\nconst driesBase = {\n  description: driesDescription,\n  layers: [\n    'cells',\n    'cell-sets',\n  ].map(makeLayerNameToConfig('dries')),\n};\n\nconst wangDescription = 'Multiplexed imaging of high-density libraries of RNAs with MERFISH and expansion microscopy';\nconst wangBase = {\n  description: wangDescription,\n  layers: [\n    ...['cells', 'molecules'].map(makeLayerNameToConfig('wang')),\n    {\n      // TODO: remove this temporary override when the\n      // genes.json file has been converted to expression-matrix.zarr format.\n      ...makeLayerNameToConfig('wang')('genes'),\n      name: 'expression-matrix',\n      type: 'EXPRESSION-MATRIX',\n    },\n  ],\n};\n\nconst vanderbiltDescription = 'High Bit Depth (uint16) Multiplex Immunofluorescence Imaging';\nconst vanderbiltBase = {\n  description: vanderbiltDescription,\n  layers: [\n    'raster',\n  ].map(makeLayerNameToConfig('spraggins')),\n};\n\n/* eslint-disable object-property-newline */\n/* eslint-disable object-curly-newline */\n// Note that the ordering of the components in the staticLayout\n// can affect the z-index of plot tooltips due to the\n// resulting ordering of elements in the DOM.\nexport const configs = {\n  'just-scatter': {\n    version: '0.1.0',\n    public: false,\n    layers: [\n      {\n        name: 'cells',\n        type: 'CELLS',\n        fileType: 'cells.json',\n        url: `${urlPrefix}/linnarsson/linnarsson.cells.json`,\n        requestInit: {\n          // Where the client checks that the value is from an enumeration,\n          // I've chosen one of the allowed values,\n          // but nothing on our S3 actually needs any of these.\n          method: 'GET',\n          headers: { 'x-foo': 'FAKE' },\n          mode: 'cors',\n          credentials: 'omit',\n          cache: 'no-store',\n          redirect: 'error',\n          referrer: 'FAKE',\n          integrity: 'FAKE',\n        },\n      },\n    ],\n    name: 'Linnarsson, just scatterplot',\n    staticLayout: [\n      {\n        component: 'scatterplot',\n        props: {\n          mapping: 't-SNE',\n          view: {\n            zoom: 0.75,\n            target: [0, 0, 0],\n          },\n        },\n        x: 0, y: 0, w: 12, h: 2,\n      },\n    ],\n  },\n  'just-scatter-expression': {\n    version: '0.1.0',\n    public: false,\n    layers: [\n      {\n        name: 'cells',\n        type: 'CELLS',\n        url: 'https://s3.amazonaws.com/vitessce-data/0.0.20/master_release/linnarsson/linnarsson.cells.json',\n      },\n      {\n        name: 'genes',\n        type: 'GENES',\n        url: 'https://s3.amazonaws.com/vitessce-data/0.0.20/master_release/linnarsson/linnarsson.genes.json',\n      },\n    ],\n    name: 'Linnarsson, just scatterplot and expression',\n    staticLayout: [\n      {\n        component: 'scatterplot',\n        props: {\n          mapping: 't-SNE',\n          view: {\n            zoom: 0.75,\n            target: [0, 0, 0],\n          },\n        },\n        x: 0, y: 0, w: 8, h: 2,\n      },\n      {\n        component: 'genes',\n        x: 8, y: 2, w: 4, h: 2,\n      },\n    ],\n  },\n  'linnarsson-2018': {\n    name: 'Linnarsson',\n    version: '1.0.0',\n    description: linnarssonDescription,\n    public: true,\n    datasets: [\n      {\n        uid: 'linnarsson-2018',\n        name: 'Linnarsson 2018',\n        description: `Linnarsson: ${linnarssonDescription}`,\n        files: linnarssonBase.layers.map(file => ({\n          type: file.type.toLowerCase(),\n          fileType: file.fileType,\n          url: file.url,\n        })),\n      },\n    ],\n    initStrategy: 'auto',\n    coordinationSpace: {\n      embeddingZoom: {\n        PCA: 0,\n        TSNE: 0.75,\n      },\n      embeddingType: {\n        PCA: 'PCA',\n        TSNE: 't-SNE',\n      },\n      spatialZoom: {\n        A: -5.5,\n      },\n      spatialTargetX: {\n        A: 16000,\n      },\n      spatialTargetY: {\n        A: 20000,\n      },\n    },\n    layout: [\n      { component: 'description',\n        x: 0, y: 0, w: 2, h: 1 },\n      { component: 'layerController',\n        x: 0, y: 1, w: 2, h: 4,\n      },\n      { component: 'status',\n        x: 0, y: 5, w: 2, h: 1 },\n      { component: 'spatial',\n        coordinationScopes: {\n          spatialZoom: 'A',\n          spatialTargetX: 'A',\n          spatialTargetY: 'A',\n        },\n        x: 2, y: 0, w: 4, h: 4 },\n      { component: 'genes',\n        x: 9, y: 0, w: 3, h: 2 },\n      { component: 'cellSets',\n        x: 9, y: 3, w: 3, h: 2 },\n      { component: 'heatmap',\n        props: {\n          transpose: true,\n        },\n        x: 2, y: 4, w: 5, h: 2 },\n      { component: 'cellSetExpression',\n        x: 7, y: 4, w: 3, h: 2 },\n      { component: 'expressionHistogram',\n        x: 10, y: 4, w: 2, h: 2 },\n      { component: 'scatterplot',\n        coordinationScopes: {\n          embeddingType: 'PCA',\n          embeddingZoom: 'PCA',\n        },\n        x: 6, y: 0, w: 3, h: 2 },\n      { component: 'scatterplot',\n        coordinationScopes: {\n          embeddingType: 'TSNE',\n          embeddingZoom: 'TSNE',\n        },\n        x: 6, y: 2, w: 3, h: 2 },\n    ],\n  },\n  'linnarsson-2018-two-spatial': {\n    ...linnarssonBase,\n    version: '0.1.0',\n    name: 'Linnarsson (two spatial)',\n    staticLayout: [\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -8,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 0, y: 0, w: 5, h: 2 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 2, w: 5, h: 2 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 5, y: 0, w: 5, h: 2 },\n      { component: 'scatterplot',\n        props: { mapping: 'PCA' },\n        x: 5, y: 2, w: 5, h: 2 },\n      { component: 'genes',\n        x: 10, y: 2, w: 2, h: 2 },\n      { component: 'heatmap',\n        x: 0, y: 4, w: 12 },\n    ],\n  },\n  'linnarsson-2018-just-spatial': {\n    ...linnarssonBaseNoClusters,\n    version: '0.1.0',\n    name: 'Linnarsson (just spatial)',\n    staticLayout: [\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 0, y: 0, w: 10, h: 2 },\n      { component: 'genes',\n        x: 10, y: 1, w: 2, h: 1 },\n    ],\n  },\n  'linnarsson-2018-static': {\n    ...linnarssonBase,\n    version: '0.1.0',\n    name: 'Linnarsson (static layout)',\n    staticLayout: [\n      { component: 'description',\n        props: {\n          description: `Linnarsson (static layout): ${linnarssonDescription}`,\n        },\n        x: 0, y: 0, w: 3, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 2, w: 3, h: 2 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 3, y: 0, w: 6, h: 4 },\n      { component: 'genes',\n        x: 9, y: 2, w: 3, h: 2 },\n      { component: 'heatmap',\n        x: 0, y: 4, w: 12, h: 1 },\n    ],\n  },\n  'linnarsson-2018-dozen': {\n    ...linnarssonBase,\n    version: '0.1.0',\n    name: 'Linnarsson (static layout, redundant components for performance testing)',\n    staticLayout: [\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 0, y: 0, w: 4, h: 1 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 0, y: 1, w: 4, h: 1 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 4, y: 0, w: 4, h: 1 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 4, y: 1, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 2, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 3, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 4, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 5, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 'PCA' },\n        x: 4, y: 2, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 'PCA' },\n        x: 4, y: 3, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 'PCA' },\n        x: 4, y: 4, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 'PCA' },\n        x: 4, y: 5, w: 4, h: 1 },\n      { component: 'genes',\n        x: 8, y: 2, w: 4, h: 2 },\n      { component: 'heatmap',\n        x: 8, y: 4, w: 4, h: 2 },\n    ],\n  },\n  'dries-2019': {\n    name: 'Dries',\n    version: '1.0.0',\n    description: driesDescription,\n    public: true,\n    datasets: [\n      {\n        uid: 'dries-2019',\n        name: 'Dries 2019',\n        files: driesBase.layers.map(file => ({\n          type: file.type.toLowerCase(),\n          fileType: file.fileType,\n          url: file.url,\n        })),\n      },\n    ],\n    initStrategy: 'auto',\n    coordinationSpace: {\n      embeddingType: {\n        TSNE: 't-SNE',\n        UMAP: 'UMAP',\n      },\n      embeddingCellSetPolygonsVisible: {\n        A: false,\n      },\n      embeddingCellSetLabelsVisible: {\n        A: true,\n      },\n      embeddingCellSetLabelSize: {\n        A: 16,\n      },\n      embeddingCellRadius: {\n        A: 1,\n      },\n      embeddingZoom: {\n        TSNE: 3,\n        UMAP: 3,\n      },\n      spatialZoom: {\n        A: -4.4,\n      },\n      spatialTargetX: {\n        A: 3800,\n      },\n      spatialTargetY: {\n        A: -900,\n      },\n    },\n    layout: [\n      { component: 'description',\n        x: 9, y: 0, w: 3, h: 2 },\n      { component: 'status',\n        x: 9, y: 2, w: 3, h: 2 },\n      { component: 'cellSets',\n        x: 9, y: 4, w: 3, h: 4 },\n      { component: 'cellSetSizes',\n        x: 5, y: 4, w: 4, h: 4 },\n      { component: 'scatterplot',\n        coordinationScopes: {\n          embeddingType: 'TSNE',\n          embeddingZoom: 'TSNE',\n          embeddingCellSetLabelsVisible: 'A',\n          embeddingCellSetLabelSize: 'A',\n          embeddingCellSetPolygonsVisible: 'A',\n          embeddingCellRadius: 'A',\n        },\n        x: 0, y: 2, w: 5, h: 4 },\n      { component: 'spatial',\n        props: {\n          cellRadius: 50,\n        },\n        coordinationScopes: {\n          spatialZoom: 'A',\n          spatialTargetX: 'A',\n          spatialTargetY: 'A',\n        },\n        x: 5, y: 0, w: 4, h: 4 },\n      { component: 'scatterplot',\n        coordinationScopes: {\n          embeddingType: 'UMAP',\n          embeddingZoom: 'UMAP',\n          embeddingCellSetLabelsVisible: 'A',\n          embeddingCellSetLabelSize: 'A',\n          embeddingCellSetPolygonsVisible: 'A',\n          embeddingCellRadius: 'A',\n        },\n        x: 0, y: 0, w: 5, h: 4 },\n    ],\n  },\n  'wang-2019': {\n    name: 'Wang',\n    version: '1.0.0',\n    description: wangDescription,\n    public: true,\n    datasets: [\n      {\n        uid: 'wang-2019',\n        name: 'Wang 2019',\n        files: wangBase.layers.map(file => ({\n          type: file.type.toLowerCase(),\n          fileType: file.fileType,\n          url: file.url,\n        })),\n      },\n    ],\n    initStrategy: 'auto',\n    coordinationSpace: {\n      spatialZoom: {\n        A: -1,\n      },\n      spatialLayers: {\n        A: [\n          {\n            type: 'molecules', radius: 2, opacity: 1, visible: true,\n          },\n          {\n            type: 'cells', opacity: 1, radius: 50, visible: true, stroked: false,\n          },\n        ],\n      },\n    },\n    layout: [\n      { component: 'spatial',\n        coordinationScopes: {\n          spatialZoom: 'A',\n          spatialLayers: 'A',\n        },\n        props: {},\n        x: 0, y: 0, w: 10, h: 2 },\n      { component: 'genes',\n        x: 10, y: 0, w: 2, h: 4 },\n      { component: 'expressionHistogram',\n        x: 0, y: 2, w: 10, h: 2 },\n    ],\n  },\n\n  vanderbilt: {\n    ...vanderbiltBase,\n    version: '0.1.0',\n    name: 'Spraggins',\n    public: true,\n    staticLayout: [\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [20000, 20000, 0],\n          },\n        },\n        x: 0, y: 0, w: 9, h: 2 },\n      { component: 'layerController',\n        x: 9, y: 0, w: 3, h: 2 },\n    ],\n  },\n  'just-higlass': {\n    public: false,\n    initStrategy: 'auto',\n    version: '1.0.0',\n    datasets: [\n      {\n        uid: 'higlass-dataset',\n        name: 'HiGlass Dataset',\n        files: [],\n      },\n    ],\n    name: 'HiGlass demo',\n    coordinationSpace: {\n      genomicZoomX: {\n        A: 0,\n      },\n      genomicZoomY: {\n        A: 0,\n      },\n      genomicTargetX: {\n        A: 1549999999.5,\n      },\n      genomicTargetY: {\n        A: 1549999999.5,\n      },\n    },\n    layout: [\n      {\n        component: 'higlass',\n        coordinationScopes: {\n          genomicZoomX: 'A',\n          genomicZoomY: 'A',\n          genomicTargetX: 'A',\n          genomicTargetY: 'A',\n        },\n        props: {\n          hgViewConfig: {\n            uid: 'aa',\n            autocompleteSource: '/api/v1/suggest/?d=OHJakQICQD6gTD7skx4EWA&',\n            genomePositionSearchBox: {\n              autocompleteServer: '//higlass.io/api/v1',\n              autocompleteId: 'OHJakQICQD6gTD7skx4EWA',\n              chromInfoServer: '//higlass.io/api/v1',\n              chromInfoId: 'hg19',\n              visible: true,\n            },\n            chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n            tracks: {\n              top: [\n                {\n                  type: 'horizontal-gene-annotations',\n                  height: 60,\n                  tilesetUid: 'OHJakQICQD6gTD7skx4EWA',\n                  server: '//higlass.io/api/v1',\n                  uid: 'OHJakQICQD6gTD7skx4EWA',\n                  options: {\n                    name: 'Gene Annotations (hg19)',\n                    fontSize: 10,\n                    labelPosition: 'hidden',\n                    labelLeftMargin: 0,\n                    labelRightMargin: 0,\n                    labelTopMargin: 0,\n                    labelBottomMargin: 0,\n                    minHeight: 24,\n                    geneAnnotationHeight: 16,\n                    geneLabelPosition: 'outside',\n                    geneStrandSpacing: 4,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                    plusStrandColor: '#fdff54',\n                    minusStrandColor: '#68bf30',\n                    labelColor: 'black',\n                    trackBorderWidth: 0,\n                    trackBorderColor: 'black',\n                  },\n                },\n                {\n                  chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n                  type: 'horizontal-chromosome-labels',\n                  height: 30,\n                  uid: 'X4e_1DKiQHmyghDa6lLMVA',\n                  options: {\n                    color: '#808080',\n                    stroke: 'black',\n                    fontSize: 12,\n                    fontIsLeftAligned: false,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                  },\n                },\n              ],\n              left: [\n                {\n                  type: 'vertical-gene-annotations',\n                  width: 60,\n                  tilesetUid: 'OHJakQICQD6gTD7skx4EWA',\n                  server: '//higlass.io/api/v1',\n                  options: {\n                    labelPosition: 'bottomRight',\n                    name: 'Gene Annotations (hg19)',\n                    fontSize: 10,\n                    labelLeftMargin: 0,\n                    labelRightMargin: 0,\n                    labelTopMargin: 0,\n                    labelBottomMargin: 0,\n                    minWidth: 24,\n                    geneAnnotationHeight: 16,\n                    geneLabelPosition: 'outside',\n                    geneStrandSpacing: 4,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                    plusStrandColor: '#fdff54',\n                    minusStrandColor: '#68bf30',\n                    labelColor: 'black',\n                    trackBorderWidth: 0,\n                    trackBorderColor: 'black',\n                  },\n                  uid: 'dqBTMH78Rn6DeSyDBoAEXw',\n                },\n                {\n                  chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n                  type: 'vertical-chromosome-labels',\n                  width: 30,\n                  uid: 'RHdQK4IRQ7yJeDmKWb7Pcg',\n                  options: {\n                    color: '#777777',\n                    stroke: 'black',\n                    fontSize: 12,\n                    fontIsLeftAligned: false,\n                    minWidth: 35,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                  },\n                },\n              ],\n              center: [\n                {\n                  uid: 'c1',\n                  type: 'combined',\n                  height: 600,\n                  contents: [\n                    {\n                      server: '//higlass.io/api/v1',\n                      tilesetUid: 'CQMd6V_cRw6iCI_-Unl3PQ',\n                      type: 'heatmap',\n                      options: {\n                        maxZoom: null,\n                        labelPosition: 'bottomRight',\n                        name: 'Rao et al. (2014) GM12878 MboI (allreps) 1kb',\n                        backgroundColor: 'black',\n                        labelLeftMargin: 0,\n                        labelRightMargin: 0,\n                        labelTopMargin: 0,\n                        labelBottomMargin: 0,\n                        labelShowResolution: true,\n                        labelShowAssembly: true,\n                        labelColor: '#ffffff',\n                        labelTextOpacity: 0.5,\n                        labelBackgroundColor: 'black',\n                        labelBackgroundOpacity: 0.01,\n                        colorRange: [\n                          '#000000',\n                          '#222e54',\n                          '#448db2',\n                          '#68bf30',\n                          '#fdff54',\n                          '#FFFFFF',\n                        ],\n                        colorbarBackgroundColor: 'black',\n                        colorbarBackgroundOpacity: 0.01,\n                        colorbarPosition: 'topRight',\n                        trackBorderWidth: 0,\n                        trackBorderColor: 'black',\n                        heatmapValueScaling: 'log',\n                        showMousePosition: true,\n                        mousePositionColor: '#ff00ff',\n                        showTooltip: false,\n                        extent: 'full',\n                        zeroValueColor: null,\n                        scaleStartPercent: '0.00000',\n                        scaleEndPercent: '1.00000',\n                      },\n                      height: 500,\n                      uid: 'GjuZed1ySGW1IzZZqFB9BA',\n                      transforms: [\n                        {\n                          name: 'ICE',\n                          value: 'weight',\n                        },\n                      ],\n                    },\n                  ],\n                  options: {},\n                },\n              ],\n              right: [],\n              bottom: [],\n              whole: [],\n              gallery: [],\n            },\n            layout: {\n              w: 12,\n              h: 12,\n              x: 0,\n              y: 0,\n              moved: false,\n              static: false,\n            },\n          },\n        },\n        x: 0, y: 0, w: 8, h: 2,\n      },\n      {\n        component: 'higlass',\n        coordinationScopes: {\n          genomicZoomX: 'A',\n          genomicZoomY: 'A',\n          genomicTargetX: 'A',\n          genomicTargetY: 'A',\n        },\n        props: {\n          hgViewConfig: {\n            uid: 'aa',\n            autocompleteSource: '/api/v1/suggest/?d=OHJakQICQD6gTD7skx4EWA&',\n            genomePositionSearchBox: {\n              autocompleteServer: '//higlass.io/api/v1',\n              autocompleteId: 'OHJakQICQD6gTD7skx4EWA',\n              chromInfoServer: '//higlass.io/api/v1',\n              chromInfoId: 'hg19',\n              visible: true,\n            },\n            chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n            tracks: {\n              top: [\n                {\n                  type: 'horizontal-gene-annotations',\n                  height: 60,\n                  tilesetUid: 'OHJakQICQD6gTD7skx4EWA',\n                  server: '//higlass.io/api/v1',\n                  uid: 'OHJakQICQD6gTD7skx4EWA',\n                  options: {\n                    name: 'Gene Annotations (hg19)',\n                    fontSize: 10,\n                    labelPosition: 'hidden',\n                    labelLeftMargin: 0,\n                    labelRightMargin: 0,\n                    labelTopMargin: 0,\n                    labelBottomMargin: 0,\n                    minHeight: 24,\n                    geneAnnotationHeight: 16,\n                    geneLabelPosition: 'outside',\n                    geneStrandSpacing: 4,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                    plusStrandColor: '#fdff54',\n                    minusStrandColor: '#68bf30',\n                    labelColor: 'black',\n                    trackBorderWidth: 0,\n                    trackBorderColor: 'black',\n                  },\n                },\n                {\n                  chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n                  type: 'horizontal-chromosome-labels',\n                  height: 30,\n                  uid: 'X4e_1DKiQHmyghDa6lLMVA',\n                  options: {\n                    color: '#808080',\n                    stroke: 'black',\n                    fontSize: 12,\n                    fontIsLeftAligned: false,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                  },\n                },\n              ],\n              left: [\n                {\n                  type: 'vertical-gene-annotations',\n                  width: 60,\n                  tilesetUid: 'OHJakQICQD6gTD7skx4EWA',\n                  server: '//higlass.io/api/v1',\n                  options: {\n                    labelPosition: 'bottomRight',\n                    name: 'Gene Annotations (hg19)',\n                    fontSize: 10,\n                    labelLeftMargin: 0,\n                    labelRightMargin: 0,\n                    labelTopMargin: 0,\n                    labelBottomMargin: 0,\n                    minWidth: 24,\n                    geneAnnotationHeight: 16,\n                    geneLabelPosition: 'outside',\n                    geneStrandSpacing: 4,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                    plusStrandColor: '#fdff54',\n                    minusStrandColor: '#68bf30',\n                    labelColor: 'black',\n                    trackBorderWidth: 0,\n                    trackBorderColor: 'black',\n                  },\n                  uid: 'dqBTMH78Rn6DeSyDBoAEXw',\n                },\n                {\n                  chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n                  type: 'vertical-chromosome-labels',\n                  width: 30,\n                  uid: 'RHdQK4IRQ7yJeDmKWb7Pcg',\n                  options: {\n                    color: '#777777',\n                    stroke: 'black',\n                    fontSize: 12,\n                    fontIsLeftAligned: false,\n                    minWidth: 35,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                  },\n                },\n              ],\n              center: [\n                {\n                  uid: 'c1',\n                  type: 'combined',\n                  height: 600,\n                  contents: [\n                    {\n                      server: '//higlass.io/api/v1',\n                      tilesetUid: 'CQMd6V_cRw6iCI_-Unl3PQ',\n                      type: 'heatmap',\n                      options: {\n                        maxZoom: null,\n                        labelPosition: 'bottomRight',\n                        name: 'Rao et al. (2014) GM12878 MboI (allreps) 1kb',\n                        backgroundColor: 'black',\n                        labelLeftMargin: 0,\n                        labelRightMargin: 0,\n                        labelTopMargin: 0,\n                        labelBottomMargin: 0,\n                        labelShowResolution: true,\n                        labelShowAssembly: true,\n                        labelColor: '#ffffff',\n                        labelTextOpacity: 0.5,\n                        labelBackgroundColor: 'black',\n                        labelBackgroundOpacity: 0.01,\n                        colorRange: [\n                          '#000000',\n                          '#222e54',\n                          '#448db2',\n                          '#68bf30',\n                          '#fdff54',\n                          '#FFFFFF',\n                        ],\n                        colorbarBackgroundColor: 'black',\n                        colorbarBackgroundOpacity: 0.01,\n                        colorbarPosition: 'topRight',\n                        trackBorderWidth: 0,\n                        trackBorderColor: 'black',\n                        heatmapValueScaling: 'log',\n                        showMousePosition: true,\n                        mousePositionColor: '#ff00ff',\n                        showTooltip: false,\n                        extent: 'full',\n                        zeroValueColor: null,\n                        scaleStartPercent: '0.00000',\n                        scaleEndPercent: '1.00000',\n                      },\n                      height: 500,\n                      uid: 'GjuZed1ySGW1IzZZqFB9BA',\n                      transforms: [\n                        {\n                          name: 'ICE',\n                          value: 'weight',\n                        },\n                      ],\n                    },\n                  ],\n                  options: {},\n                },\n              ],\n              right: [],\n              bottom: [],\n              whole: [],\n              gallery: [],\n            },\n            layout: {\n              w: 12,\n              h: 12,\n              x: 0,\n              y: 0,\n              moved: false,\n              static: false,\n            },\n          },\n        },\n        x: 8, y: 0, w: 4, h: 2,\n      },\n    ],\n  },\n  'sc-atac-seq-10x-genomics-pbmc': {\n    version: '1.0.0',\n    name: 'HiGlass serverless demo with 10x Genomics scATAC-seq 5k PBMC dataset',\n    datasets: [\n      {\n        uid: '10x-genomics-pbmc',\n        name: '10x Genomics PBMC',\n        files: [\n          {\n            type: 'genomic-profiles',\n            fileType: 'genomic-profiles.zarr',\n            url: 'http://higlass-serverless.s3.amazonaws.com/multivec/pbmc_10x_peaks_by_cluster.zarr',\n          },\n        ],\n      },\n    ],\n    layout: [\n      { component: 'genomicProfiles',\n        props: {\n          profileTrackUidKey: 'file',\n        },\n        x: 0, y: 0, w: 8, h: 2,\n      },\n      { component: 'description',\n        props: {\n          description: '10x Genomics scATAC-seq of 5k PBMCs. Note: the Zarr HiGlass Plugin Datafetcher is not yet optimized. Please be patient while the HiGlass tracks load.',\n        },\n        x: 8, y: 0, w: 4, h: 2 },\n    ],\n    initStrategy: 'auto',\n  },\n  'portal-ui-featured': {\n    coordinationSpace: {\n      dataset: {\n        A: 'A',\n      },\n      spatialZoom: {\n        A: 0.6219962674826599,\n      },\n      spatialRotation: {\n        A: 0,\n      },\n      spatialTargetX: {\n        A: 550.9755273834661,\n      },\n      spatialTargetY: {\n        A: 418.2987491735642,\n      },\n      spatialTargetZ: {\n        A: 6.252776074688882e-13,\n      },\n      heatmapZoomX: {\n        A: 0,\n      },\n      heatmapZoomY: {\n        A: 0,\n      },\n      heatmapTargetX: {\n        A: 0,\n      },\n      heatmapTargetY: {\n        A: 0,\n      },\n      cellFilter: {\n        A: null,\n      },\n      cellHighlight: {\n        A: '761',\n      },\n      cellSetSelection: {\n        A: [\n          [\n            'K-Means [Mean] Expression',\n            'Cluster 1',\n          ],\n          [\n            'K-Means [Mean] Expression',\n            'Cluster 2',\n          ],\n          [\n            'K-Means [Mean] Expression',\n            'Cluster 3',\n          ],\n          [\n            'K-Means [Mean] Expression',\n            'Cluster 4',\n          ],\n          [\n            'K-Means [Mean] Expression',\n            'Cluster 5',\n          ],\n          [\n            'K-Means [Mean] Expression',\n            'Cluster 6',\n          ],\n        ],\n      },\n      cellSetHighlight: {\n        A: null,\n      },\n      cellSetColor: {\n        A: [\n          {\n            path: [\n              'K-Means [Mean] Expression',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean] Expression',\n              'Cluster 1',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean] Expression',\n              'Cluster 2',\n            ],\n            color: [\n              136,\n              204,\n              238,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean] Expression',\n              'Cluster 3',\n            ],\n            color: [\n              68,\n              170,\n              153,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean] Expression',\n              'Cluster 4',\n            ],\n            color: [\n              17,\n              119,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean] Expression',\n              'Cluster 5',\n            ],\n            color: [\n              153,\n              153,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean] Expression',\n              'Cluster 6',\n            ],\n            color: [\n              221,\n              204,\n              119,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Covariance] Expression',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Covariance] Expression',\n              'Cluster 1',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Covariance] Expression',\n              'Cluster 2',\n            ],\n            color: [\n              136,\n              204,\n              238,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Covariance] Expression',\n              'Cluster 3',\n            ],\n            color: [\n              68,\n              170,\n              153,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Covariance] Expression',\n              'Cluster 4',\n            ],\n            color: [\n              17,\n              119,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Covariance] Expression',\n              'Cluster 5',\n            ],\n            color: [\n              153,\n              153,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Covariance] Expression',\n              'Cluster 6',\n            ],\n            color: [\n              221,\n              204,\n              119,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Total] Expression',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Total] Expression',\n              'Cluster 1',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Total] Expression',\n              'Cluster 2',\n            ],\n            color: [\n              136,\n              204,\n              238,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Total] Expression',\n              'Cluster 3',\n            ],\n            color: [\n              68,\n              170,\n              153,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Total] Expression',\n              'Cluster 4',\n            ],\n            color: [\n              17,\n              119,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Total] Expression',\n              'Cluster 5',\n            ],\n            color: [\n              153,\n              153,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Total] Expression',\n              'Cluster 6',\n            ],\n            color: [\n              221,\n              204,\n              119,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean-All-SubRegions] Expression',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean-All-SubRegions] Expression',\n              'Cluster 1',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean-All-SubRegions] Expression',\n              'Cluster 2',\n            ],\n            color: [\n              136,\n              204,\n              238,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean-All-SubRegions] Expression',\n              'Cluster 3',\n            ],\n            color: [\n              68,\n              170,\n              153,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean-All-SubRegions] Expression',\n              'Cluster 4',\n            ],\n            color: [\n              17,\n              119,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean-All-SubRegions] Expression',\n              'Cluster 5',\n            ],\n            color: [\n              153,\n              153,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean-All-SubRegions] Expression',\n              'Cluster 6',\n            ],\n            color: [\n              221,\n              204,\n              119,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Shape-Vectors]',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Shape-Vectors]',\n              'Cluster 1',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Shape-Vectors]',\n              'Cluster 2',\n            ],\n            color: [\n              136,\n              204,\n              238,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Shape-Vectors]',\n              'Cluster 3',\n            ],\n            color: [\n              68,\n              170,\n              153,\n              255,\n            ],\n          },\n        ],\n      },\n      geneFilter: {\n        A: null,\n      },\n      geneHighlight: {\n        A: null,\n      },\n      geneSelection: {\n        A: null,\n      },\n      geneExpressionColormap: {\n        A: 'plasma',\n      },\n      geneExpressionColormapRange: {\n        A: [\n          0.065,\n          0.435,\n        ],\n      },\n      cellColorEncoding: {\n        A: 'cellSetSelection',\n      },\n      spatialRasterLayers: {\n        A: [\n          {\n            type: 't',\n            index: 0,\n            colormap: null,\n            opacity: 1,\n            domainType: 'Min/Max',\n            transparentColor: null,\n            channels: [\n              {\n                selection: {\n                  z: 5,\n                  t: 0,\n                  c: 10,\n                },\n                color: [\n                  0,\n                  0,\n                  255,\n                ],\n                visible: true,\n                slider: [\n                  1,\n                  14906,\n                ],\n              },\n              {\n                selection: {\n                  z: 5,\n                  t: 0,\n                  c: 15,\n                },\n                color: [\n                  0,\n                  255,\n                  0,\n                ],\n                visible: true,\n                slider: [\n                  2313,\n                  31611,\n                ],\n              },\n              {\n                selection: {\n                  z: 5,\n                  t: 0,\n                  c: 45,\n                },\n                color: [\n                  255,\n                  0,\n                  255,\n                ],\n                visible: true,\n                slider: [\n                  2570,\n                  21074,\n                ],\n              },\n              {\n                selection: {\n                  z: 5,\n                  t: 0,\n                  c: 20,\n                },\n                color: [\n                  255,\n                  255,\n                  0,\n                ],\n                visible: true,\n                slider: [\n                  2827,\n                  11565,\n                ],\n              },\n              {\n                selection: {\n                  z: 5,\n                  t: 0,\n                  c: 31,\n                },\n                slider: [\n                  5658,\n                  17479,\n                ],\n                visible: true,\n                color: [\n                  255,\n                  128,\n                  0,\n                ],\n              },\n              {\n                selection: {\n                  z: 5,\n                  t: 0,\n                  c: 39,\n                },\n                slider: [\n                  1767,\n                  11735,\n                ],\n                visible: true,\n                color: [\n                  255,\n                  255,\n                  255,\n                ],\n              },\n            ],\n          },\n        ],\n      },\n      spatialCellsLayer: {\n        A: {\n          opacity: 0,\n          radius: 50,\n          visible: true,\n          stroked: true,\n        },\n      },\n      spatialMoleculesLayer: {\n        A: null,\n      },\n      spatialNeighborhoodsLayer: {\n        A: null,\n      },\n      additionalCellSets: {\n        A: null,\n      },\n      moleculeHighlight: {\n        A: null,\n      },\n    },\n    datasets: [\n      {\n        files: [\n          {\n            fileType: 'cells.json',\n            type: 'cells',\n            url: 'https://assets.hubmapconsortium.org/ca3016d836d8ee50bef1b93f339c9679/output_json/R002_X002_Y007.cells.json?token=',\n          },\n          {\n            fileType: 'cell-sets.json',\n            type: 'cell-sets',\n            url: 'https://assets.hubmapconsortium.org/ca3016d836d8ee50bef1b93f339c9679/output_json/R002_X002_Y007.cell-sets.json?token=',\n          },\n          {\n            fileType: 'clusters.json',\n            type: 'expression-matrix',\n            url: 'https://assets.hubmapconsortium.org/ca3016d836d8ee50bef1b93f339c9679/output_json/R002_X002_Y007.clusters.json?token=',\n          },\n          {\n            fileType: 'raster.json',\n            options: {\n              images: [\n                {\n                  metadata: {\n                    omeTiffOffsetsUrl: 'https://assets.hubmapconsortium.org/ca3016d836d8ee50bef1b93f339c9679/output_offsets/R002_X002_Y007.offsets.json?token=',\n                  },\n                  name: 'R002_X002_Y007',\n                  type: 'ome-tiff',\n                  url: 'https://assets.hubmapconsortium.org/ca3016d836d8ee50bef1b93f339c9679/output/extract/expressions/ome-tiff/R002_X002_Y007.ome.tiff?token=',\n                },\n              ],\n              schemaVersion: '0.0.2',\n            },\n            type: 'raster',\n          },\n        ],\n        name: 'SPRM',\n        uid: 'A',\n      },\n    ],\n    description: '',\n    initStrategy: 'auto',\n    layout: [\n      {\n        component: 'spatial',\n        coordinationScopes: {\n          dataset: 'A',\n          spatialZoom: 'A',\n          spatialRotation: 'A',\n          spatialTargetX: 'A',\n          spatialTargetY: 'A',\n          spatialTargetZ: 'A',\n          cellFilter: 'A',\n          cellHighlight: 'A',\n          cellSetSelection: 'A',\n          cellSetHighlight: 'A',\n          cellSetColor: 'A',\n          geneHighlight: 'A',\n          geneSelection: 'A',\n          geneExpressionColormap: 'A',\n          geneExpressionColormapRange: 'A',\n          cellColorEncoding: 'A',\n          spatialRasterLayers: 'A',\n          spatialCellsLayer: 'A',\n          spatialMoleculesLayer: 'A',\n          spatialNeighborhoodsLayer: 'A',\n          additionalCellSets: 'A',\n          moleculeHighlight: 'A',\n        },\n        h: 8,\n        w: 7,\n        x: 3,\n        y: 0,\n      },\n      {\n        component: 'description',\n        coordinationScopes: {\n          dataset: 'A',\n          spatialRasterLayers: 'A',\n        },\n        h: 2,\n        w: 2,\n        x: 10,\n        y: 10,\n      },\n      {\n        component: 'layerController',\n        coordinationScopes: {\n          dataset: 'A',\n          spatialRasterLayers: 'A',\n          spatialCellsLayer: 'A',\n          spatialMoleculesLayer: 'A',\n          spatialNeighborhoodsLayer: 'A',\n        },\n        h: 8,\n        w: 3,\n        x: 0,\n        y: 0,\n      },\n      {\n        component: 'cellSets',\n        coordinationScopes: {\n          dataset: 'A',\n          cellSetSelection: 'A',\n          cellSetHighlight: 'A',\n          cellSetColor: 'A',\n          cellColorEncoding: 'A',\n          additionalCellSets: 'A',\n        },\n        h: 5,\n        w: 2,\n        x: 10,\n        y: 5,\n      },\n      {\n        component: 'genes',\n        coordinationScopes: {\n          dataset: 'A',\n          geneFilter: 'A',\n          geneHighlight: 'A',\n          geneSelection: 'A',\n          cellColorEncoding: 'A',\n        },\n        h: 5,\n        props: {\n          variablesLabelOverride: 'antigen',\n        },\n        w: 2,\n        x: 10,\n        y: 0,\n      },\n      {\n        component: 'heatmap',\n        coordinationScopes: {\n          dataset: 'A',\n          heatmapZoomX: 'A',\n          heatmapZoomY: 'A',\n          heatmapTargetX: 'A',\n          heatmapTargetY: 'A',\n          cellFilter: 'A',\n          cellHighlight: 'A',\n          cellSetSelection: 'A',\n          cellSetHighlight: 'A',\n          cellSetColor: 'A',\n          geneFilter: 'A',\n          geneHighlight: 'A',\n          geneSelection: 'A',\n          geneExpressionColormap: 'A',\n          geneExpressionColormapRange: 'A',\n          cellColorEncoding: 'A',\n          additionalCellSets: 'A',\n        },\n        h: 4,\n        props: {\n          transpose: true,\n          variablesLabelOverride: 'antigen',\n        },\n        w: 10,\n        x: 0,\n        y: 8,\n      },\n    ],\n    name: 'R002_X002_Y007',\n    version: '1.0.1',\n  },\n};\n/* eslint-enable */\n\nexport function listConfigs(showAll) {\n  return Object.entries(configs).filter(\n    entry => showAll || entry[1].public,\n  ).map(\n    ([id, config]) => ({\n      id,\n      name: config.name,\n      description: config.description,\n    }),\n  );\n}\n\nexport function getConfig(id) {\n  return configs[id];\n}\n", "import React from 'react';\n\nimport version from '../version.json';\n\nfunction DatasetList(props) {\n  const { configs, theme } = props;\n  const aClassName = 'list-group-item list-group-item-action flex-column align-items-start bg-secondary';\n  const links = configs.map(\n    ({ id, name, description }) => (\n      <div className={aClassName} key={id}>\n        <a\n          href={`?dataset=${id}&theme=${theme}`}\n          key={id}\n        >\n          <h5>{name}</h5>\n          <p>{description}</p>\n        </a>\n        <a\n          href={`?dataset=${id}&theme=${theme}&small`}\n          style={{ fontSize: '75%' }}\n        >\n          {name} as component\n        </a>\n      </div>\n    ),\n  );\n  return (\n    <div className=\"list-group\">\n      {links}\n    </div>\n  );\n}\n\nfunction Form(props) {\n  const { configs, theme } = props;\n  return (\n    <form method=\"GET\">\n      <h1>Vitessce</h1>\n      <div>Select a dataset:</div>\n      <DatasetList configs={configs} theme={theme} />\n\n      <br />\n      <div>Or specify URL of configuration:</div>\n      <div className=\"input-group mb-3\">\n        <input type=\"text\" name=\"url\" className=\"form-control\" />\n        <input type=\"hidden\" name=\"theme\" value={theme} />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-outline-secondary\" type=\"submit\">Load</button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nfunction Info() {\n  return (\n    <>\n      <p className=\"info-paragraph\">\n        Vitessce is a visual integration tool for exploration of spatial single cell experiments.\n        Its modular design is optimized for scalable, linked visualizations that support the\n        spatial and non-spatial representation of tissue-, cell- and molecule-level data.\n        Vitessce integrates the <a href=\"https://github.com/hms-dbmi/viv\">Viv library</a> to visualize\n        highly multiplexed, high-resolution, high-bit depth image data directly from\n        OME-TIFF files and Bio-Formats-compatible Zarr stores.\n      </p>\n      <h5 className=\"info-section-text\">\n        Contributors\n      </h5>\n      <ul>\n        <li><a href=\"https://github.com/keller-mark\">Mark Keller</a></li>\n        <li><a href=\"https://github.com/mccalluc\">Chuck McCallum</a></li>\n        <li><a href=\"https://github.com/ilan-gold\">Ilan Gold</a></li>\n        <li><a href=\"https://github.com/manzt\">Trevor Manz</a></li>\n        <li><a href=\"https://github.com/thomaslchan\">Tos Chan</a></li>\n        <li><a href=\"https://github.com/jkmarx\">Jennifer Marx</a></li>\n        <li><a href=\"https://github.com/pkharchenko\">Peter Kharchenko</a></li>\n        <li><a href=\"https://github.com/ngehlenborg\">Nils Gehlenborg</a></li>\n      </ul>\n      <h5 className=\"info-section-text\">\n        Source Code\n      </h5>\n      <ul>\n        <li><a href=\"https://github.com/vitessce/vitessce\">GitHub</a></li>\n        <li><a href=\"https://www.npmjs.com/package/vitessce\">NPM</a></li>\n      </ul>\n      <h5 className=\"info-section-text\">\n        Funding\n      </h5>\n      <ul>\n        <li>\n          NIH/OD Human BioMolecular Atlas Program (HuBMAP)\n          (OT2OD026677, PI: Nils Gehlenborg).\n        </li>\n        <li>\n          NIH/NLM Biomedical Informatics and Data Science Research Training Program\n          (T15LM007092, PI: Nils Gehlenborg)\n        </li>\n        <li>Harvard Stem Cell Institute (CF-0014-17-03, PI: Nils Gehlenborg)</li>\n      </ul>\n      <p className=\"info-section-text\">\n        This deployment: branch={version.branch} | hash={version.hash} | date={version.date}\n      </p>\n    </>\n  );\n}\n\nexport default function Welcome(props) {\n  const { configs, theme, showBetaHeader } = props;\n  return (\n    <div className={`vitessce-container vitessce-theme-${theme} welcome-container`}>\n      {showBetaHeader && (\n        <div className=\"welcome-beta-header\">\n          <p>Visit <a href=\"http://beta.vitessce.io\">beta.vitessce.io</a> to view the next version of the Vitessce home page and documentation!</p>\n        </div>\n      )}\n      <div className=\"react-grid-layout container-fluid\" style={{ height: 'max(100vh, 100%)' }}>\n        <div className=\"row\">\n          <div className=\"welcome-col-left\">\n            <div className=\"card card-body bg-primary\">\n              <Form configs={configs} theme={theme} />\n            </div>\n          </div>\n          <div className=\"welcome-col-right\">\n            <div className=\"card card-body bg-primary\">\n              <Info />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import React from 'react';\nimport { PRIMARY_CARD } from '../components/classNames';\n\nexport default function Warning(props) {\n  const {\n    title,\n    preformatted,\n    unformatted,\n    theme,\n  } = props;\n  return (\n    <div className={`vitessce-container vitessce-theme-${theme}`}>\n      <div className=\"warning-layout container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className={PRIMARY_CARD}>\n              <h1>{title}</h1>\n              <pre>{preformatted}</pre>\n              <div>{unformatted}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "/* eslint-disable camelcase */\nimport React, { useEffect, useMemo } from 'react';\nimport {\n  ThemeProvider, StylesProvider,\n  createGenerateClassName,\n} from '@material-ui/core/styles';\nimport isEqual from 'lodash/isEqual';\nimport { muiTheme } from '../components/shared-mui/styles';\nimport {\n  ViewConfigProvider, createViewConfigStore,\n  AuxiliaryProvider, createAuxiliaryStore,\n} from './state/hooks';\n\nimport VitessceGrid from './VitessceGrid';\nimport Warning from './Warning';\nimport CallbackPublisher from './CallbackPublisher';\nimport { getComponent } from './component-registry';\nimport { initialize, upgradeAndValidate } from './view-config-utils';\n\nconst generateClassName = createGenerateClassName({\n  disableGlobal: true,\n});\n\n/**\n * The Vitessce component.\n * @param {object} props\n * @param {object} props.config A Vitessce view config.\n * If the config is valid, the VitessceGrid will be rendered as a child.\n * If the config is invalid, a Warning will be rendered instead.\n * @param {number} props.rowHeight Row height for grid layout. Optional.\n * @param {number} props.height Total height for grid layout. Optional.\n * @param {string} props.theme The theme, used for styling as\n * light or dark. Optional. By default, \"dark\"\n * @param {function} props.onWarn A callback for warning messages. Optional.\n * @param {function} props.onConfigChange A callback for view config\n * updates. Optional.\n * @param {function} props.onLoaderChange A callback for loader\n * updates. Optional.\n * @param {boolean} props.validateOnConfigChange Whether to validate\n * against the view config schema when publishing changes. Use for debugging\n * purposes, as this may have a performance impact. By default, false.\n */\nexport default function Vitessce(props) {\n  const {\n    config,\n    rowHeight,\n    height,\n    theme,\n    onWarn,\n    onConfigChange,\n    onLoaderChange,\n    validateOnConfigChange = false,\n  } = props;\n\n  // Process the view config and memoize the result:\n  // - Validate.\n  // - Upgrade, if legacy schema.\n  // - Validate after upgrade, if legacy schema.\n  // - Initialize (based on initStrategy).\n  const [configOrWarning, success] = useMemo(() => {\n    // If the config value is undefined, show a warning message.\n    if (!config) {\n      return [{\n        title: 'No such dataset',\n        unformatted: 'The dataset configuration could not be found.',\n      }, false];\n    }\n    // If the view config is missing a version, show a warning message.\n    if (!config.version) {\n      return [{\n        title: 'Missing version',\n        unformatted: 'The dataset configuration is missing a version, preventing validation.',\n      }, false];\n    }\n    // Check if this is a \"legacy\" view config.\n    const [upgradedConfig, upgradeSuccess] = upgradeAndValidate(config);\n    if (upgradeSuccess) {\n      // Initialize the view config according to the initStrategy.\n      const initializedConfig = initialize(upgradedConfig);\n      return [initializedConfig, true];\n    }\n    return [upgradedConfig, false];\n  }, [config]);\n\n  // Emit the upgraded/initialized view config\n  // to onConfigChange if necessary.\n  useEffect(() => {\n    if (success && !isEqual(configOrWarning, config) && onConfigChange) {\n      onConfigChange(configOrWarning);\n    }\n  }, [success, config, configOrWarning, onConfigChange]);\n\n  return success ? (\n    <StylesProvider generateClassName={generateClassName}>\n      <ThemeProvider theme={muiTheme[theme]}>\n        <ViewConfigProvider createStore={createViewConfigStore}>\n          <AuxiliaryProvider createStore={createAuxiliaryStore}>\n            <VitessceGrid\n              config={configOrWarning}\n              getComponent={getComponent}\n              rowHeight={rowHeight}\n              height={height}\n              theme={theme}\n            />\n            <CallbackPublisher\n              onWarn={onWarn}\n              onConfigChange={onConfigChange}\n              onLoaderChange={onLoaderChange}\n              validateOnConfigChange={validateOnConfigChange}\n            />\n          </AuxiliaryProvider>\n        </ViewConfigProvider>\n      </ThemeProvider>\n    </StylesProvider>\n  ) : (\n    <Warning\n      theme={theme}\n      {...configOrWarning}\n    />\n  );\n}\n", "import { useEffect } from 'react';\nimport { SCHEMA_HANDLERS, LATEST_VERSION } from './view-config-versions';\nimport { useViewConfigStoreApi, useLoaders, useWarning } from './state/hooks';\n\nfunction validateViewConfig(viewConfig) {\n  // Need the try-catch here since Zustand will actually\n  // just catch and ignore errors in its subscription callbacks.\n  try {\n    const validate = SCHEMA_HANDLERS[LATEST_VERSION][0];\n    const valid = validate(viewConfig);\n    if (!valid) {\n      const failureReason = JSON.stringify(validate.errors, null, 2);\n      throw new Error(`Config validation failed: ${failureReason}`);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n  // Do nothing if successful.\n}\n\n/**\n * This is a dummy component which handles\n * publishing new view configs and loaders to\n * the provided callbacks on changes.\n * @param {object} props\n * @param {function} props.onConfigChange A callback function\n * to execute on each change of the Vitessce view config.\n * @param {function} props.onLoaderChange A callback function\n * to execute on each change of the loaders object.\n * @param {boolean} props.validateOnConfigChange Whether to validate\n * against the view config schema when publishing changes.\n */\nexport default function CallbackPublisher(props) {\n  const {\n    onWarn,\n    onConfigChange,\n    onLoaderChange,\n    validateOnConfigChange,\n  } = props;\n\n  const warning = useWarning();\n  const loaders = useLoaders();\n\n  const viewConfigStoreApi = useViewConfigStoreApi();\n\n  // View config updates are often-occurring, so\n  // we want to use the \"transient update\" approach\n  // to subscribe to view config changes.\n  // Reference: https://github.com/react-spring/zustand#transient-updates-for-often-occuring-state-changes\n  useEffect(() => viewConfigStoreApi.subscribe(\n    // The function to run on each publish.\n    (viewConfig) => {\n      if (validateOnConfigChange && viewConfig) {\n        validateViewConfig(viewConfig);\n      }\n      if (onConfigChange && viewConfig) {\n        onConfigChange(viewConfig);\n      }\n    },\n    // The function to specify which part of the store\n    // we want to subscribe to.\n    state => state.viewConfig,\n  ), [onConfigChange, validateOnConfigChange, viewConfigStoreApi]);\n\n  // Emit updates to the warning message.\n  useEffect(() => {\n    if (onWarn && warning) {\n      onWarn(warning);\n    }\n  }, [warning, onWarn]);\n\n  // Emit updates to the loaders.\n  useEffect(() => {\n    if (onLoaderChange && loaders) {\n      onLoaderChange(loaders);\n    }\n  }, [loaders, onLoaderChange]);\n\n  // Render nothing.\n  return null;\n}\n", "/* eslint-disable camelcase */\nimport Ajv from 'ajv';\nimport configSchema0_1_0 from '../schemas/config-0.1.0.schema.json';\nimport configSchema1_0_0 from '../schemas/config-1.0.0.schema.json';\nimport configSchema1_0_1 from '../schemas/config-1.0.1.schema.json';\nimport configSchema1_0_2 from '../schemas/config-1.0.2.schema.json';\nimport configSchema1_0_3 from '../schemas/config-1.0.3.schema.json';\nimport configSchema1_0_4 from '../schemas/config-1.0.4.schema.json';\nimport configSchema1_0_5 from '../schemas/config-1.0.5.schema.json';\nimport cellSetsSchema from '../schemas/cell-sets.schema.json';\nimport rasterSchema from '../schemas/raster.schema.json';\nimport {\n  upgradeFrom0_1_0,\n  upgradeFrom1_0_0,\n  upgradeFrom1_0_1,\n  upgradeFrom1_0_2,\n  upgradeFrom1_0_3,\n  upgradeFrom1_0_4,\n} from './view-config-upgraders';\n\n/**\n * Mapping from view config versions to view config schemas and upgrade functions.\n * Add a new schema and upgrade function here when bumping the view config version.\n * The latest view config version should always have a null value instead of an upgrade function.\n */\nexport const LATEST_VERSION = '1.0.5';\nexport const SCHEMA_HANDLERS = {\n  '0.1.0': [new Ajv().compile(configSchema0_1_0), upgradeFrom0_1_0],\n  '1.0.0': [new Ajv().addSchema(cellSetsSchema).addSchema(rasterSchema).compile(configSchema1_0_0), upgradeFrom1_0_0],\n  '1.0.1': [new Ajv().addSchema(cellSetsSchema).addSchema(rasterSchema).compile(configSchema1_0_1), upgradeFrom1_0_1],\n  '1.0.2': [new Ajv().addSchema(cellSetsSchema).addSchema(rasterSchema).compile(configSchema1_0_2), upgradeFrom1_0_2],\n  '1.0.3': [new Ajv().addSchema(cellSetsSchema).addSchema(rasterSchema).compile(configSchema1_0_3), upgradeFrom1_0_3],\n  '1.0.4': [new Ajv().addSchema(cellSetsSchema).addSchema(rasterSchema).compile(configSchema1_0_4), upgradeFrom1_0_4],\n  '1.0.5': [new Ajv().addSchema(cellSetsSchema).addSchema(rasterSchema).compile(configSchema1_0_5), null],\n};\n", "/* eslint-disable camelcase */\nimport uuidv4 from 'uuid/v4';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { getNextScope, capitalize } from '../utils';\nimport {\n  COMPONENT_COORDINATION_TYPES,\n} from './state/coordination';\n\n/**\n * A helper function for the `upgrade()` function,\n * which helps convert `props.view` (for scatterplot and spatial),\n * into new coordination scopes, setting their values\n * in the coordination space and returning the new scope mappings.\n * This function does mutate the `coordinationSpace` parameter.\n * @param {string} prefix The coordination type prefix,\n * either 'embedding' or 'spatial'.\n * @param {object} view The view prop object containing\n * the properties `.target` and `.zoom`.\n * @param {object} coordinationSpace The coordination space.\n * @returns {object} The new coordination scope names.\n */\nfunction upgradeReplaceViewProp(prefix, view, coordinationSpace) {\n  const prevZScopes = Object.keys(coordinationSpace[`${prefix}Zoom`]);\n  const prevTXScopes = Object.keys(coordinationSpace[`${prefix}TargetX`]);\n  const prevTYScopes = Object.keys(coordinationSpace[`${prefix}TargetY`]);\n\n  const nextZScope = getNextScope(prevZScopes);\n  const nextTXScope = getNextScope(prevTXScopes);\n  const nextTYScope = getNextScope(prevTYScopes);\n\n  const { zoom, target: [targetX, targetY] } = view;\n  // eslint-disable-next-line no-param-reassign\n  coordinationSpace[`${prefix}Zoom`][nextZScope] = zoom;\n  // eslint-disable-next-line no-param-reassign\n  coordinationSpace[`${prefix}TargetX`][nextTXScope] = targetX;\n  // eslint-disable-next-line no-param-reassign\n  coordinationSpace[`${prefix}TargetY`][nextTYScope] = targetY;\n  return {\n    [`${prefix}Zoom`]: nextZScope,\n    [`${prefix}TargetX`]: nextTXScope,\n    [`${prefix}TargetY`]: nextTYScope,\n  };\n}\n\n/**\n * Convert an older view config to a newer view config.\n * @param {object} config A v0.1.0 \"legacy\" view config.\n * @returns {object} A v1.0.0 \"upgraded\" view config.\n */\nexport function upgradeFrom0_1_0(config, datasetUid = null) {\n  const coordinationSpace = {\n    embeddingType: {},\n    embeddingZoom: {},\n    embeddingTargetX: {},\n    embeddingTargetY: {},\n    spatialZoom: {},\n    spatialTargetX: {},\n    spatialTargetY: {},\n  };\n\n  const layout = [];\n  config.staticLayout.forEach((componentDef) => {\n    let newComponentDef = {\n      ...componentDef,\n      coordinationScopes: {},\n    };\n    if (componentDef.component === 'scatterplot') {\n      // Need to set up the coordinationSpace\n      // with embeddingType to replace scatterplot\n      // component prop \"mapping\".\n      if (componentDef.props.mapping) {\n        coordinationSpace.embeddingType[componentDef.props.mapping] = componentDef.props.mapping;\n        newComponentDef = {\n          ...newComponentDef,\n          coordinationScopes: {\n            ...newComponentDef.coordinationScopes,\n            embeddingType: componentDef.props.mapping,\n          },\n        };\n      }\n      // Need to set up the coordinationSpace\n      // with embeddingZoom / embeddingTargetX/Y to replace scatterplot\n      // component prop \"view\" ({ zoom, target }).\n      if (componentDef.props.view) {\n        // Note that the below function does mutate the coordinationSpace param.\n        const newScopeValues = upgradeReplaceViewProp(\n          'embedding', componentDef.props.view, coordinationSpace,\n        );\n        newComponentDef = {\n          ...newComponentDef,\n          coordinationScopes: {\n            ...newComponentDef.coordinationScopes,\n            ...newScopeValues,\n          },\n        };\n      }\n    }\n    if (componentDef.component === 'spatial') {\n      // Need to set up the coordinationSpace\n      // with spatialZoom / spatialTargetX/Y to replace spatial\n      // component prop \"view\" ({ zoom, target }).\n      if (componentDef?.props?.view) {\n        // Note that the below function does mutate the coordinationSpace param.\n        const newScopeValues = upgradeReplaceViewProp(\n          'spatial', componentDef.props.view, coordinationSpace,\n        );\n        newComponentDef = {\n          ...newComponentDef,\n          coordinationScopes: {\n            ...newComponentDef.coordinationScopes,\n            ...newScopeValues,\n          },\n        };\n      }\n    }\n    layout.push(newComponentDef);\n  });\n\n  // Use a random dataset ID when initializing automatically,\n  // so that it changes with each new v0.1.0 view config.\n  // However, check if the `datasetUid` parameter was passed,\n  // which allows for unit testing.\n  const newDatasetUid = datasetUid || uuidv4();\n\n  return {\n    version: '1.0.1',\n    name: config.name,\n    description: config.description,\n    public: config.public,\n    datasets: [\n      {\n        uid: newDatasetUid,\n        name: newDatasetUid,\n        files: config.layers.map(layer => ({\n          type: layer.type.toLowerCase(),\n          fileType: layer.fileType,\n          url: layer.url,\n        })),\n      },\n    ],\n    initStrategy: 'auto',\n    coordinationSpace,\n    layout,\n  };\n}\n\nexport function upgradeFrom1_0_0(config) {\n  const coordinationSpace = { ...config.coordinationSpace };\n\n  function replaceLayerType(layerType) {\n    // Layer type could be one of a few things, bitmask or raster at the moment.\n    const isRaster = layerType === 'raster';\n    coordinationSpace[`spatial${capitalize(layerType)}Layer${isRaster ? 's' : ''}`] = {};\n    Object.entries(coordinationSpace.spatialLayers).forEach(([scope, layers]) => {\n      if (Array.isArray(layers) && layers.find(layer => layer.type === layerType)) {\n        const typedLayers = layers\n          .filter(layer => layer.type === layerType)\n          .map((layer) => {\n            const newLayer = { ...layer };\n            delete newLayer.type;\n            return newLayer;\n          });\n        coordinationSpace[`spatial${capitalize(layerType)}Layer${isRaster ? 's' : ''}`][scope] = isRaster ? typedLayers : typedLayers[0];\n      } else {\n        coordinationSpace[`spatial${capitalize(layerType)}Layer${isRaster ? 's' : ''}`][scope] = null;\n      }\n    });\n  }\n\n  if (coordinationSpace.spatialLayers) {\n    replaceLayerType('raster');\n    replaceLayerType('cells');\n    replaceLayerType('molecules');\n    replaceLayerType('neighborhoods');\n    delete coordinationSpace.spatialLayers;\n  }\n\n  const layout = config.layout.map((component) => {\n    const newComponent = { ...component };\n\n    function replaceCoordinationScope(layerType) {\n      const isRaster = layerType === 'raster';\n      if (COMPONENT_COORDINATION_TYPES[newComponent.component].includes(`spatial${capitalize(layerType)}Layer${isRaster ? 's' : ''}`)) {\n        newComponent.coordinationScopes[`spatial${capitalize(layerType)}Layer${isRaster ? 's' : ''}`] = newComponent.coordinationScopes.spatialLayers;\n      }\n    }\n\n    if (newComponent.coordinationScopes && newComponent.coordinationScopes.spatialLayers) {\n      replaceCoordinationScope('raster');\n      replaceCoordinationScope('cells');\n      replaceCoordinationScope('molecules');\n      replaceCoordinationScope('neighborhoods');\n      delete newComponent.coordinationScopes.spatialLayers;\n    }\n    return newComponent;\n  });\n\n  return {\n    ...config,\n    coordinationSpace,\n    layout,\n    version: '1.0.1',\n  };\n}\n\n\nexport function upgradeFrom1_0_1(config) {\n  // Need to add the globalDisable3d prop to any layer controller views,\n  // to match the previous lack of 3D auto-detection behavior.\n\n  const layout = config.layout.map((component) => {\n    const newComponent = { ...component };\n    if (newComponent.component === 'layerController') {\n      newComponent.props = {\n        ...newComponent.props,\n        globalDisable3d: true,\n      };\n    }\n    return newComponent;\n  });\n\n  // Enforce bitmask or raster as spatial raster layer type, defaulting\n  // to raster layer if it is not one of bitmask or raster from the old config.\n\n  const newConfig = cloneDeep(config);\n  Object.keys((newConfig?.coordinationSpace?.spatialRasterLayers || {})).forEach((key) => {\n    if (newConfig.coordinationSpace.spatialRasterLayers[key]) {\n      newConfig.coordinationSpace.spatialRasterLayers[key].forEach((layer, index) => {\n        newConfig.coordinationSpace.spatialRasterLayers[key][index].type = ['bitmask', 'raster'].includes(layer.type) ? layer.type : 'raster';\n      });\n    }\n  });\n\n  return {\n    ...newConfig,\n    layout,\n    version: '1.0.2',\n  };\n}\n\nexport function upgradeFrom1_0_2(config) {\n  // Need to add the globalDisable3d prop to any layer controller views,\n  // to match the previous lack of 3D auto-detection behavior.\n\n  const layout = config.layout.map((component) => {\n    const newComponent = { ...component };\n    if (newComponent.component === 'layerController') {\n      newComponent.props = {\n        ...newComponent.props,\n        disableChannelsIfRgbDetected: true,\n      };\n    }\n    return newComponent;\n  });\n\n  // Enforce bitmask or raster as spatial raster layer type, defaulting\n  // to raster layer if it is not one of bitmask or raster from the old config.\n\n  const newConfig = cloneDeep(config);\n\n  return {\n    ...newConfig,\n    layout,\n    version: '1.0.3',\n  };\n}\n\nexport function upgradeFrom1_0_3(config) {\n  const newConfig = cloneDeep(config);\n\n  return {\n    ...newConfig,\n    version: '1.0.4',\n  };\n}\n\n// Added in version 1.0.5:\n// - Support for an array of strings in the setName property within options array items\n//   for the anndata-cell-sets.zarr file type.\nexport function upgradeFrom1_0_4(config) {\n  const newConfig = cloneDeep(config);\n\n  return {\n    ...newConfig,\n    version: '1.0.5',\n  };\n}\n", "import React, { useEffect, useMemo } from 'react';\nimport { useReady } from '../hooks';\nimport { useDescription, useRasterData } from '../data-hooks';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport TitleInfo from '../TitleInfo';\nimport Description from './Description';\n\nconst DESCRIPTION_DATA_TYPES = ['raster'];\n\n/**\n * A subscriber component for a text description component.\n * Also renders a table containing image metadata.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n */\nexport default function DescriptionSubscriber(props) {\n  const {\n    coordinationScopes,\n    description: descriptionOverride,\n    removeGridComponent,\n    theme,\n    title = 'Data Set',\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    spatialRasterLayers: rasterLayers,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.description, coordinationScopes);\n\n  const [\n    isReady,\n    setItemIsReady,\n    setItemIsNotReady, // eslint-disable-line no-unused-vars\n    resetReadyItems,\n  ] = useReady(\n    DESCRIPTION_DATA_TYPES,\n  );\n\n  // Reset loader progress when the dataset has changed.\n  useEffect(() => {\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [description] = useDescription(loaders, dataset);\n  const [raster, imageLayerLoaders, imageLayerMeta] = useRasterData(\n    loaders, dataset, setItemIsReady, () => {}, false,\n  );\n\n  const metadata = useMemo(() => {\n    const result = new Map();\n    if (rasterLayers && rasterLayers.length > 0 && raster && imageLayerMeta && imageLayerLoaders) {\n      rasterLayers.forEach((layer) => {\n        if (imageLayerMeta[layer.index]) {\n          // Want to ensure that layer index is a string.\n          const { format } = imageLayerLoaders[layer.index].metadata;\n          result.set(`${layer.index}`, {\n            name: raster.meta[layer.index].name,\n            metadata: format && format(),\n          });\n        }\n      });\n    }\n    return result;\n  }, [raster, rasterLayers, imageLayerMeta, imageLayerLoaders]);\n\n  return (\n    <TitleInfo\n      title={title}\n      removeGridComponent={removeGridComponent}\n      isScroll\n      theme={theme}\n      isReady={isReady}\n    >\n      <Description\n        description={descriptionOverride || description}\n        metadata={metadata}\n      />\n    </TitleInfo>\n  );\n}\n", "import React from 'react';\n\nexport default function Description(props) {\n  const { description, metadata } = props;\n\n  return (\n    <div className=\"description\">\n      <p>{description}</p>\n\n      {metadata && Array.from(metadata.entries())\n        .map(([layerIndex, { name: layerName, metadata: metadataRecord }]) => (\n          metadataRecord && Object.entries(metadataRecord).length > 0 ? (\n            <details key={layerIndex}>\n              <summary>{layerName}</summary>\n              <div className=\"metadata-container\">\n                <table>\n                  <tbody>\n                    {Object.entries(metadataRecord)\n                      .map(([key, value]) => (\n                        <tr key={key}>\n                          <th title={key}>{key}</th>\n                          <td title={value}>{value}</td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </table>\n              </div>\n            </details>\n          ) : null))}\n    </div>\n  );\n}\n", "import React from 'react';\nimport { useCoordination, useWarning } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport TitleInfo from '../TitleInfo';\nimport Status from './Status';\n\n/**\n * A subscriber component for the status component,\n * which renders hovered cell/gene/molecule information\n * as well as schema validation and data loading errors.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n */\nexport default function StatusSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'Status',\n  } = props;\n\n  // Get \"props\" from the coordination space.\n  const [{\n    cellHighlight,\n    geneHighlight,\n    moleculeHighlight,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.status, coordinationScopes);\n\n  const warn = useWarning();\n\n  const infos = [\n    ...(cellHighlight\n      ? [`Hovered cell ${cellHighlight}`]\n      : []\n    ),\n    ...(geneHighlight\n      ? [`Hovered gene ${geneHighlight}`]\n      : []\n    ),\n    ...(moleculeHighlight\n      ? [`Hovered gene ${moleculeHighlight}`]\n      : []\n    ),\n  ];\n  const info = infos.join('; ');\n\n  return (\n    <TitleInfo\n      title={title}\n      theme={theme}\n      removeGridComponent={removeGridComponent}\n      isScroll\n      isReady\n    >\n      <Status warn={warn} info={info} />\n    </TitleInfo>\n  );\n}\n", "import React from 'react';\n\nexport default function Status(props) {\n  const warnClass = 'alert alert-warning my-0 details';\n  const { info, warn } = props;\n  const messages = [];\n  if (info) {\n    messages.push(<p className=\"details\" key=\"info\">{info}</p>);\n  }\n  if (warn) {\n    messages.push(<p className={warnClass} key=\"warn\">{warn}</p>);\n  }\n  return (\n    messages\n  );\n}\n", "import React, { useEffect } from 'react';\nimport { pluralize } from '../../utils';\nimport { useReady, useUrls } from '../hooks';\nimport { useExpressionAttrs } from '../data-hooks';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\n\nimport TitleInfo from '../TitleInfo';\nimport Genes from './Genes';\n\nconst GENES_DATA_TYPES = ['expression-matrix'];\n\n/**\n * A subscriber component for a gene listing component.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n * @param {string} props.variablesLabelOverride The singular form\n * of the name of the variable.\n * @param {string} props.variablesPluralLabelOverride The plural\n * form of the name of the variable.\n */\nexport default function GenesSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    variablesLabelOverride: variablesLabel = 'gene',\n    variablesPluralLabelOverride: variablesPluralLabel = `${variablesLabel}s`,\n    theme,\n    title = 'Expression Levels',\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    geneSelection,\n    geneFilter,\n    cellColorEncoding,\n  }, {\n    setGeneSelection,\n    setGeneFilter,\n    setGeneHighlight,\n    setCellColorEncoding,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.genes, coordinationScopes);\n\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [\n    isReady,\n    setItemIsReady,\n    setItemIsNotReady, // eslint-disable-line no-unused-vars\n    resetReadyItems,\n  ] = useReady(\n    GENES_DATA_TYPES,\n  );\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [attrs] = useExpressionAttrs(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n  const geneList = attrs ? attrs.cols : [];\n  const numGenes = geneList.length;\n\n  function setGeneSelectionAndColorEncoding(newSelection) {\n    setGeneSelection(newSelection);\n    setCellColorEncoding('geneSelection');\n  }\n\n  return (\n    <TitleInfo\n      title={title}\n      info={`${numGenes} ${pluralize(variablesLabel, variablesPluralLabel, numGenes)}`}\n      theme={theme}\n      // Virtual scroll is used but this allows for the same styling as a scroll component\n      // even though this no longer uses the TitleInfo component's\n      // scroll css (SelectableTable is virtual scroll).\n      isScroll\n      removeGridComponent={removeGridComponent}\n      isReady={isReady}\n      urls={urls}\n    >\n      <Genes\n        hasColorEncoding={cellColorEncoding === 'geneSelection'}\n        geneList={geneList}\n        geneSelection={geneSelection}\n        geneFilter={geneFilter}\n        setGeneSelection={setGeneSelectionAndColorEncoding}\n        setGeneFilter={setGeneFilter}\n        setGeneHighlight={setGeneHighlight}\n      />\n    </TitleInfo>\n  );\n}\n", "import React, { useEffect, useState } from 'react';\nimport { SelectableTable } from '../selectable-table/index';\n\nexport default function Genes(props) {\n  const {\n    hasColorEncoding,\n    geneList = [],\n    geneSelection = [],\n    geneFilter = null,\n    setGeneSelection,\n  } = props;\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState(geneList);\n\n  useEffect(() => {\n    const results = geneList\n      .filter(gene => gene.toLowerCase().includes(searchTerm.toLowerCase()));\n    setSearchResults(results);\n  }, [searchTerm, geneList]);\n\n  function onChange(selection) {\n    if (setGeneSelection && selection && selection.name) {\n      setGeneSelection([selection.name]);\n    }\n  }\n\n  const data = searchResults\n    .filter(gene => (geneFilter ? geneFilter.includes(gene) : true))\n    .sort((a, b) => a.localeCompare(b))\n    .map(\n      gene => ({ name: gene, value: (geneSelection ? geneSelection.includes(gene) : false) }),\n    );\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <>\n      <input\n        className=\"search-bar\"\n        type=\"text\"\n        placeholder=\"Search\"\n        value={searchTerm}\n        onChange={handleChange}\n      />\n      <SelectableTable\n        columns={['name']}\n        data={data}\n        hasColorEncoding={hasColorEncoding}\n        idKey=\"name\"\n        valueKey=\"value\"\n        onChange={onChange}\n        allowUncheck={false}\n        showTableHead={false}\n      />\n    </>\n  );\n}\n", "/* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { Table, AutoSizer } from 'react-virtualized';\nimport uuidv4 from 'uuid/v4';\nimport union from 'lodash/union';\nimport difference from 'lodash/difference';\nimport isEqual from 'lodash/isEqual';\n\n/**\n * A table with \"selectable\" rows.\n * @prop {string[]} columns An array of column names, corresponding to data object properties.\n * @prop {object[]} data An array of data objects used to populate table rows.\n * @prop {function} onChange Callback function,\n * passed a selection object when `allowMultiple` is false (and `null` if `allowUncheck` is true),\n * or passed an array of selection objects when `allowMultiple` is true.\n * @prop {string} idKey The key for a unique identifier property of `data` objects.\n * @prop {string} valueKey If initially-selected rows are required,\n * this key specifies a boolean property of the `data` objects\n * indicating those rows that should be initially selected.\n * @prop {boolean} allowMultiple Whether to allow multiple rows to be selected. By default, false.\n * @prop {boolean} allowUncheck Whether to allow selected rows to be un-checked. By default, false.\n * @prop {boolean} showTableHead Whether to show the table header element. By default, true.\n * @prop {boolean} showTableInputs Whether to show the table input elements for each row.\n * By default, false.\n */\nexport default function SelectableTable(props) {\n  const {\n    hasColorEncoding,\n    columns,\n    data,\n    onChange,\n    idKey = 'id',\n    valueKey = 'value',\n    allowMultiple = false,\n    allowUncheck = false,\n    showTableHead = true,\n    showTableInputs = false,\n    testHeight = undefined,\n    testWidth = undefined,\n  } = props;\n\n  const [selectedRows, setSelectedRows] = useState(null);\n\n  // Callback function to update the `selectedRows` state.\n  const onSelectRow = useCallback((value, checked) => {\n    if (checked || allowUncheck) {\n      if (!allowMultiple) {\n        setSelectedRows(checked ? [value] : []);\n      } else {\n        setSelectedRows(\n          checked\n            ? union(selectedRows || [], [value])\n            : difference(selectedRows || [], [value]),\n        );\n      }\n    }\n  }, [allowMultiple, allowUncheck, selectedRows]);\n\n  // Handler for checkbox input elements.\n  const handleInputChange = useCallback((event) => {\n    const { target } = event;\n    const { checked } = target;\n    const { value } = target;\n    onSelectRow(value, checked);\n  }, [onSelectRow]);\n\n  // Function to map row IDs to corresponding objects\n  // to pass to the `onChange` callback.\n  const getDataFromIds = useCallback(ids => ids.map(id => ({\n    [idKey]: id,\n    data: data.find(item => item[idKey] === id),\n  })), [data, idKey]);\n\n  // Function to check if a row ID has been selected.\n  const isSelected = useCallback(id => (\n    Array.isArray(selectedRows) && selectedRows.includes(id)\n  ), [selectedRows]);\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    // Check whether an initial set of rows should be selected.\n    const initialSelectedRows = data\n      .map((d) => {\n        if (d[valueKey]) {\n          return d[idKey];\n        }\n        return null;\n      })\n      .filter(Boolean);\n    if (!isEqual(initialSelectedRows, selectedRows)) {\n      if (initialSelectedRows.length > 0) {\n        setSelectedRows(initialSelectedRows);\n      } else {\n        setSelectedRows(null);\n      }\n    }\n  }, [data, idKey, valueKey]);\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    // Call the `onChange` prop function with an updated row or set of rows.\n    if (!onChange || !selectedRows) {\n      return;\n    }\n    const selectedRowData = getDataFromIds(selectedRows);\n    if (allowMultiple) {\n      onChange(selectedRowData);\n    } else if (selectedRows.length === 1) {\n      onChange(selectedRowData[0]);\n    } else if (selectedRows.length === 0) {\n      onChange(null);\n    }\n  }, [selectedRows]);\n\n  // Generate a unique ID to use in (for, id) label-input pairs.\n  const inputUuid = uuidv4();\n\n  // Class for first column of inputs, to hide them if desired.\n  const hiddenInputsClass = (showTableInputs ? '' : 'hidden-input-column');\n\n  const rowRenderer = ({ index, style }) => (\n    // eslint-disable-next-line jsx-a11y/interactive-supports-focus\n    <div\n      key={data[index][idKey]}\n      className={`table-item table-row ${isSelected(data[index][idKey]) ? 'row-checked ' : ''}`}\n      style={style}\n      role=\"button\"\n      onClick={() => onSelectRow(\n        data[index][idKey],\n        !isSelected(data[index][idKey]) || !hasColorEncoding,\n      )}\n    >\n      <div className={`input-container ${hiddenInputsClass} table-cell`}>\n        <label htmlFor={`${inputUuid}_${data[index][idKey]}`}>\n          <input\n            id={`${inputUuid}_${data[index][idKey]}`}\n            type=\"checkbox\"\n            className={(allowMultiple ? 'checkbox' : 'radio')}\n            name={inputUuid}\n            value={data[index][idKey]}\n            onChange={handleInputChange}\n            checked={isSelected(data[index][idKey])}\n          />\n        </label>\n      </div>\n      {columns.map(column => (\n        <div\n          className=\"table-cell\"\n          key={column}\n        >\n          {data[index][column]}\n        </div>\n      ))}\n    </div>\n  );\n\n  const headerRowRenderer = ({ style }) => (\n    <div className={`${hiddenInputsClass} table-row`} style={style}>\n      {columns.map(column => (\n        <div key={column}>{column}</div>\n      ))}\n    </div>\n  );\n\n  return (\n    <div className=\"selectable-table\">\n      <AutoSizer>\n        {({ width, height }) => (\n          <Table\n            height={testHeight || height}\n            gridStyle={{ outline: 'none' }}\n            rowCount={data.length}\n            // 24 is 1 em + padding in either direction (see _selectable_table.scss).\n            rowHeight={24}\n            headerHeight={showTableHead ? 24 : undefined}\n            rowRenderer={rowRenderer}\n            width={testWidth || width}\n            headerRowRenderer={showTableHead ? headerRowRenderer : undefined}\n            rowGetter={({ index }) => data[index]}\n          />\n        )}\n      </AutoSizer>\n    </div>\n  );\n}\n", "import React, {\n  useEffect,\n  useState,\n  useMemo,\n} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport packageJson from '../../../package.json';\nimport {\n  useCoordination,\n  useLoaders,\n  useSetWarning,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport SetsManager from './SetsManager';\nimport TitleInfo from '../TitleInfo';\nimport {\n  treeExportLevelZeroNode,\n  treeExportSet,\n  treeToExpectedCheckedLevel,\n  nodeToLevelDescendantNamePaths,\n  treeToIntersection,\n  treeToUnion,\n  treeToComplement,\n  treeFindNodeByNamePath,\n  treesConflict,\n  nodeTransform,\n  nodeAppendChild,\n  nodePrependChild,\n  nodeInsertChild,\n  filterNode,\n  treeInitialize,\n  initializeCellSetColor,\n} from './cell-set-utils';\nimport {\n  isEqualOrPrefix,\n  tryRenamePath,\n  PATH_SEP,\n} from './utils';\nimport {\n  downloadForUser,\n  handleExportJSON,\n  handleExportTabular,\n  tryUpgradeTreeToLatestSchema,\n} from './io';\nimport {\n  FILE_EXTENSION_JSON,\n  FILE_EXTENSION_TABULAR,\n  SETS_DATATYPE_CELL,\n} from './constants';\nimport { useUrls, useReady } from '../hooks';\nimport {\n  setCellSelection,\n  mergeCellSets,\n  getNextNumberedNodeName,\n} from '../utils';\nimport { useCellsData, useCellSetsData } from '../data-hooks';\n\nconst CELL_SETS_DATA_TYPES = ['cells', 'cell-sets'];\n\n/**\n * A subscriber wrapper around the SetsManager component\n * for the 'cell' datatype.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n */\nexport default function CellSetsManagerSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'Cell Sets',\n  } = props;\n\n  const loaders = useLoaders();\n  const setWarning = useSetWarning();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    cellSetSelection,\n    cellSetColor,\n    additionalCellSets,\n    cellColorEncoding,\n  }, {\n    setCellSetSelection,\n    setCellColorEncoding,\n    setCellSetColor,\n    setAdditionalCellSets,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.cellSets, coordinationScopes);\n\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [\n    isReady,\n    setItemIsReady,\n    setItemIsNotReady, // eslint-disable-line no-unused-vars\n    resetReadyItems,\n  ] = useReady(\n    CELL_SETS_DATA_TYPES,\n  );\n\n  const [cellSetExpansion, setCellSetExpansion] = useState([]);\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n    setCellSetExpansion([]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [cells] = useCellsData(loaders, dataset, setItemIsReady, addUrl, true);\n  const [cellSets] = useCellSetsData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n    { setCellSetSelection, setCellSetColor },\n    { cellSetSelection, cellSetColor },\n  );\n\n  // Validate and upgrade the additionalCellSets.\n  useEffect(() => {\n    if (additionalCellSets) {\n      let upgradedCellSets;\n      try {\n        upgradedCellSets = tryUpgradeTreeToLatestSchema(additionalCellSets, SETS_DATATYPE_CELL);\n      } catch (e) {\n        setWarning(e.message);\n        return;\n      }\n      setAdditionalCellSets(upgradedCellSets);\n    }\n  }, [additionalCellSets, setAdditionalCellSets, setWarning]);\n\n  // Get an array of all cell IDs to use for set complement operations.\n  const allCellIds = useMemo(() => (cells ? Object.keys(cells) : []), [cells]);\n\n  // A helper function for updating the encoding for cell colors,\n  // which may have previously been set to 'geneSelection'.\n  function setCellSetColorEncoding() {\n    setCellColorEncoding('cellSetSelection');\n  }\n\n  // Merged cell sets are only to be used for convenience when reading\n  // (if writing: update either `cellSets` _or_ `additionalCellSets`).\n  const mergedCellSets = useMemo(\n    () => mergeCellSets(cellSets, additionalCellSets),\n    [cellSets, additionalCellSets],\n  );\n\n  // Infer the state of the \"checked level\" radio button based on the selected cell sets.\n  const checkedLevel = useMemo(() => {\n    if (cellSetSelection && cellSetSelection.length > 0\n    && mergedCellSets && mergedCellSets.tree.length > 0) {\n      return treeToExpectedCheckedLevel(mergedCellSets, cellSetSelection);\n    }\n    return null;\n  }, [cellSetSelection, mergedCellSets]);\n\n  // Callback functions\n\n  // The user wants to select all nodes at a particular hierarchy level.\n  function onCheckLevel(levelZeroName, levelIndex) {\n    const lzn = mergedCellSets.tree.find(n => n.name === levelZeroName);\n    if (lzn) {\n      const newCellSetSelection = nodeToLevelDescendantNamePaths(lzn, levelIndex, [], true);\n      setCellSetSelection(newCellSetSelection);\n      setCellSetColorEncoding();\n    }\n  }\n\n  // The user wants to check or uncheck a cell set node.\n  function onCheckNode(targetKey, checked) {\n    const targetPath = (Array.isArray(targetKey) ? targetKey : targetKey.split(PATH_SEP));\n    if (!targetKey) {\n      return;\n    }\n    if (checked) {\n      setCellSetSelection([...cellSetSelection, targetPath]);\n    } else {\n      setCellSetSelection(cellSetSelection.filter(d => !isEqual(d, targetPath)));\n    }\n    setCellSetColorEncoding();\n  }\n\n  // The user wants to expand or collapse a node in the tree.\n  function onExpandNode(expandedKeys, targetKey, expanded) {\n    if (expanded) {\n      setCellSetExpansion(prev => ([...prev, targetKey.split(PATH_SEP)]));\n    } else {\n      setCellSetExpansion(prev => prev.filter(d => !isEqual(d, targetKey.split(PATH_SEP))));\n    }\n  }\n\n  // The user dragged a tree node and dropped it somewhere else in the tree\n  // to re-arrange or re-order the nodes.\n  // We need to verify that their drop target is valid, and if so, complete\n  // the tree re-arrangement.\n  function onDropNode(dropKey, dragKey, dropPosition, dropToGap) {\n    const dropPath = dropKey.split(PATH_SEP);\n    const dropNode = treeFindNodeByNamePath(additionalCellSets, dropPath);\n    if (!dropNode.children && !dropToGap) {\n      // Do not allow a node with a set (i.e. leaf) to become a child of another node with a set,\n      // as this will result in an internal node having a set, which we do not allow.\n      return;\n    }\n    const dropNodeLevel = dropPath.length - 1;\n    const dropNodeIsLevelZero = dropNodeLevel === 0;\n\n    // Get drag node.\n    const dragPath = dragKey.split(PATH_SEP);\n    const dragNode = treeFindNodeByNamePath(additionalCellSets, dragPath);\n\n    if (dropNodeIsLevelZero && dropToGap && !dragNode.children) {\n      // Do not allow a leaf node to become a level zero node.\n      return;\n    }\n\n    let dropParentNode;\n    let dropParentPath;\n    let dropNodeCurrIndex;\n    if (!dropNodeIsLevelZero) {\n      dropParentPath = dropPath.slice(0, -1);\n      dropParentNode = treeFindNodeByNamePath(additionalCellSets, dropParentPath);\n      dropNodeCurrIndex = dropParentNode.children.findIndex(c => c.name === dropNode.name);\n    } else {\n      dropNodeCurrIndex = additionalCellSets.tree.findIndex(\n        lzn => lzn.name === dropNode.name,\n      );\n    }\n    // Further, only allow dragging if the dragged node will have a unique\n    // name among its new siblings.\n    let hasSiblingNameConflict;\n    const dragNodeName = dragNode.name;\n    if (!dropNodeIsLevelZero && dropToGap) {\n      hasSiblingNameConflict = dropParentNode.children\n        .find(c => c !== dragNode && c.name === dragNodeName);\n    } else if (!dropToGap) {\n      hasSiblingNameConflict = dropNode.children\n        .find(c => c !== dragNode && c.name === dragNodeName);\n    } else {\n      hasSiblingNameConflict = additionalCellSets.tree\n        .find(lzn => lzn !== dragNode && lzn.name === dragNodeName);\n    }\n\n    if (hasSiblingNameConflict) {\n      return;\n    }\n\n    // Remove the dragged object from its current position.\n    // Recursively check whether each node path\n    // matches the path of the node to delete.\n    // If so, return null, and then always use\n    // .filter(Boolean) to eliminate any null array elements.\n    const nextAdditionalCellSets = {\n      ...additionalCellSets,\n      tree: additionalCellSets.tree.map(lzn => filterNode(lzn, [], dragPath)).filter(Boolean),\n    };\n\n    // Update index values after temporarily removing the dragged node.\n    // Names are unique as children of their parents.\n    if (!dropNodeIsLevelZero) {\n      dropNodeCurrIndex = dropParentNode.children.findIndex(c => c.name === dropNode.name);\n    } else {\n      dropNodeCurrIndex = nextAdditionalCellSets.tree.findIndex(\n        lzn => lzn.name === dropNode.name,\n      );\n    }\n    let newDragPath = [];\n    if (!dropToGap || !dropNodeIsLevelZero) {\n      let addChildFunction;\n      let checkPathFunction;\n      const newPath = [];\n      if (!dropToGap) {\n        // Append the dragNode to dropNode's children if dropping _onto_ the dropNode.\n        // Set dragNode as the last child of dropNode.\n        addChildFunction = n => nodeAppendChild(n, dragNode);\n        checkPathFunction = path => isEqual(path, dropPath);\n      } else if (!dropNodeIsLevelZero) {\n        // Prepend or insert the dragNode if dropping _between_ (above or below dropNode).\n        // The dropNode is at a level greater than zero,\n        // so it has a parent.\n        checkPathFunction = path => isEqual(path, dropParentPath);\n        if (dropPosition === -1) {\n          // Set dragNode as first child of dropParentNode.\n          addChildFunction = n => nodePrependChild(n, dragNode);\n        } else {\n          // Set dragNode before or after dropNode.\n          const insertIndex = dropNodeCurrIndex + (dropPosition > dropNodeCurrIndex ? 1 : 0);\n          addChildFunction = n => nodeInsertChild(n, dragNode, insertIndex);\n        }\n      }\n      nextAdditionalCellSets.tree = nextAdditionalCellSets.tree.map(\n        node => nodeTransform(\n          node,\n          (n, path) => checkPathFunction(path),\n          (n) => {\n            const newNode = addChildFunction(n);\n            return newNode;\n          },\n          newPath,\n        ),\n      );\n      // Done\n      setAdditionalCellSets(nextAdditionalCellSets);\n      newDragPath = [...newPath[0], dragNode.name];\n      setCellSetSelection([newDragPath]);\n    } else if (dropPosition === -1) {\n      // We need to drop the dragNode to level zero,\n      // and level zero nodes do not have parents.\n      // Set dragNode as first level zero node of the tree.\n      nextAdditionalCellSets.tree.unshift(dragNode);\n      setAdditionalCellSets(nextAdditionalCellSets);\n      newDragPath = [dragNode.name];\n      setCellSetSelection([newDragPath]);\n    } else {\n      // Set dragNode before or after dropNode in level zero.\n      const insertIndex = dropNodeCurrIndex + (dropPosition > dropNodeCurrIndex ? 1 : 0);\n      const newLevelZero = Array.from(nextAdditionalCellSets.tree);\n      newLevelZero.splice(insertIndex, 0, dragNode);\n      nextAdditionalCellSets.tree = newLevelZero;\n      setAdditionalCellSets(nextAdditionalCellSets);\n      newDragPath = [dragNode.name];\n      setCellSetSelection([newDragPath]);\n    }\n    const oldColors = cellSetColor.filter(\n      i => isEqualOrPrefix(dragPath, i.path),\n    );\n    const newColors = oldColors.map(\n      i => (\n        {\n          ...i,\n          path: !isEqual(i.path, dragPath)\n            ? newDragPath.concat(i.path.slice(dragPath.length))\n            : newDragPath,\n        }\n      ),\n    );\n    const newCellSetColor = cellSetColor.filter(\n      i => !isEqualOrPrefix(dragPath, i.path),\n    );\n    newCellSetColor.push(...newColors);\n    setCellSetColor(newCellSetColor);\n  }\n\n  // The user wants to change the color of a cell set node.\n  function onNodeSetColor(targetPath, color) {\n    // Replace the color if an array element for this path already exists.\n    const prevNodeColor = cellSetColor?.find(d => isEqual(d.path, targetPath));\n    if (!prevNodeColor) {\n      setCellSetColor([\n        ...(cellSetColor || []),\n        {\n          path: targetPath,\n          color,\n        },\n      ]);\n    } else {\n      setCellSetColor([\n        ...cellSetColor.filter(d => !isEqual(d.path, targetPath)),\n        {\n          path: targetPath,\n          color,\n        },\n      ]);\n    }\n  }\n\n  // The user wants to change the name of a cell set node.\n  function onNodeSetName(targetPath, name) {\n    const nextNamePath = [...targetPath];\n    nextNamePath.pop();\n    nextNamePath.push(name);\n\n    // Recursively check whether each node path\n    // matches the path or a prefix of the path of the node to rename.\n    // If so, rename the node using the new path.\n    function renameNode(node, prevPath) {\n      if (isEqual([...prevPath, node.name], targetPath)) {\n        return {\n          ...node,\n          name,\n        };\n      }\n      if (!node.children) {\n        return node;\n      }\n      return {\n        ...node,\n        children: node.children.map(c => renameNode(c, [...prevPath, node.name])),\n      };\n    }\n    const nextAdditionalCellSets = {\n      ...additionalCellSets,\n      tree: additionalCellSets.tree.map(lzn => renameNode(lzn, [])),\n    };\n    // Change all paths that have this node as a prefix (i.e. descendants).\n    const nextCellSetColor = cellSetColor.map(d => ({\n      path: tryRenamePath(targetPath, d.path, nextNamePath),\n      color: d.color,\n    }));\n    const nextCellSetSelection = cellSetSelection.map(d => (\n      tryRenamePath(targetPath, d, nextNamePath)\n    ));\n    const nextCellSetExpansion = cellSetExpansion.map(d => (\n      tryRenamePath(targetPath, d, nextNamePath)\n    ));\n    // Need to update the node path everywhere it may be present.\n    setAdditionalCellSets(nextAdditionalCellSets);\n    setCellSetColor(nextCellSetColor);\n    setCellSetSelection(nextCellSetSelection);\n    setCellSetExpansion(nextCellSetExpansion);\n  }\n\n  // Each time the user types while renaming a cell set node,\n  // we need to check whether the potential new name conflicts\n  // with any existing cell set node names.\n  // If there are conflicts, we want to disable the \"Save\" button.\n  function onNodeCheckNewName(targetPath, name) {\n    const nextNamePath = [...targetPath];\n    nextNamePath.pop();\n    nextNamePath.push(name);\n    const hasConflicts = (\n      !isEqual(targetPath, nextNamePath)\n      && treeFindNodeByNamePath(additionalCellSets, nextNamePath)\n    );\n    return hasConflicts;\n  }\n\n  // The user wants to delete a cell set node, and has confirmed their choice.\n  function onNodeRemove(targetPath) {\n    // Recursively check whether each node path\n    // matches the path of the node to delete.\n    // If so, return null, and then always use\n    // .filter(Boolean) to eliminate any null array elements.\n    const nextAdditionalCellSets = {\n      ...additionalCellSets,\n      tree: additionalCellSets.tree.map(lzn => filterNode(lzn, [], targetPath)).filter(Boolean),\n    };\n    // Delete state for all paths that have this node\n    // path as a prefix (i.e. delete all descendents).\n    const nextCellSetColor = cellSetColor.filter(d => !isEqualOrPrefix(targetPath, d.path));\n    const nextCellSetSelection = cellSetSelection.filter(d => !isEqualOrPrefix(targetPath, d));\n    const nextCellSetExpansion = cellSetExpansion.filter(d => !isEqualOrPrefix(targetPath, d));\n    setAdditionalCellSets(nextAdditionalCellSets);\n    setCellSetColor(nextCellSetColor);\n    setCellSetSelection(nextCellSetSelection);\n    setCellSetExpansion(nextCellSetExpansion);\n  }\n\n  // The user wants to view (i.e. select) a particular node,\n  // or its expanded descendents.\n  function onNodeView(targetPath) {\n    // If parent node is clicked, and if it is expanded,\n    // then select the expanded descendent nodes.\n    const setsToView = [];\n    // Recursively determine which descendent nodes are currently expanded.\n    function viewNode(node, nodePath) {\n      if (cellSetExpansion.find(expandedPath => isEqual(nodePath, expandedPath))) {\n        if (node.children) {\n          node.children.forEach((c) => {\n            viewNode(c, [...nodePath, c.name]);\n          });\n        } else {\n          setsToView.push(nodePath);\n        }\n      } else {\n        setsToView.push(nodePath);\n      }\n    }\n    const targetNode = treeFindNodeByNamePath(mergedCellSets, targetPath);\n    viewNode(targetNode, targetPath);\n    setCellSetSelection(setsToView);\n    setCellSetColorEncoding();\n  }\n\n  // The user wants to create a new level zero node.\n  function onCreateLevelZeroNode() {\n    const nextName = getNextNumberedNodeName(additionalCellSets?.tree, 'My hierarchy ');\n    setAdditionalCellSets({\n      ...(additionalCellSets || treeInitialize(SETS_DATATYPE_CELL)),\n      tree: [\n        ...(additionalCellSets ? additionalCellSets.tree : []),\n        {\n          name: nextName,\n          children: [],\n        },\n      ],\n    });\n  }\n\n  // The user wants to create a new node corresponding to\n  // the union of the selected sets.\n  function onUnion() {\n    const newSet = treeToUnion(mergedCellSets, cellSetSelection);\n    setCellSelection(\n      newSet, additionalCellSets, cellSetColor,\n      setCellSetSelection, setAdditionalCellSets, setCellSetColor,\n      setCellColorEncoding,\n      'Union ',\n    );\n  }\n\n  // The user wants to create a new node corresponding to\n  // the intersection of the selected sets.\n  function onIntersection() {\n    const newSet = treeToIntersection(mergedCellSets, cellSetSelection);\n    setCellSelection(\n      newSet, additionalCellSets, cellSetColor,\n      setCellSetSelection, setAdditionalCellSets, setCellSetColor,\n      setCellColorEncoding,\n      'Intersection ',\n    );\n  }\n\n  // The user wants to create a new node corresponding to\n  // the complement of the selected sets.\n  function onComplement() {\n    const newSet = treeToComplement(mergedCellSets, cellSetSelection, allCellIds);\n    setCellSelection(\n      newSet, additionalCellSets, cellSetColor,\n      setCellSetSelection, setAdditionalCellSets, setCellSetColor,\n      setCellColorEncoding,\n      'Complement ',\n    );\n  }\n\n  // The user wants to import a cell set hierarchy,\n  // probably from a CSV or JSON file.\n  function onImportTree(treeToImport) {\n    // Check for any naming conflicts with the current sets\n    // (both user-defined and dataset-defined) before importing.\n    const hasConflict = treesConflict(mergedCellSets, treeToImport);\n    if (!hasConflict) {\n      setAdditionalCellSets({\n        ...(additionalCellSets || treeInitialize(SETS_DATATYPE_CELL)),\n        tree: [\n          ...(additionalCellSets ? additionalCellSets.tree : []),\n          ...treeToImport.tree,\n        ],\n      });\n      // Automatically initialize set colors for the imported sets.\n      const importAutoSetColors = initializeCellSetColor(treeToImport, cellSetColor);\n      setCellSetColor([\n        ...cellSetColor,\n        ...importAutoSetColors,\n      ]);\n    }\n  }\n\n  // The user wants to download a particular hierarchy to a JSON file.\n  function onExportLevelZeroNodeJSON(nodePath) {\n    const {\n      treeToExport, nodeName,\n    } = treeExportLevelZeroNode(mergedCellSets, nodePath, SETS_DATATYPE_CELL, cellSetColor, theme);\n    downloadForUser(\n      handleExportJSON(treeToExport),\n      `${nodeName}_${packageJson.name}-${SETS_DATATYPE_CELL}-hierarchy.${FILE_EXTENSION_JSON}`,\n    );\n  }\n\n  // The user wants to download a particular hierarchy to a CSV file.\n  function onExportLevelZeroNodeTabular(nodePath) {\n    const {\n      treeToExport, nodeName,\n    } = treeExportLevelZeroNode(mergedCellSets, nodePath, SETS_DATATYPE_CELL, cellSetColor, theme);\n    downloadForUser(\n      handleExportTabular(treeToExport),\n      `${nodeName}_${packageJson.name}-${SETS_DATATYPE_CELL}-hierarchy.${FILE_EXTENSION_TABULAR}`,\n    );\n  }\n\n  // The user wants to download a particular set to a JSON file.\n  function onExportSetJSON(nodePath) {\n    const { setToExport, nodeName } = treeExportSet(mergedCellSets, nodePath);\n    downloadForUser(\n      handleExportJSON(setToExport),\n      `${nodeName}_${packageJson.name}-${SETS_DATATYPE_CELL}-set.${FILE_EXTENSION_JSON}`,\n      FILE_EXTENSION_JSON,\n    );\n  }\n  return (\n    <TitleInfo\n      title={title}\n      isScroll\n      removeGridComponent={removeGridComponent}\n      urls={urls}\n      theme={theme}\n      isReady={isReady}\n    >\n      <SetsManager\n        setColor={cellSetColor}\n        sets={cellSets}\n        additionalSets={additionalCellSets}\n        levelSelection={checkedLevel}\n        setSelection={cellSetSelection}\n        setExpansion={cellSetExpansion}\n        hasColorEncoding={cellColorEncoding === 'cellSetSelection'}\n        draggable\n        datatype={SETS_DATATYPE_CELL}\n        onError={setWarning}\n        onCheckNode={onCheckNode}\n        onExpandNode={onExpandNode}\n        onDropNode={onDropNode}\n        onCheckLevel={onCheckLevel}\n        onNodeSetColor={onNodeSetColor}\n        onNodeSetName={onNodeSetName}\n        onNodeCheckNewName={onNodeCheckNewName}\n        onNodeRemove={onNodeRemove}\n        onNodeView={onNodeView}\n        onImportTree={onImportTree}\n        onCreateLevelZeroNode={onCreateLevelZeroNode}\n        onExportLevelZeroNodeJSON={onExportLevelZeroNodeJSON}\n        onExportLevelZeroNodeTabular={onExportLevelZeroNodeTabular}\n        onExportSetJSON={onExportSetJSON}\n        onUnion={onUnion}\n        onIntersection={onIntersection}\n        onComplement={onComplement}\n        hasCheckedSetsToUnion={cellSetSelection?.length > 1}\n        hasCheckedSetsToIntersect={cellSetSelection?.length > 1}\n        hasCheckedSetsToComplement={cellSetSelection?.length > 0}\n        theme={theme}\n      />\n    </TitleInfo>\n  );\n}\n", "/* eslint-disable no-underscore-dangle */\nimport React, { useState, useMemo } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport Tree from './Tree';\nimport TreeNode from './TreeNode';\nimport { PlusButton, SetOperationButtons } from './SetsManagerButtons';\nimport { nodeToRenderProps } from './cell-set-utils';\nimport { getDefaultColor } from '../utils';\nimport { pathToKey } from './utils';\n\nfunction processNode(node, prevPath, setColor, theme) {\n  const nodePath = [...prevPath, node.name];\n  return {\n    ...node,\n    ...(node.children ? ({\n      children: node.children\n        .map(c => processNode(c, nodePath, setColor)),\n    }) : {}),\n    color: setColor?.find(d => isEqual(d.path, nodePath))?.color || getDefaultColor(theme),\n  };\n}\n\nfunction processSets(sets, setColor, theme) {\n  return {\n    ...sets,\n    tree: sets ? sets.tree.map(lzn => processNode(lzn, [], setColor, theme)) : [],\n  };\n}\n\nfunction getAllKeys(node, path = []) {\n  if (!node) {\n    return null;\n  }\n  const newPath = [...path, node.name];\n  if (node.children) {\n    return [pathToKey(newPath), ...node.children.flatMap(v => getAllKeys(v, newPath))];\n  }\n  return pathToKey(newPath);\n}\n\n/**\n * A generic hierarchical set manager component.\n * @prop {object} tree An object representing set hierarchies.\n * @prop {string} datatype The data type for sets (e.g. \"cell\")\n * @prop {function} clearPleaseWait A callback to signal that loading is complete.\n * @prop {boolean} draggable Whether tree nodes can be rearranged via drag-and-drop.\n * By default, true.\n * @prop {boolean} checkable Whether to show the \"Check\" menu button\n * and checkboxes for selecting multiple sets. By default, true.\n * @prop {boolean} editable Whether to show rename, delete, color, or create options.\n * By default, true.\n * @prop {boolean} expandable Whether to allow hierarchies to be expanded\n * to show the list or tree of sets contained. By default, true.\n * @prop {boolean} operatable Whether to enable union, intersection,\n * and complement operations on checked sets. By default, true.\n * @prop {boolean} exportable Whether to enable exporting hierarchies and sets to files.\n * By default, true.\n * @prop {boolean} importable Whether to enable importing hierarchies from files.\n * By default, true.\n * @prop {function} onError Function to call with error messages (failed import validation, etc).\n * @prop {function} onCheckNode Function to call when a single node has been checked or un-checked.\n * @prop {function} onExpandNode Function to call when a node has been expanded.\n * @prop {function} onDropNode Function to call when a node has been dragged-and-dropped.\n * @prop {function} onCheckLevel Function to call when an entire hierarchy level has been selected,\n * via the \"Color by cluster\" and \"Color by subcluster\" buttons below collapsed level zero nodes.\n * @prop {function} onNodeSetColor Function to call when a new node color has been selected.\n * @prop {function} onNodeSetName Function to call when a node has been renamed.\n * @prop {function} onNodeRemove Function to call when the user clicks the \"Delete\" menu button\n * to remove a node.\n * @prop {function} onNodeView Function to call when the user wants to view the set associated\n * with a particular node.\n * @prop {function} onImportTree Function to call when a tree has been imported\n * using the \"plus\" button.\n * @prop {function} onCreateLevelZeroNode Function to call when a user clicks the \"Create hierarchy\"\n * menu option using the \"plus\" button.\n * @prop {function} onExportLevelZeroNode Function to call when a user wants to\n * export an entire hierarchy via the \"Export hierarchy\" menu button for a\n * particular level zero node.\n * @prop {function} onExportSet Function to call when a user wants to export a set associated with\n * a particular node via the \"Export set\" menu button.\n * @prop {function} onUnion Function to call when a user wants to create a new set from the union\n * of the sets associated with the currently-checked nodes.\n * @prop {function} onIntersection Function to call when a user wants to create a new set from the\n * intersection of the sets associated with the currently-checked nodes.\n * @prop {function} onComplement Function to call when a user wants to create a new set from the\n * complement of the (union of the) sets associated with the currently-checked nodes.\n * @prop {function} onView Function to call when a user wants to view the sets\n * associated with the currently-checked nodes.\n * @prop {string} theme \"light\" or \"dark\" for the vitessce theme\n */\nexport default function SetsManager(props) {\n  const {\n    theme,\n    sets,\n    additionalSets,\n    setColor, // TODO: use this\n    levelSelection: checkedLevel,\n    setSelection,\n    setExpansion,\n    hasColorEncoding,\n    datatype,\n    draggable = true,\n    checkable = true,\n    editable = true,\n    expandable = true,\n    operatable = true,\n    exportable = true,\n    importable = true,\n    onError,\n    onCheckNode,\n    onExpandNode,\n    onDropNode,\n    onCheckLevel,\n    onNodeSetColor,\n    onNodeSetName,\n    onNodeCheckNewName,\n    onNodeRemove,\n    onNodeView,\n    onImportTree,\n    onCreateLevelZeroNode,\n    onExportLevelZeroNodeJSON,\n    onExportLevelZeroNodeTabular,\n    onExportSetJSON,\n    onUnion,\n    onIntersection,\n    onComplement,\n    hasCheckedSetsToUnion,\n    hasCheckedSetsToIntersect,\n    hasCheckedSetsToComplement,\n  } = props;\n\n  const isChecking = true;\n  const autoExpandParent = true;\n  const [isDragging, setIsDragging] = useState(false);\n  const [isEditingNodeName, setIsEditingNodeName] = useState(null);\n\n  const processedSets = useMemo(() => processSets(\n    sets, setColor, theme,\n  ), [sets, setColor, theme]);\n  const processedAdditionalSets = useMemo(() => processSets(\n    additionalSets, setColor, theme,\n  ), [additionalSets, setColor, theme]);\n\n  const additionalSetKeys = (processedAdditionalSets\n    ? processedAdditionalSets.tree.flatMap(v => getAllKeys(v, []))\n    : []\n  );\n\n  const allSetSelectionKeys = (setSelection || []).map(pathToKey);\n  const allSetExpansionKeys = (setExpansion || []).map(pathToKey);\n\n  const setSelectionKeys = allSetSelectionKeys.filter(k => !additionalSetKeys.includes(k));\n  const setExpansionKeys = allSetExpansionKeys.filter(k => !additionalSetKeys.includes(k));\n\n  const additionalSetSelectionKeys = allSetSelectionKeys.filter(k => additionalSetKeys.includes(k));\n  const additionalSetExpansionKeys = allSetExpansionKeys.filter(k => additionalSetKeys.includes(k));\n\n  /**\n   * Recursively render TreeNode components.\n   * @param {object[]} nodes An array of node objects.\n   * @returns {TreeNode[]|null} Array of TreeNode components or null.\n   */\n  function renderTreeNodes(nodes, readOnly, currPath) {\n    if (!nodes) {\n      return null;\n    }\n    return nodes.map((node) => {\n      const newPath = [...currPath, node.name];\n      return (\n        <TreeNode\n          theme={theme}\n          key={pathToKey(newPath)}\n          {...nodeToRenderProps(node, newPath, setColor)}\n\n          isEditing={isEqual(isEditingNodeName, newPath)}\n\n          datatype={datatype}\n          draggable={draggable && !readOnly}\n          editable={editable && !readOnly}\n          checkable={checkable}\n          expandable={expandable}\n          exportable={exportable}\n\n          hasColorEncoding={hasColorEncoding}\n          isChecking={isChecking}\n          checkedLevelPath={checkedLevel ? checkedLevel.levelZeroPath : null}\n          checkedLevelIndex={checkedLevel ? checkedLevel.levelIndex : null}\n\n          onCheckNode={onCheckNode}\n          onCheckLevel={onCheckLevel}\n          onNodeView={onNodeView}\n          onNodeSetColor={onNodeSetColor}\n          onNodeSetName={(targetPath, name) => {\n            onNodeSetName(targetPath, name);\n            setIsEditingNodeName(null);\n          }}\n          onNodeCheckNewName={onNodeCheckNewName}\n          onNodeSetIsEditing={setIsEditingNodeName}\n          onNodeRemove={onNodeRemove}\n          onExportLevelZeroNodeJSON={onExportLevelZeroNodeJSON}\n          onExportLevelZeroNodeTabular={onExportLevelZeroNodeTabular}\n          onExportSetJSON={onExportSetJSON}\n\n          disableTooltip={isDragging}\n          onDragStart={() => setIsDragging(true)}\n          onDragEnd={() => setIsDragging(false)}\n        >\n          {renderTreeNodes(node.children, readOnly, newPath, theme)}\n        </TreeNode>\n      );\n    });\n  }\n\n  return (\n    <div className=\"sets-manager\">\n      <div className=\"sets-manager-tree\">\n        <Tree\n          draggable={false}\n          checkable={checkable}\n\n          checkedKeys={setSelectionKeys}\n          expandedKeys={setExpansionKeys}\n          autoExpandParent={autoExpandParent}\n\n          onCheck={(checkedKeys, info) => onCheckNode(\n            info.node.props.nodeKey,\n            info.checked,\n          )}\n          onExpand={(expandedKeys, info) => onExpandNode(\n            expandedKeys,\n            info.node.props.nodeKey,\n            info.expanded,\n          )}\n        >\n          {renderTreeNodes(processedSets.tree, true, [], theme)}\n        </Tree>\n        <Tree\n          draggable /* TODO */\n          checkable={checkable}\n\n          checkedKeys={additionalSetSelectionKeys}\n          expandedKeys={additionalSetExpansionKeys}\n          autoExpandParent={autoExpandParent}\n\n          onCheck={(checkedKeys, info) => onCheckNode(\n            info.node.props.nodeKey,\n            info.checked,\n          )}\n          onExpand={(expandedKeys, info) => onExpandNode(\n            expandedKeys,\n            info.node.props.nodeKey,\n            info.expanded,\n          )}\n          onDrop={(info) => {\n            const { eventKey: dropKey } = info.node.props;\n            const { eventKey: dragKey } = info.dragNode.props;\n            const { dropToGap, dropPosition } = info;\n            onDropNode(dropKey, dragKey, dropPosition, dropToGap);\n          }}\n        >\n          {renderTreeNodes(processedAdditionalSets.tree, false, [], theme)}\n        </Tree>\n\n        <PlusButton\n          datatype={datatype}\n          onError={onError}\n          onImportTree={onImportTree}\n          onCreateLevelZeroNode={onCreateLevelZeroNode}\n          importable={importable}\n          editable={editable}\n        />\n      </div>\n      {isChecking ? (\n        <div className=\"set-operation-buttons\">\n          <SetOperationButtons\n            onUnion={onUnion}\n            onIntersection={onIntersection}\n            onComplement={onComplement}\n            operatable={operatable}\n\n            hasCheckedSetsToUnion={hasCheckedSetsToUnion}\n            hasCheckedSetsToIntersect={hasCheckedSetsToIntersect}\n            hasCheckedSetsToComplement={hasCheckedSetsToComplement}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n", "import React from 'react';\nimport RcTree from 'rc-tree';\nimport classNames from 'classnames';\n\n/**\n * A helper component around the rc-tree\n * library's tree component, to set\n * default props.\n */\nconst Tree = React.forwardRef((props, ref) => {\n  const {\n    prefixCls,\n    className,\n    showIcon,\n    blockNode,\n    children,\n    checkable,\n  } = props;\n  return (\n    <RcTree\n      itemHeight={32}\n      ref={ref}\n      {...props}\n      className={classNames(className, {\n        [`${prefixCls}-icon-hide`]: !showIcon,\n        [`${prefixCls}-block-node`]: blockNode,\n      })}\n      checkable={checkable ? <span className={`${prefixCls}-checkbox-inner`} /> : checkable}\n    >\n      {children}\n    </RcTree>\n  );\n});\n\nTree.defaultProps = {\n  virtual: false,\n  checkable: false,\n  showIcon: false,\n  blockNode: true,\n  prefixCls: 'rc-tree',\n};\n\nexport default Tree;\n", "import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { TreeNode as RcTreeNode } from 'rc-tree';\nimport { getDataAndAria } from 'rc-tree/es/util';\nimport classNames from 'classnames';\nimport range from 'lodash/range';\nimport isEqual from 'lodash/isEqual';\nimport PopoverMenu from './PopoverMenu';\nimport HelpTooltip from './HelpTooltip';\nimport { callbackOnKeyPress, colorArrayToString, getLevelTooltipText } from './utils';\nimport { ReactComponent as MenuSVG } from '../../assets/menu.svg';\nimport { getDefaultColor } from '../utils';\n\n\n/**\n * Construct a `menuConfig` array for the PopoverMenu component.\n * @param {object} props The props for the TreeNode component.\n * @returns {object[]} An array of menu items to pass to PopoverMenu.\n */\nfunction makeNodeViewMenuConfig(props) {\n  const {\n    path,\n    level,\n    height,\n    onCheckNode,\n    onNodeRemove,\n    onNodeSetIsEditing,\n    onExportLevelZeroNodeJSON,\n    onExportLevelZeroNodeTabular,\n    onExportSetJSON,\n    checkable,\n    editable,\n    exportable,\n    checked,\n  } = props;\n\n  return [\n    ...(editable ? [\n      {\n        title: 'Rename',\n        handler: () => { onNodeSetIsEditing(path, true); },\n        handlerKey: 'r',\n      },\n      {\n        title: 'Delete',\n        confirm: true,\n        handler: () => { onNodeRemove(path); },\n        handlerKey: 'd',\n      },\n    ] : []),\n    ...(level === 0 && exportable ? [\n      {\n        title: 'Export hierarchy',\n        subtitle: '(to JSON file)',\n        handler: () => { onExportLevelZeroNodeJSON(path); },\n        handlerKey: 'j',\n      },\n      ...(height <= 1 ? [\n        {\n          title: 'Export hierarchy',\n          subtitle: '(to CSV file)',\n          handler: () => { onExportLevelZeroNodeTabular(path); },\n          handlerKey: 't',\n        },\n      ] : []),\n    ] : []),\n    ...(level > 0 ? [\n      ...(checkable ? [\n        {\n          title: (checked ? 'Uncheck' : 'Check'),\n          handler: () => { onCheckNode(path, !checked); },\n          handlerKey: 's',\n        },\n      ] : []),\n      ...(exportable ? [\n        {\n          title: 'Export set',\n          subtitle: '(to JSON file)',\n          handler: () => { onExportSetJSON(path); },\n          handlerKey: 'e',\n        },\n      ] : []),\n    ] : []),\n  ];\n}\n\n/**\n * The \"static\" node component to render when the user is not renaming.\n * @param {object} props The props for the TreeNode component.\n */\nfunction NamedSetNodeStatic(props) {\n  const {\n    title,\n    path,\n    nodeKey,\n    level,\n    height,\n    color,\n    checkbox,\n    isChecking,\n    isLeaf,\n    onNodeSetColor,\n    onNodeView,\n    expanded,\n    onCheckLevel,\n    checkedLevelPath,\n    checkedLevelIndex,\n    disableTooltip,\n    size,\n    datatype,\n    editable,\n    theme,\n  } = props;\n  const shouldCheckNextLevel = (level === 0 && !expanded);\n  const nextLevelToCheck = (\n    (checkedLevelIndex && isEqual(path, checkedLevelPath) && checkedLevelIndex < height)\n      ? checkedLevelIndex + 1\n      : 1\n  );\n  const numberFormatter = new Intl.NumberFormat('en-US');\n  const niceSize = numberFormatter.format(size);\n  let tooltipText;\n  if (shouldCheckNextLevel) {\n    tooltipText = getLevelTooltipText(nextLevelToCheck);\n  } else if (isLeaf || !expanded) {\n    tooltipText = `Color individual set (${niceSize} ${datatype}${(size === 1 ? '' : 's')})`;\n  } else {\n    tooltipText = 'Color by expanded descendants';\n  }\n  // If this is a level zero node and is _not_ expanded, then upon click,\n  // the behavior should be to color by the first or next cluster level.\n  // If this is a level zero node and _is_ expanded, or if any other node,\n  // click should trigger onNodeView.\n  const onClick = (level === 0 && !expanded\n    ? () => onCheckLevel(nodeKey, nextLevelToCheck)\n    : () => onNodeView(path)\n  );\n  const tooltipProps = (disableTooltip ? { visible: false } : {});\n  const popoverMenuConfig = makeNodeViewMenuConfig(props);\n  return (\n    <span>\n      <HelpTooltip title={tooltipText} {...tooltipProps}>\n        <button\n          type=\"button\"\n          onClick={onClick}\n          onKeyPress={e => callbackOnKeyPress(e, 'v', () => onNodeView(path))}\n          className=\"title-button\"\n        >\n          {title}\n        </button>\n      </HelpTooltip>\n      {popoverMenuConfig.length > 0 ? (\n        <PopoverMenu\n          menuConfig={makeNodeViewMenuConfig(props)}\n          color={level > 0 && editable ? (color || getDefaultColor(theme)) : null}\n          setColor={c => onNodeSetColor(path, c)}\n        >\n          <MenuSVG className=\"node-menu-icon\" />\n        </PopoverMenu>\n      ) : null}\n      {level > 0 && isChecking ? checkbox : null}\n      {level > 0 && (<span className=\"node-size-label\">{niceSize}</span>)}\n    </span>\n  );\n}\n\n/**\n * The \"editing\" node component to render when the user is renaming,\n * containing a text input field and a save button.\n * @param {object} props The props for the TreeNode component.\n */\nfunction NamedSetNodeEditing(props) {\n  const {\n    title,\n    path,\n    onNodeSetName,\n    onNodeCheckNewName,\n  } = props;\n  const [currentTitle, setCurrentTitle] = useState(title);\n\n  // Do not allow the user to save a potential name if it conflicts with\n  // another name in the hierarchy.\n  const hasConflicts = onNodeCheckNewName(path, currentTitle);\n  function trySetName() {\n    if (!hasConflicts) {\n      onNodeSetName(path, currentTitle, true);\n    }\n  }\n  return (\n    <span className=\"title-button-with-input\">\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus\n        className=\"title-input\"\n        type=\"text\"\n        value={currentTitle}\n        onChange={(e) => { setCurrentTitle(e.target.value); }}\n        onKeyPress={e => callbackOnKeyPress(\n          e,\n          'Enter',\n          trySetName,\n        )}\n        onFocus={e => e.target.select()}\n      />\n      {!hasConflicts && (\n        <button\n          type=\"button\"\n          className=\"title-save-button\"\n          onClick={trySetName}\n        >\n          Save\n        </button>\n      )}\n    </span>\n  );\n}\n\n/**\n * A \"delegation\" component, to decide whether to render\n * an \"editing\" vs. \"static\" node component.\n * @param {object} props The props for the TreeNode component.\n */\nfunction NamedSetNode(props) {\n  const {\n    isEditing,\n    isCurrentSet,\n  } = props;\n  return (\n    (isEditing || isCurrentSet)\n      ? (<NamedSetNodeEditing {...props} />)\n      : (<NamedSetNodeStatic {...props} />)\n  );\n}\n\n/**\n * Buttons for viewing each hierarchy level,\n * rendered below collapsed level zero nodes.\n * @param {object} props The props for the (level zero) TreeNode component.\n */\nfunction LevelsButtons(props) {\n  const {\n    nodeKey,\n    path,\n    height,\n    onCheckLevel,\n    checkedLevelPath,\n    checkedLevelIndex,\n    hasColorEncoding,\n  } = props;\n  function onCheck(event) {\n    if (event.target.checked) {\n      const newLevel = parseInt(event.target.value, 10);\n      onCheckLevel(nodeKey, newLevel);\n    }\n  }\n  return (\n    <div className=\"level-buttons-container\">\n      {range(1, height + 1).map((i) => {\n        const isChecked = isEqual(path, checkedLevelPath) && i === checkedLevelIndex;\n        return (\n          <div className=\"level-buttons\" key={i}>\n            <HelpTooltip title={getLevelTooltipText(i)}>\n              <input\n                className={clsx('level-radio-button', { checked: isChecked && !hasColorEncoding })}\n                type=\"checkbox\"\n                value={i}\n                checked={isChecked && hasColorEncoding}\n                onChange={onCheck}\n              />\n            </HelpTooltip>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\n/**\n * Render the \"switcher\" icon.\n * Arrow for collapsed/expanded non-leaf nodes,\n * or square for leaf nodes.\n * @param {object} props The props for the TreeNode component.\n */\nfunction SwitcherIcon(props) {\n  const {\n    isLeaf, isOpen, color,\n  } = props;\n  const hexColor = (color ? colorArrayToString(color) : undefined);\n  if (isLeaf) {\n    return (\n      <i\n        className=\"anticon anticon-circle rc-tree-switcher-icon\"\n      >\n        <svg\n          viewBox=\"0 0 1024 1024\"\n          focusable=\"false\"\n          data-icon=\"caret-down\"\n          width=\"1em\"\n          height=\"1em\"\n          aria-hidden=\"true\"\n        >\n          <rect fill={hexColor} x={600 / 2} y={600 / 2} width={1024 - 600} height={1024 - 600} />\n        </svg>\n      </i>\n    );\n  }\n  return (\n    <i\n      className=\"anticon anticon-caret-down rc-tree-switcher-icon\"\n    >\n      <svg\n        viewBox=\"0 0 1024 1024\"\n        focusable=\"false\"\n        data-icon=\"caret-down\"\n        width=\"1em\"\n        height=\"1em\"\n        aria-hidden=\"true\"\n      >\n        <path\n          fill={(isOpen ? '#444' : hexColor)}\n          d=\"M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z\"\n        />\n      </svg>\n    </i>\n  );\n}\n\n/**\n * A custom TreeNode component.\n * @extends {RcTreeNode} TreeNode from the rc-tree library.\n */\nexport default class TreeNode extends RcTreeNode {\n  /**\n   * Override the main node text elements.\n   */\n  renderSelector = () => {\n    const {\n      title,\n      isCurrentSet,\n      isSelected,\n      isEditing,\n      onDragStart: onDragStartProp,\n    } = this.props;\n    const {\n      rcTree: {\n        prefixCls: prefixClass,\n        draggable,\n      },\n    } = this.context;\n\n    const onDragStart = (e) => {\n      onDragStartProp();\n      this.onDragStart(e);\n    };\n\n    const wrapClass = `${prefixClass}-node-content-wrapper`;\n    const isDraggable = (!isCurrentSet && !isEditing && draggable);\n    return (\n      <span\n        ref={this.setSelectHandle}\n        title={title}\n        className={classNames(\n          wrapClass,\n          `${wrapClass}-${this.getNodeState() || 'normal'}`,\n          isSelected && `${prefixClass}-node-selected`,\n          isDraggable && 'draggable',\n        )}\n        draggable={isDraggable}\n        aria-grabbed={isDraggable}\n        onDragStart={isDraggable ? onDragStart : undefined}\n      >\n        <NamedSetNode\n          {...this.props}\n          prefixClass={prefixClass}\n          checkbox={this.renderCheckbox()}\n        />\n        {this.renderLevels()}\n      </span>\n    );\n  };\n\n  /**\n   * Render the LevelsButtons component if this node\n   * is a collapsed level zero node.\n   */\n  renderLevels = () => {\n    const { level, expanded } = this.props;\n    if (level !== 0 || expanded) {\n      return null;\n    }\n    return (\n      <LevelsButtons\n        {...this.props}\n      />\n    );\n  }\n\n  /**\n   * Override the switcher element.\n   */\n  renderSwitcher = () => {\n    const { expanded, isLeaf, color } = this.props;\n    const {\n      rcTree: {\n        prefixCls: prefixClass,\n        onNodeExpand,\n      },\n    } = this.context;\n\n    const onNodeExpandWrapper = (e) => {\n      // Do not call onNodeExpand if the node is a leaf node.\n      if (!isLeaf) {\n        onNodeExpand(e, this);\n      }\n    };\n\n    const switcherClass = classNames(\n      `${prefixClass}-switcher`,\n      { [`${prefixClass}-switcher_${(expanded ? 'open' : 'close')}`]: !isLeaf },\n    );\n    return (\n      <span\n        className={switcherClass}\n        onClick={onNodeExpandWrapper}\n        onKeyPress={e => callbackOnKeyPress(e, 'd', onNodeExpandWrapper)}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        <SwitcherIcon\n          isLeaf={isLeaf}\n          isOpen={expanded}\n          color={color}\n        />\n      </span>\n    );\n  };\n\n  /**\n   * Override main render function,\n   * to enable overriding the sub-render functions\n   * for switcher, selector, etc.\n   */\n  render() {\n    const {\n      style, loading, level,\n      dragOver, dragOverGapTop, dragOverGapBottom,\n      isLeaf,\n      expanded, selected, checked, halfChecked,\n      onDragEnd: onDragEndProp,\n      expandable,\n      ...otherProps\n    } = this.props;\n    const {\n      rcTree: {\n        prefixCls: prefixClass,\n        filterTreeNode,\n        draggable,\n      },\n    } = this.context;\n    const disabled = this.isDisabled();\n    const dataAndAriaAttributeProps = getDataAndAria(otherProps);\n\n    const onDragEnd = (e) => {\n      onDragEndProp();\n      this.onDragEnd(e);\n    };\n\n    return (\n      <li\n        className={classNames('rc-tree-treenode', `level-${level}-treenode`, {\n          [`${prefixClass}-treenode-disabled`]: disabled,\n          [`${prefixClass}-treenode-switcher-${expanded ? 'open' : 'close'}`]: !isLeaf,\n          [`${prefixClass}-treenode-checkbox-checked`]: checked,\n          [`${prefixClass}-treenode-checkbox-indeterminate`]: halfChecked,\n          [`${prefixClass}-treenode-selected`]: selected,\n          [`${prefixClass}-treenode-loading`]: loading,\n\n          'drag-over': !disabled && dragOver,\n          'drag-over-gap-top': !disabled && dragOverGapTop,\n          'drag-over-gap-bottom': !disabled && dragOverGapBottom,\n          'filter-node': filterTreeNode && filterTreeNode(this),\n        })}\n        style={style}\n        role=\"treeitem\"\n        onDragEnter={draggable ? this.onDragEnter : undefined}\n        onDragOver={draggable ? this.onDragOver : undefined}\n        onDragLeave={draggable ? this.onDragLeave : undefined}\n        onDrop={draggable ? this.onDrop.bind(this) : undefined}\n        onDragEnd={draggable ? onDragEnd : undefined}\n        {...dataAndAriaAttributeProps}\n      >\n        {expandable ? this.renderSwitcher() : null}\n        {this.renderSelector()}\n        {this.renderChildren()}\n      </li>\n    );\n  }\n}\n", "import React, { useState, useEffect } from 'react';\nimport { TwitterPicker } from 'react-color';\nimport { colorArrayToString, callbackOnKeyPress } from './utils';\nimport { PALETTE } from '../utils';\nimport Popover from './Popover';\n\n/**\n * Wrapper around a button element that supports asking for confirmation.\n * @param {object} props\n * @param {string} props.title The main button text.\n * @param {string} props.subtitle Smaller text on a line beneath the main text. Optional.\n * @param {function} props.onClick A \"clean up\" handler passed from the parent,\n * to alert the parent Popover component that it should close the popover after the button has\n * fired its handler.\n * @param {function} props.handler A function to call on button click (or after confirmation).\n * @param {string} props.handlerKey A key associated with the button, to support accessibility.\n * @param {boolean} props.confirm Does the user need to press the button again to confirm?\n * By default, false.\n * @param {boolean} props.visible The visibility state from the parent popover,\n * so that on visibility change, the button can clear its confirmation state.\n */\nfunction PopoverMenuListButton(props) {\n  const {\n    title, subtitle, onClick, handler, handlerKey, confirm,\n    visible,\n  } = props;\n\n  const [isConfirming, setIsConfirming] = useState(false);\n\n  useEffect(() => {\n    // Want to clear the \"confirming\",\n    // state if the user hides the popover.\n    setIsConfirming(false);\n  }, [visible]);\n\n  function handleOrRequireConfirm() {\n    if (!confirm || isConfirming) {\n      onClick();\n      handler();\n    } else {\n      setIsConfirming(true);\n    }\n  }\n\n  const titleWithConfirm = `${isConfirming ? 'Confirm ' : ''}${title}`;\n\n  return (\n    <button\n      title={titleWithConfirm}\n      type=\"button\"\n      onClick={handleOrRequireConfirm}\n      onKeyPress={e => callbackOnKeyPress(e, handlerKey, handleOrRequireConfirm)}\n    >{titleWithConfirm}\n      {subtitle && (<><br /><span className=\"small\">{subtitle}</span></>)}\n    </button>\n  );\n}\n\n/**\n * Helper component to create a list of buttons for the body of a popover.\n * If the color, setColor, and palette props are provided then a color picker\n * will be rendered at the top of the button list.\n * @param {object} props\n * @param {object[]} props.menuConfig The list of button definition objects.\n * `{ title, subtitle, confirm, handler, handlerKey }`\n * @param {function} props.onClick A \"clean up\" handler passed from the parent,\n * to alert the parent Popover component that it should close the popover after the button has\n * fired its handler.\n * @param {number[]} props.color The current color. Optional.\n * @param {string} props.palette The color palette for the color picker. Optional.\n * @param {boolean} props.setColor The handler to call when a color has been selected. Optional.\n * @param {boolean} props.visible The visibility state from the parent popover,\n * so that on visibility change, buttons can clear confirmation states.\n */\nfunction PopoverMenuList(props) {\n  const {\n    menuConfig,\n    onClick,\n    color = null,\n    palette = null,\n    setColor = null,\n    visible,\n  } = props;\n\n  function handleColorChange({ rgb }) {\n    if (rgb && setColor) {\n      setColor([rgb.r, rgb.g, rgb.b]);\n    }\n  }\n\n  const defaultPalette = palette\n    ? palette.map(colorArrayToString)\n    : PALETTE.concat([[255, 255, 255], [128, 128, 128], [0, 0, 0]]).map(colorArrayToString);\n\n  return (\n    <div>\n      {color && setColor && defaultPalette && (\n        <TwitterPicker\n          className=\"popover-menu-color\"\n          disableAlpha\n          width={108}\n          triangle=\"hide\"\n          colors={defaultPalette}\n          color={colorArrayToString(color)}\n          onChangeComplete={handleColorChange}\n        />\n      )}\n      <ul className=\"popover-menu-list\">\n        {menuConfig.map(item => (\n          <li key={item.title + item.subtitle}>\n            <PopoverMenuListButton\n              {...item}\n              onClick={onClick}\n              visible={visible}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\n/**\n * Helper component to create a popover component with a list of buttons.\n * If the color, setColor, and palette props are provided then a color picker\n * will be rendered at the top of the button list.\n * @param {object} props\n * @param {object[]} props.menuConfig The list of button definition objects.\n * `{ title, subtitle, confirm, handler, handlerKey }`\n * @param {string} placement Where to place the popover (top, bottom, left, right).\n * @param {number[]} props.color The current color. Optional.\n * @param {string} props.palette The color palette for the color picker. Optional.\n * @param {boolean} props.setColor The handler to call when a color has been selected. Optional.\n * @param {Element|React.Component} props.children Children to render,\n * which will trigger the popover on click.\n */\nexport default function PopoverMenu(props) {\n  const {\n    menuConfig, placement, children,\n    color = null, setColor = null, palette = null,\n  } = props;\n\n  const [visible, setVisible] = useState(false);\n\n  return (\n    <Popover\n      content={(\n        <PopoverMenuList\n          menuConfig={menuConfig}\n          onClick={() => setVisible(false)}\n          color={color}\n          setColor={setColor}\n          palette={palette}\n          visible={visible}\n        />\n)}\n      placement={placement}\n      visible={visible}\n      onVisibleChange={setVisible}\n    >\n      {children}\n    </Popover>\n  );\n}\n", "import React from 'react';\nimport HelpTooltip from './HelpTooltip';\n\n/**\n * This is a wrapper around the HelpTooltip component, to style it as a popover,\n * and change the trigger to \"click\" rather than \"hover\".\n * @param {*} props Props are passed through to the HelpTooltip component.\n */\nexport default function Popover(props) {\n  return (\n    <HelpTooltip {...props} />\n  );\n}\n\nPopover.defaultProps = {\n  overlayClassName: 'popover',\n  placement: 'top',\n  trigger: 'click',\n  mouseEnterDelay: 0,\n  mouseLeaveDelay: 0,\n};\n", "import React, { useRef } from 'react';\nimport RcTooltip from 'rc-tooltip';\nimport { useVitessceContainer } from '../hooks';\n\n/**\n * This is a small wrapper around the Tooltip component from the rc-tooltip library,\n * which is required to be able to apply theme styles to the tooltip.\n * The default `getTooltipContainer` function used by rc-tooltip\n * just returns `document.body` (see https://github.com/react-component/tooltip#props),\n * We want theme styles to be applied relative to the closest `.vitessce-container`\n * ancestor element.\n * https://github.com/vitessce/vitessce/pull/494#discussion_r395957914\n * @param {object} props Props are passed through to the <RcTooltip/> from the library.\n */\nexport default function HelpTooltip(props) {\n  const { title, content, overlayClassName } = props;\n  const spanRef = useRef();\n  const getTooltipContainer = useVitessceContainer(spanRef);\n\n  const overlay = title || content;\n\n  return (\n    <>\n      <span ref={spanRef} />\n      <RcTooltip\n        getTooltipContainer={getTooltipContainer}\n        overlayClassName={overlayClassName}\n        overlay={overlay}\n        {...props}\n      />\n    </>\n  );\n}\n\nHelpTooltip.defaultProps = {\n  overlayClassName: 'help-tooltip',\n  placement: 'top',\n  trigger: 'hover',\n  mouseEnterDelay: 0.2,\n  mouseLeaveDelay: 0,\n};\n", "import * as React from \"react\";\n\nfunction SvgMenu(props) {\n  return <svg width={24} height={24} viewBox=\"0 0 24 24\" {...props}><path d=\"M12 18c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3z\" /></svg>;\n}\n\nexport const ReactComponent = SvgMenu;", "import React, { useCallback } from 'react';\nimport PopoverMenu from './PopoverMenu';\nimport {\n  handleImportJSON,\n  handleImportTabular,\n} from './io';\nimport {\n  MIME_TYPE_JSON,\n  MIME_TYPE_TABULAR,\n} from './constants';\n\nimport { ReactComponent as SetUnionSVG } from '../../assets/sets/union.svg';\nimport { ReactComponent as SetIntersectionSVG } from '../../assets/sets/intersection.svg';\nimport { ReactComponent as SetComplementSVG } from '../../assets/sets/complement.svg';\n\n/**\n * A plus button for creating or importing set hierarchies.\n * @param {object} props\n * @param {string} props.datatype The data type to validate imported hierarchies against.\n * @param {function} props.onError A callback to pass error message strings.\n * @param {function} props.onImportTree A callback to pass successfully-validated tree objects.\n * @param {function} props.onCreateLevelZeroNode A callback to create a new empty\n * level zero node.\n * @param {boolean} props.importable Is importing allowed?\n * If not, the import button will not be rendered.\n * @param {boolean} props.editable Is editing allowed?\n * If not, the create button will not be rendered.\n */\nexport function PlusButton(props) {\n  const {\n    datatype, onError, onImportTree, onCreateLevelZeroNode,\n    importable, editable,\n  } = props;\n\n  /**\n   * Import a file, then process the imported data via the supplied handler function.\n   * @param {Function} importHandler The function to process the imported data.\n   * @param {string} mimeType The accepted mime type for the file upload input.\n   * @returns {Function} An import function corresponding to the supplied parameters.\n   */\n  const onImport = useCallback((importHandler, mimeType) => () => {\n    const uploadInputNode = document.createElement('input');\n    uploadInputNode.setAttribute('type', 'file');\n    uploadInputNode.setAttribute('accept', mimeType);\n    document.body.appendChild(uploadInputNode); // required for firefox\n    uploadInputNode.click();\n    uploadInputNode.addEventListener('change', (event) => {\n      if (!(window.File && window.FileReader && window.FileList && window.Blob)) {\n        onError('Local file reading APIs are not fully supported in this browser.');\n        return;\n      }\n      const { files } = event.target;\n      if (!files || files.length !== 1) {\n        onError('Incorrect number of files selected.');\n        return;\n      }\n      const reader = new FileReader();\n      reader.addEventListener('load', () => {\n        const { result } = reader;\n        try {\n          const treeToImport = importHandler(result, datatype);\n          onError(false); // Clear any previous import error.\n          onImportTree(treeToImport);\n        } catch (e) {\n          onError(e.message);\n        }\n      }, false);\n      reader.readAsText(files[0]);\n    });\n    uploadInputNode.remove();\n  }, [datatype, onError, onImportTree]);\n\n  const menuConfig = [\n    ...(editable ? [\n      {\n        title: 'Create hierarchy',\n        handler: onCreateLevelZeroNode,\n        handlerKey: 'n',\n      },\n    ] : []),\n    ...(importable ? [\n      {\n        title: 'Import hierarchy',\n        subtitle: '(from CSV file)',\n        handler: onImport(handleImportTabular, MIME_TYPE_TABULAR),\n        handlerKey: 'c',\n      },\n      {\n        title: 'Import hierarchy',\n        subtitle: '(from JSON file)',\n        handler: onImport(handleImportJSON, MIME_TYPE_JSON),\n        handlerKey: 'j',\n      },\n    ] : []),\n  ];\n\n  return (menuConfig.length > 0 ? (\n    <PopoverMenu\n      menuConfig={menuConfig}\n    >\n      <button className=\"plus-button\" type=\"submit\">+</button>\n    </PopoverMenu>\n  ) : null);\n}\n\n/**\n * Set operations buttons (union, intersection, complement)\n * and a view checked sets button.\n * @param {object} props\n * @param {function} props.onUnion A callback for the union button.\n * @param {function} props.onIntersection A callback for the intersection button.\n * @param {function} props.onComplement A callback for the complement button.\n * @param {boolean} props.operatable Are set operations allowed?\n * If not, the union, intersection, and complement buttons will not be rendered.\n */\nexport function SetOperationButtons(props) {\n  const {\n    onUnion,\n    onIntersection,\n    onComplement,\n    operatable,\n    hasCheckedSetsToUnion,\n    hasCheckedSetsToIntersect,\n    hasCheckedSetsToComplement,\n  } = props;\n\n  return (\n    <>\n      {operatable && (\n        <>\n          <button\n            onClick={onUnion}\n            title=\"New set from union of checked sets\"\n            type=\"submit\"\n            disabled={!hasCheckedSetsToUnion}\n          >\n            <SetUnionSVG />\n          </button>\n          <button\n            onClick={onIntersection}\n            title=\"New set from intersection of checked sets\"\n            type=\"submit\"\n            disabled={!hasCheckedSetsToIntersect}\n          >\n            <SetIntersectionSVG />\n          </button>\n          <button\n            onClick={onComplement}\n            title=\"New set from complement of checked sets\"\n            type=\"submit\"\n            disabled={!hasCheckedSetsToComplement}\n          >\n            <SetComplementSVG />\n          </button>\n        </>\n      )}\n    </>\n  );\n}\n", "import * as React from \"react\";\n\nfunction SvgUnion(props) {\n  return <svg viewBox=\"0 0 16.433999 10.234\" height={12} width={18} {...props}><g transform=\"translate(0.117,-2.883)\"><path d=\"m 11.467471,11.811278 c 0.198237,-0.322177 0.508,-1.011333 0.653661,-1.454255 0.659343,-2.0049141 0.44323,-4.2620847 -0.577734,-6.0340822 l -0.168844,-0.2930481 0.105744,0.017887 c 0.759902,0.1285441 1.368762,0.3699553 1.856675,0.7361658 1.988296,1.4923476 2.192477,4.3353549 0.434717,6.0529895 -0.641216,0.626581 -1.299647,0.94683 -2.294136,1.115833 l -0.108488,0.01844 z M 4.3162122,11.919169 C 1.9278944,11.487872 0.46692382,9.0323123 1.234873,6.7401372 1.5621727,5.763213 2.2610593,4.9489746 3.1840041,4.4693005 3.5978035,4.2542401 3.9427842,4.145371 4.5197023,4.0477802 L 4.6254464,4.0298927 4.4571836,4.3223069 C 3.4332707,6.1017061 3.2180432,8.3476022 3.878868,10.357023 c 0.1458466,0.443487 0.4554716,1.132155 0.6542959,1.455285 0.054471,0.08853 0.087814,0.159599 0.074096,0.157937 -0.013718,-0.0017 -0.1446898,-0.02465 -0.2910477,-0.05108 z M 5.0000001,3 C 2.2,3 0,5.2 0,8 c 0,2.8 2.2,5 5.0000001,5 0.6,0 1.1,-0.1 1.6,-0.3 C 5.3000001,11.6 4.5,9.7999998 4.5,8 4.5,6.2 5.3000001,4.5 6.6000001,3.3 c -0.5,-0.2 -1,-0.3 -1.6,-0.3 z M 4.65,4.02 C 3.92,5.17 3.51,6.54 3.51,8 c 0,1.4599998 0.42,2.83 1.14,3.98 C 2.61,11.8 1.01,10.08 1.01,8 1.01,5.92 2.61,4.2 4.65,4.02 Z M 8,4 C 6.8,4.9 6,6.4 6,8 6,9.6 6.8,11.1 8,12 9.2,11.1 10,9.7 10,8 10,6.3 9.2,4.9 8,4 Z m 3,-1 c 2.8,0 5,2.2 5,5 0,2.8 -2.2,5 -5,5 C 10.4,13 9.9,12.9 9.4,12.7 10.7,11.6 11.5,9.8 11.5,8 11.5,6.2 10.7,4.5 9.4,3.3 9.9,3.1 10.4,3 11,3 Z m 0.35,1.02 c 0.73,1.15 1.14,2.52 1.14,3.98 0,1.46 -0.42,2.83 -1.14,3.98 2.04,-0.18 3.64,-1.9 3.64,-3.98 0,-2.08 -1.6,-3.8 -3.64,-3.98 z\" style={{\n        strokeWidth: 0.234,\n        strokeMiterlimit: 4,\n        strokeDasharray: \"none\",\n        strokeOpacity: 1\n      }} /></g></svg>;\n}\n\nexport const ReactComponent = SvgUnion;", "import * as React from \"react\";\n\nfunction SvgIntersection(props) {\n  return <svg width={18} height={12} viewBox=\"0 0 16 10\" {...props}><g transform=\"translate(0,-3)\"><path d=\"M 5.0000001,3 C 2.2,3 0,5.2 0,8 c 0,2.8 2.2,5 5.0000001,5 0.6,0 1.1,-0.1 1.6,-0.3 C 5.3000001,11.6 4.5,9.7999998 4.5,8 4.5,6.2 5.3000001,4.5 6.6000001,3.3 c -0.5,-0.2 -1,-0.3 -1.6,-0.3 z M 4.65,4.02 C 3.92,5.17 3.51,6.54 3.51,8 c 0,1.4599998 0.42,2.83 1.14,3.98 C 2.61,11.8 1.01,10.08 1.01,8 1.01,5.92 2.61,4.2 4.65,4.02 Z M 8,4 C 6.8,4.9 6,6.4 6,8 6,9.6 6.8,11.1 8,12 9.2,11.1 10,9.7 10,8 10,6.3 9.2,4.9 8,4 Z m 3,-1 c 2.8,0 5,2.2 5,5 0,2.8 -2.2,5 -5,5 C 10.4,13 9.9,12.9 9.4,12.7 10.7,11.6 11.5,9.8 11.5,8 11.5,6.2 10.7,4.5 9.4,3.3 9.9,3.1 10.4,3 11,3 Z m 0.35,1.02 c 0.73,1.15 1.14,2.52 1.14,3.98 0,1.46 -0.42,2.83 -1.14,3.98 2.04,-0.18 3.64,-1.9 3.64,-3.98 0,-2.08 -1.6,-3.8 -3.64,-3.98 z\" style={{\n        strokeWidth: 0.234,\n        strokeMiterlimit: 4,\n        strokeDasharray: \"none\",\n        strokeOpacity: 1\n      }} /></g></svg>;\n}\n\nexport const ReactComponent = SvgIntersection;", "import * as React from \"react\";\n\nfunction SvgComplement(props) {\n  return <svg id=\"svg14\" viewBox=\"0 0 25.3804963846 16\" height={16} width={25.3804963846} {...props}><defs><mask id=\"union-mask\" x={0} y={0} width={25.3804963846} height={16}><rect x=\"5%\" width=\"90%\" height=\"100%\" fill=\"white\" /><g transform=\"translate(4.69,0)\"><path d=\"m 11.467471,11.811278 c 0.198237,-0.322177 0.508,-1.011333 0.653661,-1.454255 0.659343,-2.0049141 0.44323,-4.2620847 -0.577734,-6.0340822 l -0.168844,-0.2930481 0.105744,0.017887 c 0.759902,0.1285441 1.368762,0.3699553 1.856675,0.7361658 1.988296,1.4923476 2.192477,4.3353549 0.434717,6.0529895 -0.641216,0.626581 -1.299647,0.94683 -2.294136,1.115833 l -0.108488,0.01844 z M 4.3162122,11.919169 C 1.9278944,11.487872 0.46692382,9.0323123 1.234873,6.7401372 1.5621727,5.763213 2.2610593,4.9489746 3.1840041,4.4693005 3.5978035,4.2542401 3.9427842,4.145371 4.5197023,4.0477802 L 4.6254464,4.0298927 4.4571836,4.3223069 C 3.4332707,6.1017061 3.2180432,8.3476022 3.878868,10.357023 c 0.1458466,0.443487 0.4554716,1.132155 0.6542959,1.455285 0.054471,0.08853 0.087814,0.159599 0.074096,0.157937 -0.013718,-0.0017 -0.1446898,-0.02465 -0.2910477,-0.05108 z M 5.0000001,3 C 2.2,3 0,5.2 0,8 c 0,2.8 2.2,5 5.0000001,5 0.6,0 1.1,-0.1 1.6,-0.3 C 5.3000001,11.6 4.5,9.7999998 4.5,8 4.5,6.2 5.3000001,4.5 6.6000001,3.3 c -0.5,-0.2 -1,-0.3 -1.6,-0.3 z M 4.65,4.02 C 3.92,5.17 3.51,6.54 3.51,8 c 0,1.4599998 0.42,2.83 1.14,3.98 C 2.61,11.8 1.01,10.08 1.01,8 1.01,5.92 2.61,4.2 4.65,4.02 Z M 8,4 C 6.8,4.9 6,6.4 6,8 6,9.6 6.8,11.1 8,12 9.2,11.1 10,9.7 10,8 10,6.3 9.2,4.9 8,4 Z m 3,-1 c 2.8,0 5,2.2 5,5 0,2.8 -2.2,5 -5,5 C 10.4,13 9.9,12.9 9.4,12.7 10.7,11.6 11.5,9.8 11.5,8 11.5,6.2 10.7,4.5 9.4,3.3 9.9,3.1 10.4,3 11,3 Z m 0.35,1.02 c 0.73,1.15 1.14,2.52 1.14,3.98 0,1.46 -0.42,2.83 -1.14,3.98 2.04,-0.18 3.64,-1.9 3.64,-3.98 0,-2.08 -1.6,-3.8 -3.64,-3.98 z\" style={{\n            strokeWidth: 0.234,\n            strokeMiterlimit: 4,\n            strokeDasharray: \"none\",\n            strokeOpacity: 1\n          }} fill=\"black\" /></g></mask></defs><g><rect x={0} y={0} width={25.3804963846} height={16} mask=\"url(#union-mask)\" /></g></svg>;\n}\n\nexport const ReactComponent = SvgComplement;", "/* eslint-disable dot-notation */\nimport React, {\n  useEffect, useCallback, useRef, forwardRef,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TitleInfo from '../TitleInfo';\nimport RasterChannelController from './RasterChannelController';\nimport BitmaskChannelController from './BitmaskChannelController';\nimport VectorLayerController from './VectorLayerController';\nimport LayerController from './LayerController';\nimport ImageAddButton from './ImageAddButton';\nimport { useReady, useClosestVitessceContainerSize, useWindowDimensions } from '../hooks';\nimport { useCellsData, useMoleculesData, useRasterData } from '../data-hooks';\nimport {\n  useCoordination,\n  useLoaders,\n  useAuxiliaryCoordination,\n  useComponentLayout,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { initializeLayerChannels } from '../spatial/utils';\nimport { DEFAULT_RASTER_LAYER_PROPS } from '../spatial/constants';\n\nconst LAYER_CONTROLLER_DATA_TYPES = ['raster'];\n\n// LayerController is memoized to prevent updates from prop changes that\n// are caused by view state updates i.e zooming and panning within\n// the actual Spatial component.  Re-rendering this component is very\n// expensive so we have to be careful with props in this file in general.\nconst LayerControllerMemoized = React.memo(\n  forwardRef((props, ref) => {\n    const {\n      title,\n      removeGridComponent,\n      theme,\n      isReady,\n      moleculesLayer,\n      dataset,\n      setMoleculesLayer,\n      cellsLayer,\n      canShowCellVecmask,\n      setCellsLayer,\n      rasterLayers,\n      imageLayerLoaders,\n      imageLayerMeta,\n      rasterLayersCallbacks,\n      setRasterLayersCallbacks,\n      areLoadingRasterChannnels,\n      setAreLoadingRasterChannnels,\n      handleRasterLayerChange,\n      handleRasterLayerRemove,\n      disable3d,\n      globalDisable3d,\n      disableChannelsIfRgbDetected,\n      layerIs3DIndex,\n      setZoom,\n      setTargetX,\n      setTargetY,\n      setTargetZ,\n      setRotationX,\n      setRotationOrbit,\n      componentHeight,\n      componentWidth,\n      spatialLayout,\n      handleImageAdd,\n      enableLayerButtonsWithOneLayer,\n    } = props;\n    const shouldShowImageLayerButton = Boolean(\n      enableLayerButtonsWithOneLayer || imageLayerLoaders?.length > 1,\n    );\n    return (\n      <TitleInfo\n        title={title}\n        isScroll\n        removeGridComponent={removeGridComponent}\n        theme={theme}\n        isReady={isReady}\n      >\n        <div className=\"layer-controller-container\" ref={ref}>\n          {moleculesLayer && (\n            <VectorLayerController\n              key={`${dataset}-molecules`}\n              label=\"Molecules\"\n              layerType=\"molecules\"\n              layer={moleculesLayer}\n              handleLayerChange={setMoleculesLayer}\n            />\n          )}\n          {cellsLayer && canShowCellVecmask && (\n            <VectorLayerController\n              key={`${dataset}-cells`}\n              label=\"Cell Segmentations\"\n              layerType=\"cells\"\n              layer={cellsLayer}\n              handleLayerChange={setCellsLayer}\n            />\n          )}\n          {rasterLayers\n            && rasterLayers.map((layer, i) => {\n              const { index } = layer;\n              const loader = imageLayerLoaders[index];\n              const layerMeta = imageLayerMeta[index];\n              // Could also be bitmask at the moment.\n              const isRaster = !layerMeta?.metadata?.isBitmask;\n              const ChannelController = isRaster\n                ? RasterChannelController\n                : BitmaskChannelController;\n              // Set up the call back mechanism so that each layer manages\n              // callbacks/loading state for itself and its channels.\n              const setRasterLayerCallback = (cb) => {\n                const newRasterLayersCallbacks = [\n                  ...(rasterLayersCallbacks || []),\n                ];\n                newRasterLayersCallbacks[i] = cb;\n                setRasterLayersCallbacks(newRasterLayersCallbacks);\n              };\n              const areLayerChannelsLoading = (areLoadingRasterChannnels || [])[i] || [];\n              const setAreLayerChannelsLoading = (v) => {\n                const newAreLoadingRasterChannnels = [\n                  ...(areLoadingRasterChannnels || []),\n                ];\n                newAreLoadingRasterChannnels[i] = v;\n                setAreLoadingRasterChannnels(newAreLoadingRasterChannnels);\n              };\n              return loader && layerMeta ? (\n                <Grid\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={`${dataset}-raster-${index}-${i}`}\n                  item\n                  style={{ marginTop: '10px' }}\n                >\n                  <LayerController\n                    name={layerMeta.name}\n                    layer={layer}\n                    loader={loader}\n                    theme={theme}\n                    handleLayerChange={v => handleRasterLayerChange(v, i)}\n                    handleLayerRemove={() => handleRasterLayerRemove(i)}\n                    ChannelController={ChannelController}\n                    shouldShowTransparentColor={isRaster}\n                    shouldShowDomain={isRaster}\n                    shouldShowColormap={isRaster}\n                    // Disable 3D if given explicit instructions to do so\n                    // or if another layer is using 3D mode.\n                    disable3d={\n                      globalDisable3d\n                      || (disable3d || []).indexOf(layerMeta.name) >= 0\n                      || (typeof layerIs3DIndex === 'number'\n                        && layerIs3DIndex !== -1\n                        && layerIs3DIndex !== i)\n                    }\n                    disabled={\n                      typeof layerIs3DIndex === 'number'\n                      && layerIs3DIndex !== -1\n                      && layerIs3DIndex !== i\n                    }\n                    disableChannelsIfRgbDetected={disableChannelsIfRgbDetected}\n                    rasterLayersCallbacks={rasterLayersCallbacks}\n                    setRasterLayerCallback={setRasterLayerCallback}\n                    setViewState={({\n                      zoom: newZoom,\n                      target,\n                      rotationX: newRotationX,\n                      rotationOrbit: newRotationOrbit,\n                    }) => {\n                      setZoom(newZoom);\n                      setTargetX(target[0]);\n                      setTargetY(target[1]);\n                      setTargetZ(target[2]);\n                      setRotationX(newRotationX);\n                      setRotationOrbit(newRotationOrbit);\n                    }}\n                    setAreLayerChannelsLoading={setAreLayerChannelsLoading}\n                    areLayerChannelsLoading={areLayerChannelsLoading}\n                    spatialHeight={(componentHeight * (spatialLayout ? spatialLayout.h : 1)) / 12}\n                    spatialWidth={(componentWidth * (spatialLayout ? spatialLayout.w : 1)) / 12}\n                    shouldShowRemoveLayerButton={shouldShowImageLayerButton}\n                  />\n                </Grid>\n              ) : null;\n            })}\n          {shouldShowImageLayerButton\n            ? (\n              <Grid item>\n                <ImageAddButton\n                  imageOptions={imageLayerMeta}\n                  handleImageAdd={handleImageAdd}\n                />\n              </Grid>\n            ) : null}\n        </div>\n      </TitleInfo>\n    );\n  }),\n);\n\n/**\n * A subscriber component for the spatial layer controller.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n * @param {Object} props.disable3d Which layers should have 3D disabled (from `raster.json` names).\n * @param {boolean} props.globalDisable3d Disable 3D for all layers. Overrides the `disable3d` prop.\n * @param {boolean} props.disableChannelsIfRgbDetected Disable channel controls if an\n * RGB image is detected i.e 3 channel 8 bit.\n * @param {boolean} props.enableLayerButtonsWithOneLayer If there is only one layer,\n * show the the layer add/remove buttons.\n */\nfunction LayerControllerSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'Spatial Layers',\n    disable3d,\n    globalDisable3d,\n    disableChannelsIfRgbDetected,\n    enableLayerButtonsWithOneLayer,\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [\n    {\n      dataset,\n      spatialRasterLayers: rasterLayers,\n      spatialCellsLayer: cellsLayer,\n      spatialMoleculesLayer: moleculesLayer,\n    },\n    {\n      setSpatialRasterLayers: setRasterLayers,\n      setSpatialCellsLayer: setCellsLayer,\n      setSpatialMoleculesLayer: setMoleculesLayer,\n      setSpatialTargetX: setTargetX,\n      setSpatialTargetY: setTargetY,\n      setSpatialTargetZ: setTargetZ,\n      setSpatialRotationX: setRotationX,\n      setSpatialRotationOrbit: setRotationOrbit,\n      setSpatialZoom: setZoom,\n    },\n  ] = useCoordination(\n    COMPONENT_COORDINATION_TYPES.layerController,\n    coordinationScopes,\n  );\n\n  const [\n    {\n      rasterLayersCallbacks,\n      areLoadingRasterChannnels,\n    },\n    {\n      setRasterLayersCallbacks,\n      setAreLoadingRasterChannnels,\n    },\n  ] = useAuxiliaryCoordination(\n    COMPONENT_COORDINATION_TYPES.layerController,\n    coordinationScopes,\n  );\n  // Spatial layout + window size is needed for the \"re-center\" button to work properly.\n  // Dimensions of the Spatial component can be inferred and used for resetting view state to\n  // a nice, centered view.\n  const [spatialLayout] = useComponentLayout('spatial', ['spatialRasterLayers'], coordinationScopes);\n  const layerControllerRef = useRef();\n  const [componentWidth, componentHeight] = useClosestVitessceContainerSize(layerControllerRef);\n  const { height: windowHeight, width: windowWidth } = useWindowDimensions();\n\n  const [\n    isReady,\n    setItemIsReady,\n    setItemIsNotReady, // eslint-disable-line no-unused-vars\n    resetReadyItems,\n  ] = useReady(\n    LAYER_CONTROLLER_DATA_TYPES,\n  );\n\n  // Reset loader progress when the dataset has changed.\n  useEffect(() => {\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  // eslint-disable-next-line no-unused-vars\n  const [raster, imageLayerLoaders, imageLayerMeta] = useRasterData(\n    loaders, dataset, setItemIsReady, () => { }, false,\n    { setSpatialRasterLayers: setRasterLayers },\n    { spatialRasterLayers: rasterLayers },\n  );\n\n  useCellsData(\n    loaders, dataset, setItemIsReady, () => {}, false,\n    { setSpatialCellsLayer: setCellsLayer },\n    { spatialCellsLayer: cellsLayer },\n  );\n  useMoleculesData(\n    loaders, dataset, setItemIsReady, () => {}, false,\n    { setSpatialMoleculesLayer: setMoleculesLayer },\n    { spatialMoleculesLayer: moleculesLayer },\n  );\n\n  // useCallback prevents new functions from propogating\n  // changes to the underlying component.\n  const handleImageAdd = useCallback(async (index) => {\n    const loader = imageLayerLoaders[index];\n    const newChannels = await initializeLayerChannels(\n      loader,\n      (rasterLayers[index] || {}).use3d,\n    );\n    const newLayer = {\n      index,\n      modelMatrix: imageLayerMeta[index]?.metadata?.transform?.matrix,\n      ...DEFAULT_RASTER_LAYER_PROPS,\n      channels: newChannels,\n      type: imageLayerMeta[index]?.metadata?.isBitmask ? 'bitmask' : 'raster',\n    };\n    const newLayers = [...rasterLayers, newLayer];\n    setRasterLayers(newLayers);\n  }, [imageLayerLoaders, imageLayerMeta, rasterLayers, setRasterLayers]);\n\n  const handleRasterLayerChange = useCallback((newLayer, i) => {\n    const newLayers = [...rasterLayers];\n    newLayers[i] = newLayer;\n    setRasterLayers(newLayers);\n  }, [rasterLayers, setRasterLayers]);\n\n  const handleRasterLayerRemove = useCallback((i) => {\n    const newLayers = [...rasterLayers];\n    newLayers.splice(i, 1);\n    setRasterLayers(newLayers);\n  }, [rasterLayers, setRasterLayers]);\n\n  const hasNoBitmask = (\n    imageLayerMeta.length ? imageLayerMeta : [{ metadata: { isBitmask: true } }]\n  ).every(l => !l?.metadata?.isBitmask);\n  // Only want to show vector cells controller if there is no bitmask\n  const canShowCellVecmask = hasNoBitmask;\n  const layerIs3DIndex = rasterLayers?.findIndex && rasterLayers.findIndex(layer => layer.use3d);\n  return (\n    <LayerControllerMemoized\n      ref={layerControllerRef}\n      title={title}\n      removeGridComponent={removeGridComponent}\n      theme={theme}\n      isReady={isReady}\n      moleculesLayer={moleculesLayer}\n      dataset={dataset}\n      setMoleculesLayer={setMoleculesLayer}\n      cellsLayer={cellsLayer}\n      canShowCellVecmask={canShowCellVecmask}\n      setCellsLayer={setCellsLayer}\n      rasterLayers={rasterLayers}\n      imageLayerLoaders={imageLayerLoaders}\n      imageLayerMeta={imageLayerMeta}\n      rasterLayersCallbacks={rasterLayersCallbacks}\n      setRasterLayersCallbacks={setRasterLayersCallbacks}\n      areLoadingRasterChannnels={areLoadingRasterChannnels}\n      setAreLoadingRasterChannnels={setAreLoadingRasterChannnels}\n      handleRasterLayerChange={handleRasterLayerChange}\n      handleRasterLayerRemove={handleRasterLayerRemove}\n      disable3d={disable3d}\n      globalDisable3d={globalDisable3d}\n      layerIs3DIndex={layerIs3DIndex}\n      disableChannelsIfRgbDetected={disableChannelsIfRgbDetected}\n      enableLayerButtonsWithOneLayer={enableLayerButtonsWithOneLayer}\n      setZoom={setZoom}\n      setTargetX={setTargetX}\n      setTargetY={setTargetY}\n      setTargetZ={setTargetZ}\n      setRotationX={setRotationX}\n      setRotationOrbit={setRotationOrbit}\n      // Fall back to window for height and width.\n      componentHeight={componentHeight || windowHeight}\n      componentWidth={componentWidth || windowWidth}\n      spatialLayout={spatialLayout}\n      handleImageAdd={handleImageAdd}\n    />\n  );\n}\n\nexport default LayerControllerSubscriber;\n", "import React, { useCallback, useState, useEffect } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\n\nimport ChannelOptions from './ChannelOptions';\nimport { DOMAINS } from './constants';\nimport { getSourceFromLoader } from '../../utils';\nimport { getMultiSelectionStats } from './utils';\nimport {\n  ChannelSelectionDropdown,\n  ChannelVisibilityCheckbox,\n} from './shared-channel-controls';\n\n// Returns an rgb string for display, and changes the color (arr)\n// to use a grey for light theme + white color or if the colormap is on.\nexport const toRgbUIString = (on, arr, theme) => {\n  const color = on || (theme === 'light' && arr.every(i => i === 255))\n    ? [220, 220, 220]\n    : arr;\n  return `rgb(${color})`;\n};\n\nfunction abbreviateNumber(value) {\n  // Return an abbreviated representation of value, in 5 characters or less.\n\n  const maxLength = 5;\n  let maxNaiveDigits = maxLength;\n\n  /* eslint-disable no-plusplus */\n  if (!Number.isInteger(value)) {\n    --maxNaiveDigits;\n  } // Wasted on \".\"\n  if (value < 1) {\n    --maxNaiveDigits;\n  } // Wasted on \"0.\"\n  /* eslint-disable no-plusplus */\n\n  const naive = Intl.NumberFormat('en-US', {\n    maximumSignificantDigits: maxNaiveDigits,\n    useGrouping: false,\n  }).format(value);\n  if (naive.length <= maxLength) return naive;\n\n  // \"e+9\" consumes 3 characters, so if we even had two significant digits,\n  // it would take take us to six characters, including the decimal point.\n  return value.toExponential(0);\n}\n\n/**\n * Slider for controlling current colormap.\n * @prop {string} color Current color for this channel.\n * @prop {arry} slider Current value of the slider.\n * @prop {function} handleChange Callback for each slider change.\n * @prop {array} domain Current max/min allowable slider values.\n */\nfunction ChannelSlider({\n  color,\n  slider = [0, 0],\n  handleChange,\n  domain = [0, 0],\n  dtype,\n  disabled,\n}) {\n  const [min, max] = domain;\n  const handleChangeDebounced = useCallback(\n    debounce(handleChange, 3, { trailing: true }),\n    [handleChange],\n  );\n  const step = max - min < 500 && dtype === 'Float32' ? (max - min) / 500 : 1;\n  return (\n    <Slider\n      value={slider}\n      valueLabelFormat={abbreviateNumber}\n      onChange={(e, v) => handleChangeDebounced(v)}\n      valueLabelDisplay=\"auto\"\n      getAriaLabel={() => `${color}-${slider}`}\n      min={min}\n      max={max}\n      step={step}\n      orientation=\"horizontal\"\n      style={{ color, marginTop: '7px' }}\n      disabled={disabled}\n    />\n  );\n}\n\n/**\n * Controller for the handling the colormapping sliders.\n * @prop {boolean} visibility Whether or not this channel is \"on\"\n * @prop {array} slider Current slider range.\n * @prop {array} color Current color for this channel.\n * @prop {array} domain Current max/min for this channel.\n * @prop {string} dimName Name of the dimensions this slider controls (usually \"channel\").\n * @prop {boolean} colormapOn Whether or not the colormap (viridis, magma etc.) is on.\n * @prop {object} channelOptions All available options for this dimension (i.e channel names).\n * @prop {function} handlePropertyChange Callback for when a property (color, slider etc.) changes.\n * @prop {function} handleChannelRemove When a channel is removed, this is called.\n * @prop {function} handleIQRUpdate When the IQR button is clicked, this is called.\n * @prop {number} selectionIndex The current numeric index of the selection.\n */\nfunction RasterChannelController({\n  visibility = false,\n  slider,\n  color,\n  channels,\n  channelId,\n  domainType: newDomainType,\n  dimName,\n  theme,\n  loader,\n  colormapOn,\n  channelOptions,\n  handlePropertyChange,\n  handleChannelRemove,\n  handleIQRUpdate,\n  selectionIndex,\n  isLoading,\n  use3d: newUse3d,\n}) {\n  const { dtype } = getSourceFromLoader(loader);\n  const [domain, setDomain] = useState(null);\n  const [domainType, setDomainType] = useState(null);\n  const [use3d, setUse3d] = useState(null);\n  const [selection, setSelection] = useState([\n    { ...channels[channelId].selection },\n  ]);\n  const rgbColor = toRgbUIString(colormapOn, color, theme);\n\n  useEffect(() => {\n    // Use mounted to prevent state updates/re-renders after the component has been unmounted.\n    // All state updates should happen within the mounted check.\n    let mounted = true;\n    if (dtype && loader && channels) {\n      const selections = [{ ...channels[channelId].selection }];\n      let domains;\n      const hasDomainChanged = newDomainType !== domainType;\n      const has3dChanged = use3d !== newUse3d;\n      const hasSelectionChanged = !isEqual(selections, selection);\n      if (hasDomainChanged || hasSelectionChanged || has3dChanged) {\n        if (newDomainType === 'Full') {\n          domains = [DOMAINS[dtype]];\n          const [newDomain] = domains;\n          if (mounted) {\n            setDomain(newDomain);\n            setDomainType(newDomainType);\n            if (hasSelectionChanged) {\n              setSelection(selections);\n            }\n            if (has3dChanged) {\n              setUse3d(newUse3d);\n            }\n          }\n        } else {\n          getMultiSelectionStats({\n            loader: loader.data,\n            selections,\n            use3d: newUse3d,\n          }).then((stats) => {\n            // eslint-disable-next-line prefer-destructuring\n            domains = stats.domains;\n            const [newDomain] = domains;\n            if (mounted) {\n              setDomain(newDomain);\n              setDomainType(newDomainType);\n              if (hasSelectionChanged) {\n                setSelection(selections);\n              }\n              if (has3dChanged) {\n                setUse3d(newUse3d);\n              }\n            }\n          });\n        }\n      }\n    }\n    return () => {\n      mounted = false;\n    };\n  }, [\n    domainType,\n    channels,\n    channelId,\n    loader,\n    dtype,\n    newDomainType,\n    selection,\n    newUse3d,\n    use3d,\n  ]);\n  /* A valid selection is defined by an object where the keys are\n   *  the name of a dimension of the data, and the values are the\n   *  index of the image along that particular dimension.\n   *\n   *  Since we currently only support making a selection along one\n   *  addtional dimension (i.e. the dropdown just has channels or mz)\n   *  we have a helper function to create the selection.\n   *\n   *  e.g { channel: 2 } // channel dimension, third channel\n   */\n  const createSelection = index => ({ [dimName]: index });\n  return (\n    <Grid container direction=\"column\" m={1} justify=\"center\">\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item xs={10}>\n          <ChannelSelectionDropdown\n            handleChange={v => handlePropertyChange('selection', createSelection(v))\n            }\n            selectionIndex={selectionIndex}\n            channelOptions={channelOptions}\n            disabled={isLoading}\n          />\n        </Grid>\n        <Grid item xs={1} style={{ marginTop: '4px' }}>\n          <ChannelOptions\n            handlePropertyChange={handlePropertyChange}\n            handleChannelRemove={handleChannelRemove}\n            handleIQRUpdate={handleIQRUpdate}\n            disabled={isLoading}\n          />\n        </Grid>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item xs={2}>\n          <ChannelVisibilityCheckbox\n            color={rgbColor}\n            checked={visibility}\n            toggle={() => handlePropertyChange('visible', !visibility)}\n            disabled={isLoading}\n          />\n        </Grid>\n        <Grid item xs={9}>\n          <ChannelSlider\n            color={rgbColor}\n            slider={slider}\n            domain={domain || DOMAINS[dtype]}\n            dtype={dtype}\n            handleChange={v => handlePropertyChange('slider', v)}\n            disabled={isLoading}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default RasterChannelController;\n", "import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PopperMenu, MuiSpan } from '../shared-mui/components';\n\nimport ColorPalette from './ColorPalette';\n\nconst useStyles = makeStyles(() => ({\n  menuButton: {\n    backgroundColor: 'transparent',\n  },\n  colors: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n    paddingLeft: '2px',\n    paddingRight: '2px',\n  },\n}));\n\n/**\n * Dropdown for options for a channel on the three dots button.\n * @prop {function} handlePropertyChange Callback for changing property (color, IQR of sliders).\n * @prop {function} handleChannelRemove Callback for channel removal.\n * @prop {function} handleIQRUpdate Callback for IQR slider update.\n */\nfunction ChannelOptions({ handlePropertyChange, handleChannelRemove, handleIQRUpdate }) {\n  const [open, setOpen] = useState(false);\n\n  const classes = useStyles();\n\n  const handleColorSelect = (color) => {\n    handlePropertyChange('color', color);\n  };\n\n  const handleRemove = () => {\n    setOpen(false);\n    handleChannelRemove();\n  };\n\n  return (\n    <PopperMenu\n      open={open}\n      setOpen={setOpen}\n      buttonIcon={<MoreVertIcon fontSize=\"small\" />}\n      buttonClassName={classes.menuButton}\n    >\n      <MenuItem dense disableGutters onClick={handleRemove}>\n        <MuiSpan>Remove</MuiSpan>\n      </MenuItem>\n      <MenuItem dense disableGutters onClick={handleIQRUpdate}>\n        <MuiSpan>Use IQR</MuiSpan>\n      </MenuItem>\n      <MenuItem dense disableGutters className={classes.colors}>\n        <ColorPalette handleChange={handleColorSelect} />\n      </MenuItem>\n    </PopperMenu>\n  );\n}\n\nexport default ChannelOptions;\n", "import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport LensIcon from '@material-ui/icons/Lens';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport { VIEWER_PALETTE } from '../utils';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '70px',\n    height: '40px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  button: {\n    padding: '3px',\n    width: '16px',\n  },\n  icon: {\n    width: '17px',\n    height: '17px',\n    stroke: theme.palette.action.selected,\n    'stroke-width': '1px',\n  },\n}));\n\nconst ColorPalette = ({ handleChange }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container} aria-label=\"color-swatch\">\n      {VIEWER_PALETTE.map(color => (\n        <IconButton\n          className={classes.button}\n          key={color}\n          onClick={() => handleChange(color)}\n        >\n          <LensIcon\n            fontSize=\"small\"\n            style={{ color: `rgb(${color})` }}\n            className={classes.icon}\n          />\n        </IconButton>\n      ))}\n    </div>\n  );\n};\n\nexport default ColorPalette;\n", "import { DTYPE_VALUES } from '@hms-dbmi/viv';\n\nfunction getDomains() {\n  const domains = {};\n  const needMin = ['Int8', 'Int16', 'Int32'];\n  Object.keys(DTYPE_VALUES).forEach((dtype) => {\n    const { max } = DTYPE_VALUES[dtype];\n    const min = needMin.includes(dtype) ? -(max + 1) : 0;\n    domains[dtype] = [min, max];\n  });\n  return domains;\n}\n\nexport const DOMAINS = getDomains();\n", "import React from 'react';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport { useSelectStyles } from './styles';\n\n/**\n * Dropdown for selecting a channel.\n * @prop {function} handleChange Callback for each new selection.\n * @prop {array} channelOptions List of available selections, like ['DAPI', 'FITC', ...].\n * @prop {boolean} disabled Whether or not the component is disabled.\n * @prop {number} selectionIndex Current numeric index of a selection.\n */\nexport function ChannelSelectionDropdown({\n  handleChange,\n  disabled,\n  channelOptions,\n  selectionIndex,\n}) {\n  const classes = useSelectStyles();\n  return (\n    <Select\n      classes={{ root: classes.selectRoot }}\n      native\n      value={selectionIndex}\n      onChange={e => handleChange(Number(e.target.value))}\n    >\n      {channelOptions.map((opt, i) => (\n        <option disabled={disabled} key={opt} value={i}>\n          {opt}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\n/**\n * Checkbox for toggling on/off of a channel.\n * @prop {string} color Current color for this channel.\n * @prop {boolean} checked Whether or not this channel is \"on\".\n * @prop {boolean} disabled Whether or not the component is disabled.\n * @prop {function} toggle Callback for toggling on/off.\n */\nexport function ChannelVisibilityCheckbox({\n  color, checked, toggle, disabled,\n}) {\n  return (\n    <Checkbox\n      onChange={toggle}\n      checked={checked}\n      disabled={disabled}\n      style={{ color, '&$checked': { color } }}\n    />\n  );\n}\n", "import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\n\nexport const useSelectStyles = makeStyles(() => ({\n  selectRoot: {\n    padding: 0,\n    height: 'auto',\n    margin: '4px 0',\n  },\n}));\n\nexport const useOptionStyles = withStyles(theme => ({\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  span: {\n    width: '70px',\n    textAlign: 'center',\n    paddingLeft: '2px',\n    paddingRight: '2px',\n  },\n  colors: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n    paddingLeft: '2px',\n    paddingRight: '2px',\n  },\n  popper: {\n    zIndex: 4,\n  },\n}));\n\nconst sharedControllerStyles = {\n  width: '100%',\n  flexDirection: 'column',\n};\n\nexport const useControllerSectionStyles = makeStyles(() => ({\n  root: {\n    ...sharedControllerStyles,\n    padding: '0px 8px',\n  },\n}));\n\nexport const StyledExpansionPanelDetails = withStyles(() => ({\n  root: {\n    ...sharedControllerStyles,\n    padding: '8px 8px 24px 8px',\n  },\n}))(ExpansionPanelDetails);\n\nexport const StyledExpansionPanelSummary = withStyles(theme => ({\n  root: {\n    padding: '0px 8px',\n  },\n  content: {\n    margin: '4px 0px',\n    minWidth: '0px',\n  },\n  expanded: {\n    marginBottom: theme.spacing(-3),\n    top: theme.spacing(-1),\n  },\n  expandIcon: {\n    '&$expanded': {\n      top: theme.spacing(-1.3),\n    },\n  },\n}))(ExpansionPanelSummary);\n\nexport const StyledInputLabel = withStyles(() => ({\n  root: {\n    fontSize: '14px',\n  },\n}))(InputLabel);\n\nexport const OverflowEllipsisGrid = withStyles(() => ({\n  item: {\n    width: '100%',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  },\n}))(Grid);\n\nexport const StyledSelectionSlider = withStyles(() => ({\n  root: {\n    marginTop: '7px',\n  },\n  markActive: {\n    backgroundColor: 'rgba(128, 128, 128, 0.7)',\n  },\n}))(Slider);\n", "import React from 'react';\n\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport { ChannelSelectionDropdown, ChannelVisibilityCheckbox } from './shared-channel-controls';\n\n/**\n * Controller for the handling the bitmask channels.\n * @prop {boolean} visibility Whether or not this channel is \"on\"\n * @prop {string} dimName Name of the dimensions this slider controls (usually \"channel\").\n * @prop {object} channelOptions All available options for this dimension (i.e channel names).\n * @prop {function} handlePropertyChange Callback for when a property (color, slider etc.) changes.\n * @prop {function} handleChannelRemove When a channel is removed, this is called.\n * @prop {number} selectionIndex The current numeric index of the selection.\n * @prop {boolean} disableOptions Whether or not channel options are be disabled (default: false).\n */\nfunction BitmaskChannelController({\n  visibility = false,\n  dimName,\n  channelOptions,\n  handlePropertyChange,\n  handleChannelRemove,\n  selectionIndex,\n  disableOptions = false,\n}) {\n  /* A valid selection is defined by an object where the keys are\n  *  the name of a dimension of the data, and the values are the\n  *  index of the image along that particular dimension.\n  *\n  *  Since we currently only support making a selection along one\n  *  addtional dimension (i.e. the dropdown just has channels or mz)\n  *  we have a helper function to create the selection.\n  *\n  *  e.g { channel: 2 } // channel dimension, third channel\n  */\n  const createSelection = index => ({ [dimName]: index });\n  return (\n    <Grid container direction=\"row\" justify=\"space-between\">\n      <Grid item xs={2}>\n        <ChannelVisibilityCheckbox\n          color={[220, 220, 220]}\n          checked={visibility}\n          toggle={() => handlePropertyChange('visible', !visibility)}\n        />\n      </Grid>\n      <Grid item xs={9}>\n        <ChannelSelectionDropdown\n          handleChange={v => handlePropertyChange('selection', createSelection(v))}\n          selectionIndex={selectionIndex}\n          disableOptions={disableOptions}\n          channelOptions={channelOptions}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <IconButton onClick={handleChannelRemove} style={{ padding: '6px 6px 6px 0px' }}>\n          <RemoveCircleIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default BitmaskChannelController;\n", "import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { useControllerSectionStyles } from './styles';\n\nexport default function VectorLayerController(props) {\n  const {\n    label,\n    layer,\n    layerType,\n    handleLayerChange,\n  } = props;\n\n  const slider = layer.opacity;\n  const isOn = layer.visible;\n\n  function handleSliderChange(v) {\n    if (layerType === 'cells') {\n      const stroked = v < 0.7;\n      handleLayerChange({ ...layer, opacity: v, stroked });\n    } else {\n      handleLayerChange({ ...layer, opacity: v });\n    }\n  }\n\n  function handleCheckBoxChange(v) {\n    handleLayerChange({ ...layer, visible: v });\n  }\n\n  const classes = useControllerSectionStyles();\n  return (\n    <Grid item style={{ marginTop: '10px' }}>\n      <Paper className={classes.root}>\n        <Typography\n          style={{\n            padding: '15px 8px 0px 8px',\n            marginBottom: '-5px',\n          }}\n        >\n          {label}\n        </Typography>\n        <Grid container direction=\"row\" justify=\"space-between\">\n          <Grid item xs={2}>\n            <Checkbox color=\"primary\" checked={isOn} onChange={(e, v) => handleCheckBoxChange(v)} />\n          </Grid>\n          <Grid item xs={9} style={{ paddingRight: '8px' }}>\n            <Slider\n              value={slider}\n              min={0}\n              max={1}\n              step={0.001}\n              onChange={(e, v) => handleSliderChange(v)}\n              style={{ marginTop: '7px' }}\n              orientation=\"horizontal\"\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n}\n", "import React, { useState, useRef, useEffect } from 'react';\nimport { MAX_CHANNELS, getChannelStats } from '@hms-dbmi/viv';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Slider from '@material-ui/core/Slider';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nimport LayerOptions from './LayerOptions';\nimport VolumeOptions from './VolumeOptions';\nimport {\n  useControllerSectionStyles,\n  StyledExpansionPanelDetails,\n  StyledExpansionPanelSummary,\n  StyledInputLabel,\n  OverflowEllipsisGrid,\n} from './styles';\nimport { getMultiSelectionStats } from './utils';\n\nimport { GLOBAL_LABELS } from '../spatial/constants';\nimport { getSourceFromLoader, isRgb } from '../../utils';\nimport { canLoadResolution } from '../utils';\nimport { DOMAINS } from './constants';\n\nfunction TabPanel(props) {\n  const {\n    children, value, index, ...other\n  } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n}\n\n// Set the domain of the sliders based on either a full range or min/max.\nasync function getDomainsAndSliders(loader, selections, domainType, use3d) {\n  let domains;\n  const stats = await getMultiSelectionStats({\n    loader: loader.data,\n    selections,\n    use3d,\n  });\n  const { sliders } = stats;\n  if (domainType === 'Min/Max') {\n    // eslint-disable-next-line prefer-destructuring\n    domains = stats.domains;\n  }\n  if (domainType === 'Full') {\n    const source = getSourceFromLoader(loader);\n    domains = selections.map(() => DOMAINS[source.dtype]);\n  }\n  return { domains, sliders };\n}\n\nconst buttonStyles = {\n  borderStyle: 'dashed',\n  marginTop: '10px',\n  fontWeight: 400,\n};\n\n/**\n * Controller for the various imaging options (color, opactiy, sliders etc.)\n * @prop {object} imageData Image config object, one of the `images` in the raster schema.\n * @prop {object} layerId Randomly generated id for the image layer that this controller handles.\n * @prop {function} handleLayerRemove Callback for handling the removal of a layer.\n * @prop {object} loader Loader object for the current imaging layer.\n * @prop {function} handleLayerChange Callback for handling the changing of layer properties.\n */\nexport default function LayerController(props) {\n  const {\n    layer,\n    name,\n    loader,\n    theme,\n    handleLayerRemove,\n    handleLayerChange,\n    shouldShowTransparentColor,\n    shouldShowDomain,\n    shouldShowColormap,\n    ChannelController,\n    setViewState,\n    disable3d,\n    setRasterLayerCallback,\n    setAreLayerChannelsLoading,\n    areLayerChannelsLoading,\n    disabled,\n    spatialHeight,\n    spatialWidth,\n    disableChannelsIfRgbDetected,\n    shouldShowRemoveLayerButton,\n  } = props;\n\n  const {\n    colormap,\n    opacity,\n    channels,\n    transparentColor,\n    renderingMode,\n    xSlice,\n    ySlice,\n    zSlice,\n    resolution,\n    use3d,\n    modelMatrix,\n  } = layer;\n  // Channels are used in a lot of callbacks and change handlers\n  // so ensuring they have an up to date copy of the data ensures consistency.\n  // See: https://github.com/vitessce/vitessce/issues/1036\n  const channelRef = useRef(channels);\n  useEffect(() => {\n    channelRef.current = channels;\n    return undefined;\n  }, [channels]);\n\n  const firstSelection = channels[0]?.selection || {};\n\n  const { data, channels: channelOptions } = loader;\n  const [tab, setTab] = useState(0);\n\n  const handleTabChange = (event, newTab) => {\n    setTab(newTab);\n  };\n  const { labels, shape } = Array.isArray(data) ? data[data.length - 1] : data;\n  const [domainType, setDomainType] = useState(layer.domainType);\n  const [isExpanded, setIsExpanded] = useState(true);\n  const [globalLabelValues, setGlobalLabelValues] = useState(\n    GLOBAL_LABELS.filter(\n      field => typeof firstSelection[field] === 'number',\n    ).reduce((o, key) => ({ ...o, [key]: firstSelection[key] }), {}),\n  );\n\n  function setVisible(v) {\n    handleLayerChange({ ...layer, visible: v });\n  }\n\n  function setColormap(v) {\n    handleLayerChange({ ...layer, colormap: v });\n  }\n\n  function setOpacity(v) {\n    handleLayerChange({ ...layer, opacity: v });\n  }\n\n  function setChannels(v) {\n    handleLayerChange({ ...layer, channels: v });\n  }\n  function setTransparentColor(v) {\n    handleLayerChange({ ...layer, transparentColor: v });\n  }\n  function setRenderingMode(v) {\n    handleLayerChange({ ...layer, renderingMode: v });\n  }\n\n  function handleMultiPropertyChange(obj) {\n    handleLayerChange({ ...layer, ...obj });\n  }\n\n  function handleSlicerSetting(slice, val) {\n    handleLayerChange({ ...layer, [`${slice}Slice`]: val });\n  }\n\n  function setChannelsAndDomainType(newChannels, newDomainType) {\n    handleLayerChange({\n      ...layer,\n      channels: newChannels,\n      domainType: newDomainType,\n    });\n  }\n\n  function setChannel(v, i) {\n    const newChannels = [...channelRef.current];\n    newChannels[i] = v;\n    handleLayerChange({ ...layer, channels: newChannels });\n  }\n\n  function addChannel(v) {\n    const newChannels = [...channelRef.current, v];\n    handleLayerChange({ ...layer, channels: newChannels });\n  }\n\n  function removeChannel(i) {\n    const newChannels = [...channelRef.current];\n    newChannels.splice(i, 1);\n    handleLayerChange({ ...layer, channels: newChannels });\n  }\n\n  const setAreAllChannelsLoading = (val) => {\n    const newAreLayerChannelsLoading = channelRef.current.map(() => val);\n    setAreLayerChannelsLoading(newAreLayerChannelsLoading);\n  };\n\n  // Handles adding a channel, creating a default selection\n  // for the current global settings and domain type.\n  const handleChannelAdd = async () => {\n    const selection = {};\n    labels.forEach((label) => {\n      // Set new image to default selection for non-global selections (0)\n      // and use current global selection otherwise.\n      selection[label] = GLOBAL_LABELS.includes(label)\n        ? globalLabelValues[label] || 0\n        : 0;\n    });\n    const { domains, sliders } = await getDomainsAndSliders(\n      loader,\n      [selection],\n      domainType,\n      use3d,\n    );\n    const domain = domains[0];\n    const slider = domain;\n    const color = [255, 255, 255];\n    const visible = true;\n    const newChannelId = channels.length;\n    const newAreLayerChannelsLoading = [...areLayerChannelsLoading];\n    newAreLayerChannelsLoading[newChannelId] = true;\n    setAreLayerChannelsLoading(newAreLayerChannelsLoading);\n    const channel = {\n      selection,\n      slider,\n      visible,\n      color,\n    };\n    setRasterLayerCallback(() => {\n      setChannel({ ...channel, slider: sliders[0] }, newChannelId);\n      const areLayerChannelsLoadingCallback = [...newAreLayerChannelsLoading];\n      areLayerChannelsLoadingCallback[newChannelId] = false;\n      setAreLayerChannelsLoading(areLayerChannelsLoadingCallback);\n      setRasterLayerCallback(null);\n    });\n    addChannel(channel);\n  };\n\n  const handleDomainChange = async (value) => {\n    setDomainType(value);\n    const selections = channels.map(channel => channel.selection);\n    let sliders = channels.map(channel => channel.slider);\n    const { domains } = await getDomainsAndSliders(\n      loader,\n      selections,\n      value,\n      use3d,\n    );\n\n    // If it's the right-most slider, we take the minimum of that and the new value.\n    // Otherwise, we use the maximum of the left-hand side and the new value.\n    sliders = sliders.map((slider, i) => {\n      const [left, right] = slider;\n      return [Math.max(left, domains[i][0]), Math.min(right, domains[i][1])];\n    });\n\n    const newChannels = channels.map((c, i) => ({ ...c, slider: sliders[i] }));\n    setChannelsAndDomainType(newChannels, value);\n  };\n\n  // This call updates all channel selections with new global selection from the UI.\n  const handleGlobalChannelsSelectionChange = async ({ selection, event }) => {\n    const selections = channels.map(channel => ({\n      ...channel.selection,\n      ...selection,\n    }));\n    const canUpdateChannels = event.type === 'mouseup' || event.type === 'keydown';\n    // Only update domains on a mouseup event for the same reason as above.\n    if (canUpdateChannels) {\n      setAreAllChannelsLoading(true);\n      getDomainsAndSliders(loader, selections, domainType, use3d).then(\n        ({ sliders }) => {\n          const newChannelsWithSelection = channels.map(c => ({\n            ...c,\n            selection: { ...c.selection, ...selection },\n          }));\n          // Set the callback before changing the selection\n          // so the callback is used when the layer (re)loads its data.\n          setRasterLayerCallback(() => {\n            setRasterLayerCallback(null);\n            setAreAllChannelsLoading(false);\n            const newChannelsWithSliders = [...newChannelsWithSelection].map(\n              (c, i) => ({\n                ...c,\n                slider: sliders[i],\n              }),\n            );\n            setChannels(newChannelsWithSliders);\n          });\n          setChannels(newChannelsWithSelection);\n        },\n      );\n    }\n    setGlobalLabelValues(prev => ({ ...prev, ...selection }));\n  };\n\n  let channelControllers = [];\n  if (labels.length > 0) {\n    const channelLabel = labels.find(c => c === 'channel' || c === 'c') || labels[0];\n    // Create the channel controllers for each channel.\n    channelControllers = channels.map(\n      // c is an object like { color, selection, slider, visible }.\n      (c, channelId) => {\n        // Update the auxiliary store with the current loading state of a channel.\n        const setIsLoading = (val) => {\n          const newAreLayerChannelsLoading = [...areLayerChannelsLoading];\n          newAreLayerChannelsLoading[channelId] = val;\n          setAreLayerChannelsLoading(newAreLayerChannelsLoading);\n        };\n        // Change one property of a channel (for now - soon\n        // nested structures allowing for multiple z/t selecitons at once, for example).\n        const handleChannelPropertyChange = (property, value) => {\n          // property is something like \"selection\" or \"slider.\"\n          // value is the actual change, like { channel: \"DAPI\" }.\n          const update = { [property]: value };\n          if (property === 'selection') {\n            // Channel is loading until the layer callback is called\n            // by the layer, which fetches the raster data.\n            setIsLoading(true);\n            update.selection = {\n              ...globalLabelValues,\n              ...update.selection,\n            };\n            setChannel({ ...c, ...update }, channelId);\n            // Call back for raster layer handles update of UI\n            // like sliders and the loading state of the channel.\n            setRasterLayerCallback(async () => {\n              const selections = [\n                { ...channels[channelId][property], ...value },\n              ];\n              const { sliders } = await getDomainsAndSliders(\n                loader,\n                selections,\n                domainType,\n                use3d,\n              );\n              [update.slider] = sliders;\n              setChannel({ ...c, ...update }, channelId);\n              setRasterLayerCallback(null);\n              setIsLoading(false);\n            });\n          } else {\n            setChannel({ ...c, ...update }, channelId);\n          }\n        };\n        const handleChannelRemove = () => {\n          removeChannel(channelId);\n        };\n        const handleIQRUpdate = async () => {\n          const { data: loaderData } = loader;\n          const source = Array.isArray(loaderData)\n            ? loaderData[loaderData.length - 1]\n            : loaderData;\n          const raster = await source.getRaster({\n            selection: channels[channelId].selection,\n          });\n          const stats = getChannelStats(raster.data);\n          const { q1, q3 } = stats;\n          setChannel({ ...c, slider: [q1, q3] }, channelId);\n        };\n        return (\n          <ChannelController\n            // eslint-disable-next-line react/no-array-index-key\n            key={`channel-controller-${channelId}`}\n            dimName={channelLabel}\n            visibility={c.visible}\n            selectionIndex={c.selection[channelLabel]}\n            slider={c.slider}\n            color={c.color}\n            channels={channels}\n            channelId={channelId}\n            domainType={domainType}\n            loader={loader}\n            globalLabelValues={globalLabelValues}\n            theme={theme}\n            channelOptions={channelOptions}\n            colormapOn={Boolean(colormap)}\n            handlePropertyChange={handleChannelPropertyChange}\n            handleChannelRemove={handleChannelRemove}\n            handleIQRUpdate={handleIQRUpdate}\n            setRasterLayerCallback={setRasterLayerCallback}\n            isLoading={areLayerChannelsLoading[channelId]}\n            use3d={use3d}\n          />\n        );\n      },\n    );\n  }\n\n  const controllerSectionClasses = useControllerSectionStyles();\n\n  const { visible } = layer;\n  const visibleSetting = typeof visible === 'boolean' ? visible : true;\n  const Visibility = visibleSetting ? VisibilityIcon : VisibilityOffIcon;\n  // Only show Volume tabs if 3D is available.\n  const hasViewableResolutions = Boolean(\n    Array.from({\n      length: loader.data.length,\n    }).filter((_, res) => canLoadResolution(loader.data, res)).length,\n  );\n  const useVolumeTabs = !disable3d && shape[labels.indexOf('z')] > 1 && hasViewableResolutions;\n  const FullController = (\n    <>\n      <LayerOptions\n        channels={channels}\n        opacity={opacity}\n        colormap={colormap}\n        transparentColor={transparentColor}\n        domainType={domainType}\n        // Only allow for global dimension controllers that\n        // exist in the `dimensions` part of the loader.\n        globalControlLabels={labels.filter(label => GLOBAL_LABELS.includes(label))}\n        globalLabelValues={globalLabelValues}\n        handleOpacityChange={setOpacity}\n        handleColormapChange={setColormap}\n        handleGlobalChannelsSelectionChange={\n          handleGlobalChannelsSelectionChange\n        }\n        handleTransparentColorChange={setTransparentColor}\n        disableChannelsIfRgbDetected={\n          isRgb(loader) && disableChannelsIfRgbDetected\n        }\n        handleDomainChange={handleDomainChange}\n        shouldShowTransparentColor={shouldShowTransparentColor}\n        shouldShowDomain={shouldShowDomain}\n        shouldShowColormap={shouldShowColormap}\n        use3d={use3d}\n        loader={loader}\n        handleMultiPropertyChange={handleMultiPropertyChange}\n        resolution={resolution}\n        disable3d={disable3d}\n        setRasterLayerCallback={setRasterLayerCallback}\n        setAreAllChannelsLoading={setAreAllChannelsLoading}\n        setViewState={setViewState}\n        spatialHeight={spatialHeight}\n        spatialWidth={spatialWidth}\n        modelMatrix={modelMatrix}\n      />\n      {isRgb(loader) && disableChannelsIfRgbDetected\n        ? null\n        : channelControllers}\n      {isRgb(loader) && disableChannelsIfRgbDetected ? null : (\n        <Button\n          disabled={channels.length === MAX_CHANNELS}\n          onClick={handleChannelAdd}\n          fullWidth\n          variant=\"outlined\"\n          style={buttonStyles}\n          startIcon={<AddIcon />}\n          size=\"small\"\n        >\n          Add Channel\n        </Button>\n      )}\n    </>\n  );\n  return (\n    <ExpansionPanel\n      className={controllerSectionClasses.root}\n      onChange={(e, expanded) => !disabled\n        && setIsExpanded(\n          expanded && e?.target?.attributes?.role?.value === 'presentation',\n        )\n      }\n      TransitionProps={{ enter: false }}\n      expanded={!disabled && isExpanded}\n    >\n      <StyledExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls={`layer-${name}-controls`}\n      >\n        <Grid container direction=\"column\" m={1} justify=\"center\">\n          <OverflowEllipsisGrid item>\n            <Button\n              onClick={(e) => {\n                if (!disabled) {\n                  // Needed to prevent affecting the expansion panel from changing\n                  e.stopPropagation();\n                  const nextVisible = typeof visible === 'boolean' ? !visible : false;\n                  setVisible(nextVisible);\n                }\n              }}\n              style={{\n                marginRight: 8,\n                marginBottom: 2,\n                padding: 0,\n                minWidth: 0,\n              }}\n            >\n              <Visibility />\n            </Button>\n            {name}\n          </OverflowEllipsisGrid>\n          {!disabled && !isExpanded && !use3d && (\n            <Grid\n              container\n              direction=\"row\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Grid item xs={6}>\n                <StyledInputLabel htmlFor={`layer-${name}-opacity-closed`}>\n                  Opacity:\n                </StyledInputLabel>\n              </Grid>\n              <Grid item xs={6}>\n                <Slider\n                  id={`layer-${name}-opacity-closed`}\n                  value={opacity}\n                  onChange={(e, v) => setOpacity(v)}\n                  valueLabelDisplay=\"auto\"\n                  getAriaLabel={() => 'opacity slider'}\n                  min={0}\n                  max={1}\n                  step={0.01}\n                  orientation=\"horizontal\"\n                />\n              </Grid>\n            </Grid>\n          )}\n        </Grid>\n      </StyledExpansionPanelSummary>\n      <StyledExpansionPanelDetails>\n        {useVolumeTabs ? (\n          <>\n            <Tabs\n              value={tab}\n              onChange={handleTabChange}\n              aria-label=\"simple tabs example\"\n              style={{ height: '24px', minHeight: '24px' }}\n            >\n              <Tab\n                label=\"Channels\"\n                style={{\n                  fontSize: '.75rem',\n                  bottom: 12,\n                  width: '50%',\n                  minWidth: '50%',\n                }}\n                disableRipple\n              />\n              <Tab\n                label=\"Volume\"\n                style={{\n                  fontSize: '.75rem',\n                  bottom: 12,\n                  width: '50%',\n                  minWidth: '50%',\n                }}\n              />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n              {FullController}\n            </TabPanel>\n            <TabPanel value={tab} index={1} style={{ marginTop: 4 }}>\n              <VolumeOptions\n                loader={loader}\n                handleSlicerSetting={handleSlicerSetting}\n                handleRenderingModeChange={setRenderingMode}\n                renderingMode={renderingMode}\n                xSlice={xSlice}\n                ySlice={ySlice}\n                zSlice={zSlice}\n                use3d={use3d}\n                setViewState={setViewState}\n                spatialHeight={spatialHeight}\n                spatialWidth={spatialWidth}\n                modelMatrix={modelMatrix}\n              />\n            </TabPanel>\n          </>\n        ) : (\n          FullController\n        )}\n        {shouldShowRemoveLayerButton ? (\n          <Button\n            onClick={handleLayerRemove}\n            fullWidth\n            variant=\"outlined\"\n            style={buttonStyles}\n            size=\"small\"\n          >\n            Remove Image Layer\n          </Button>\n        ) : null}\n      </StyledExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}\n", "import React from 'react';\nimport range from 'lodash/range';\nimport { Matrix4 } from 'math.gl';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { getDefaultInitialViewState } from '@hms-dbmi/viv';\n\nimport {\n  getBoundingCube, getMultiSelectionStats,\n} from './utils';\nimport {\n  COLORMAP_OPTIONS,\n  canLoadResolution,\n  formatBytes,\n  getStatsForResolution,\n} from '../utils';\nimport { DEFAULT_RASTER_DOMAIN_TYPE } from '../spatial/constants';\nimport { StyledSelectionSlider, useSelectStyles } from './styles';\n\nconst DOMAIN_OPTIONS = ['Full', 'Min/Max'];\n\n/**\n * Wrapper for the dropdown that selects a colormap (None, viridis, magma, etc.).\n * @prop {Object} loader Loader object with metadata.\n * @prop {function} handleMultiPropertyChange Function to propgate multiple layer changes at once.\n * This prevents updates from overridding each other.\n * @prop {number} resolution Current 3D resolution.\n * @prop {boolean} disable3d Whether or not to enable 3D selection\n * @prop {function} setRasterLayerCallback Setter for callbacks that fire after raster/volume loads.\n * @prop {function} setAreAllChannelsLoading Setter for whether or not a given channel is loading.\n * @prop {Object} setViewState Setter for the current view state.\n * @prop {number} spatialHeight Height of the spatial component.\n * @prop {number} spatialWidth Width of the spatial component.\n * @prop {object} channels Channels object.\n * @prop {boolean} use3d Whether or not 3D is enabled for this layer.\n */\nfunction VolumeDropdown({\n  loader: loaderWithMeta,\n  handleMultiPropertyChange,\n  resolution: currResolution,\n  disable3d,\n  setRasterLayerCallback,\n  setAreAllChannelsLoading,\n  setViewState,\n  spatialHeight,\n  spatialWidth,\n  channels,\n  use3d,\n  modelMatrix,\n}) {\n  const classes = useSelectStyles();\n  const selections = channels.map(i => i.selection);\n  const { data: loader } = loaderWithMeta;\n  const handleChange = async (val) => {\n    // val is the resolution - null indicates 2D\n    const shouldUse3D = typeof val === 'number';\n    setAreAllChannelsLoading(true);\n    setRasterLayerCallback(() => {\n      setAreAllChannelsLoading(false);\n      setRasterLayerCallback(null);\n    });\n    if (shouldUse3D) {\n      const [xSlice, ySlice, zSlice] = getBoundingCube(loader);\n      const propertiesChanged = {\n        resolution: val,\n        xSlice,\n        ySlice,\n        zSlice,\n        use3d: shouldUse3D,\n      };\n      // Only make the fetch if needed i.e if the 3d was just being turned on.\n      if (!use3d) {\n        const { sliders } = await getMultiSelectionStats({\n          loader,\n          selections,\n          use3d: shouldUse3D,\n        });\n        propertiesChanged.channels = [...channels];\n        propertiesChanged.channels.forEach((ch, i) => {\n          // eslint-disable-next-line no-param-reassign\n          ch.slider = sliders[i];\n        });\n      }\n      // Update all properties at once to avoid overriding calls.\n      handleMultiPropertyChange(propertiesChanged);\n      const defaultViewState = getDefaultInitialViewState(loader,\n        { height: spatialHeight, width: spatialWidth }, 1.5, true, new Matrix4(modelMatrix));\n      setViewState({\n        ...defaultViewState,\n        rotationX: 0,\n        rotationOrbit: 0,\n      });\n    } else {\n      const { sliders } = await getMultiSelectionStats({\n        loader, selections, use3d: shouldUse3D,\n      });\n      const newChannels = [...channels];\n      newChannels.forEach((ch, i) => {\n        // eslint-disable-next-line no-param-reassign\n        ch.slider = sliders[i];\n      });\n      // Update all properties at once to avoid overriding calls.\n      handleMultiPropertyChange({\n        resolution: val,\n        use3d: shouldUse3D,\n        spatialAxisFixed: false,\n        channels: newChannels,\n      });\n      const defaultViewState = getDefaultInitialViewState(loader,\n        { height: spatialHeight, width: spatialWidth }, 0.5, false, new Matrix4(modelMatrix));\n      setViewState({\n        ...defaultViewState,\n        rotationX: null,\n        rotationOrbit: null,\n        orbitAxis: null,\n      });\n    }\n  };\n  const { labels, shape } = Array.isArray(loader) ? loader[0] : loader;\n  const hasZStack = shape[labels.indexOf('z')] > 1;\n  return (\n    <>\n      <Select\n        native\n        value={currResolution}\n        onChange={e => handleChange(\n          e.target.value === '2D' ? e.target.value : Number(e.target.value),\n        )\n        }\n        classes={{ root: classes.selectRoot }}\n      >\n        {\n          <option key=\"2D\" value=\"2D\">\n            2D Visualization\n          </option>\n        }\n        {Array.from({ length: loader.length })\n          .fill(0)\n          // eslint-disable-next-line no-unused-vars\n          .map((_, resolution) => {\n            if (loader) {\n              if (canLoadResolution(loader, resolution)) {\n                const {\n                  height,\n                  width,\n                  depthDownsampled,\n                  totalBytes,\n                } = getStatsForResolution(loader, resolution);\n                return (\n                  <option\n                    key={`(${height}, ${width}, ${depthDownsampled})`}\n                    value={resolution}\n                    disabled={\n                      disable3d\n                      || !hasZStack\n                    }\n                  >\n                    {`3D: ${resolution}x Downsampled, ~${formatBytes(\n                      totalBytes,\n                    )} per channel, (${height}, ${width}, ${depthDownsampled})`}\n                  </option>\n                );\n              }\n            }\n            return null;\n          })}\n      </Select>\n    </>\n  );\n}\n\n\n/**\n * Wrapper for the dropdown that selects a colormap (None, viridis, magma, etc.).\n * @prop {string} value Currently selected value for the colormap.\n * @prop {string} inputId Css id.\n * @prop {function} handleChange Callback for every change in colormap.\n */\nfunction ColormapSelect({ value, inputId, handleChange }) {\n  const classes = useSelectStyles();\n  return (\n    <Select\n      native\n      onChange={e => handleChange(e.target.value === '' ? null : e.target.value)}\n      value={value}\n      inputProps={{ name: 'colormap', id: inputId }}\n      style={{ width: '100%' }}\n      classes={{ root: classes.selectRoot }}\n    >\n      <option aria-label=\"None\" value=\"\">None</option>\n      {COLORMAP_OPTIONS.map(name => (\n        <option key={name} value={name}>\n          {name}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\nfunction TransparentColorCheckbox({ value, handleChange }) {\n  return (\n    <Checkbox\n      style={{ float: 'left', padding: 0 }}\n      color=\"default\"\n      onChange={() => {\n        if (value) {\n          handleChange(null);\n        } else {\n          handleChange([0, 0, 0]);\n        }\n      }}\n      checked={Boolean(value)}\n    />\n  );\n}\n\n/**\n * Wrapper for the slider that updates opacity.\n * @prop {string} value Currently selected value between 0 and 1.\n * @prop {function} handleChange Callback for every change in opacity.\n */\nfunction OpacitySlider({ value, handleChange }) {\n  return (\n    <Slider\n      value={value}\n      onChange={(e, v) => handleChange(v)}\n      valueLabelDisplay=\"auto\"\n      getAriaLabel={() => 'opacity slider'}\n      min={0}\n      max={1}\n      step={0.01}\n      orientation=\"horizontal\"\n      style={{ marginTop: '7px' }}\n    />\n  );\n}\n\n/**\n * Wrapper for the dropdown that chooses the domain type.\n * @prop {string} value Currently selected value (i.e 'Max/Min').\n * @prop {string} inputId Css id.\n * @prop {function} handleChange Callback for every change in domain.\n */\nfunction SliderDomainSelector({ value, inputId, handleChange }) {\n  const classes = useSelectStyles();\n  return (\n    <Select\n      native\n      onChange={e => handleChange(e.target.value)}\n      value={value}\n      inputProps={{ name: 'domain-selector', id: inputId }}\n      style={{ width: '100%' }}\n      classes={{ root: classes.selectRoot }}\n    >\n      {DOMAIN_OPTIONS.map(name => (\n        <option key={name} value={name}>\n          {name}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\n/**\n * Wrapper for the slider that chooses global selections (z, t etc.).\n * @prop {string} field The dimension this selects for (z, t etc.).\n * @prop {number} value Currently selected index (1, 4, etc.).\n * @prop {function} handleChange Callback for every change in selection.\n * @prop {function} possibleValues All available values for the field.\n */\nfunction GlobalSelectionSlider({\n  field,\n  value,\n  handleChange,\n  possibleValues,\n}) {\n  return (\n    <StyledSelectionSlider\n      value={value}\n      // See https://github.com/hms-dbmi/viv/issues/176 for why\n      // we have the two handlers.\n      onChange={\n        (event, newValue) => {\n          handleChange({ selection: { [field]: newValue }, event });\n        }\n      }\n      onChangeCommitted={\n        (event, newValue) => {\n          handleChange({ selection: { [field]: newValue }, event });\n        }\n      }\n      valueLabelDisplay=\"auto\"\n      getAriaLabel={() => `${field} slider`}\n      marks={possibleValues.map(val => ({ value: val }))}\n      min={Number(possibleValues[0])}\n      max={Number(possibleValues.slice(-1))}\n      orientation=\"horizontal\"\n      step={null}\n    />\n  );\n}\n\n/**\n * Wrapper for each of the options to show its name and then its UI component.\n * @prop {string} name Display name for option.\n * @prop {number} opacity Current opacity value.\n * @prop {string} inputId An id for css.\n * @prop {object} children Components to be rendered next to the name (slider, dropdown etc.).\n */\nfunction LayerOption({ name, inputId, children }) {\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n      <Grid item xs={6}>\n        <InputLabel htmlFor={inputId}>{name}:</InputLabel>\n      </Grid>\n      <Grid item xs={6}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\n/**\n * Gloabl options for all channels (opacity, colormap, etc.).\n * @prop {string} colormap What colormap is currently selected (None, viridis etc.).\n * @prop {number} opacity Current opacity value.\n * @prop {function} handleColormapChange Callback for when colormap changes.\n * @prop {function} handleOpacityChange Callback for when opacity changes.\n * @prop {object} globalControlLabels All available options for global control (z and t).\n * @prop {function} handleGlobalChannelsSelectionChange Callback for global selection changes.\n * @prop {function} handleDomainChange Callback for domain type changes (full or min/max).\n * @prop {array} channels Current channel object for inferring the current global selection.\n * @prop {array} dimensions Currently available dimensions (channel, z, t etc.).\n * @prop {string} domainType One of Max/Min or Full (soon presets as well).\n * @prop {boolean} disableChannelsIfRgbDetected Whether or not we need colormap controllers if RGB.\n */\nfunction LayerOptions({\n  colormap,\n  opacity,\n  handleColormapChange,\n  handleOpacityChange,\n  handleTransparentColorChange,\n  globalControlLabels,\n  globalLabelValues,\n  handleGlobalChannelsSelectionChange,\n  handleSliderChange,\n  handleDomainChange,\n  transparentColor,\n  channels,\n  domainType,\n  disableChannelsIfRgbDetected,\n  shouldShowTransparentColor,\n  shouldShowDomain,\n  shouldShowColormap,\n  use3d,\n  loader,\n  handleMultiPropertyChange,\n  resolution,\n  disable3d,\n  setRasterLayerCallback,\n  setAreAllChannelsLoading,\n  setViewState,\n  spatialHeight,\n  spatialWidth,\n  modelMatrix,\n}) {\n  const { labels, shape } = Array.isArray(loader.data) ? loader.data[0] : loader.data;\n  const hasDimensionsAndChannels = labels.length > 0 && channels.length > 0;\n  const hasZStack = shape[labels.indexOf('z')] > 1;\n  // Only show volume button if we can actually view resolutions.\n  const hasViewableResolutions = Boolean(Array.from({\n    length: loader.data.length,\n  }).filter((_, res) => canLoadResolution(loader.data, res)).length);\n  return (\n    <Grid container direction=\"column\" style={{ width: '100%' }}>\n      {hasZStack\n        && !disable3d\n        && hasViewableResolutions\n        && (\n        <VolumeDropdown\n          loader={loader}\n          handleSliderChange={handleSliderChange}\n          handleDomainChange={handleDomainChange}\n          channels={channels}\n          handleMultiPropertyChange={handleMultiPropertyChange}\n          resolution={resolution}\n          disable3d={disable3d}\n          setRasterLayerCallback={setRasterLayerCallback}\n          setAreAllChannelsLoading={setAreAllChannelsLoading}\n          setViewState={setViewState}\n          spatialHeight={spatialHeight}\n          spatialWidth={spatialWidth}\n          use3d={use3d}\n          modelMatrix={modelMatrix}\n        />\n        )\n      }\n      {hasDimensionsAndChannels\n        && !use3d\n        && globalControlLabels.map(\n          field => shape[labels.indexOf(field)] > 1 && (\n          <LayerOption name={field} inputId={`${field}-slider`} key={field}>\n            <GlobalSelectionSlider\n              field={field}\n              value={globalLabelValues[field]}\n              handleChange={handleGlobalChannelsSelectionChange}\n              possibleValues={range(shape[labels.indexOf(field)])}\n            />\n          </LayerOption>\n          ),\n        )}\n      {!disableChannelsIfRgbDetected ? (\n        <>\n          {shouldShowColormap && (\n            <Grid item>\n              <LayerOption name=\"Colormap\" inputId=\"colormap-select\">\n                <ColormapSelect\n                  value={colormap || ''}\n                  inputId=\"colormap-select\"\n                  handleChange={handleColormapChange}\n                />\n              </LayerOption>\n            </Grid>\n          )}\n          {shouldShowDomain && (\n            <Grid item>\n              <LayerOption name=\"Domain\" inputId=\"domain-selector\">\n                <SliderDomainSelector\n                  value={domainType || DEFAULT_RASTER_DOMAIN_TYPE}\n                  handleChange={(value) => {\n                    handleDomainChange(value);\n                  }}\n                />\n              </LayerOption>\n            </Grid>\n          )}\n        </>\n      ) : null}\n      {!use3d && (\n        <Grid item>\n          <LayerOption name=\"Opacity\" inputId=\"opacity-slider\">\n            <OpacitySlider value={opacity} handleChange={handleOpacityChange} />\n          </LayerOption>\n        </Grid>\n      )}\n      {shouldShowTransparentColor && !use3d && (\n        <Grid item>\n          <LayerOption\n            name=\"Zero Transparent\"\n            inputId=\"transparent-color-selector\"\n          >\n            <TransparentColorCheckbox\n              value={transparentColor}\n              handleChange={handleTransparentColorChange}\n            />\n          </LayerOption>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nexport default LayerOptions;\n", "import React from 'react';\nimport { Matrix4 } from 'math.gl';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Slider from '@material-ui/core/Slider';\nimport { RENDERING_MODES, getDefaultInitialViewState } from '@hms-dbmi/viv';\nimport { abbreviateNumber, getBoundingCube } from './utils';\nimport { useSelectStyles } from './styles';\n\nconst useSlicerStyles = makeStyles(theme => createStyles({\n  enabled: {},\n  disabled: {\n    color: theme.palette.text.disabled,\n    // Because of the .5 opacity of the disabled color in the theme, and the fact\n    // that there are multiple overlaid parts to the slider,\n    // this needs to be set manually for the desired effect.\n    '& .MuiSlider-thumb': {\n      color: 'rgb(100, 100, 100, 1.0)',\n    },\n    '&  .MuiSlider-track': {\n      color: 'rgb(100, 100, 100, 1.0)',\n    },\n  },\n}));\n\nconst Slicer = ({\n  xSlice,\n  ySlice,\n  zSlice,\n  handleSlicerSetting,\n  loader,\n  use3d,\n}) => {\n  const [xSliceInit, ySliceInit, zSliceInit] = getBoundingCube(loader.data);\n  const sliceValuesAndSetSliceFunctions = [\n    [\n      xSlice,\n      xSliceNew => handleSlicerSetting('x', xSliceNew),\n      'x',\n      xSliceInit,\n    ],\n    [\n      ySlice,\n      ySliceNew => handleSlicerSetting('y', ySliceNew),\n      'y',\n      ySliceInit,\n    ],\n    [\n      zSlice,\n      zSliceNew => handleSlicerSetting('z', zSliceNew),\n      'z',\n      zSliceInit,\n    ],\n  ];\n  const classes = useSlicerStyles();\n  const Slicers = sliceValuesAndSetSliceFunctions.map(\n    ([val, setVal, label, [min, max]]) => (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n        key={label}\n      >\n        <Grid item xs={1}>\n          <Typography\n            className={!use3d ? classes.disabled : classes.enabled}\n            style={{ marginBottom: 0 }}\n          >\n            {label}:\n          </Typography>\n        </Grid>\n        <Grid item xs={11}>\n          <Slider\n            disabled={!use3d}\n            className={!use3d ? classes.disabled : classes.enabled}\n            value={val}\n            onChange={(e, v) => setVal(v)}\n            valueLabelDisplay=\"auto\"\n            valueLabelFormat={v => abbreviateNumber(v)}\n            getAriaLabel={() => `${label} slider`}\n            min={min}\n            max={max}\n            step={0.005}\n            orientation=\"horizontal\"\n          />\n        </Grid>\n      </Grid>\n    ),\n  );\n  return (\n    <>\n      <Typography\n        className={!use3d ? classes.disabled : classes.enabled}\n        style={{ marginTop: 16, marginBottom: 0 }}\n      >\n        Clipping Planes:{' '}\n      </Typography>{' '}\n      {Slicers}\n    </>\n  );\n};\n\nconst renderingOptions = Object.values(RENDERING_MODES);\n\nfunction RenderingModeSelect({\n  handleRenderingModeChange,\n  renderingMode,\n  use3d,\n}) {\n  const classes = useSelectStyles();\n  // Empty option allows for displaying the title of the dropdown fully in the UI.\n  const options = !use3d ? [...renderingOptions, ''] : renderingOptions;\n  return (\n    <FormControl fullWidth>\n      <InputLabel htmlFor=\"rendering-mode-select\">Rendering Mode</InputLabel>\n      <Select\n        native\n        onChange={e => handleRenderingModeChange(e.target.value)}\n        value={use3d ? renderingMode : ''}\n        inputProps={{\n          name: 'rendering-mode',\n          id: 'rendering-mode-select',\n        }}\n        disabled={!use3d}\n        classes={{ root: classes.selectRoot }}\n      >\n        {options.map(name => (\n          <option key={name} value={name}>\n            {name}\n          </option>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n\nconst ReCenterButton = ({\n  setViewState,\n  use3d,\n  spatialHeight,\n  spatialWidth,\n  loader,\n  modelMatrix,\n}) => (\n  <Grid item xs=\"auto\" key=\"recenter\">\n    <Button\n      onClick={() => {\n        const defaultViewState = getDefaultInitialViewState(\n          loader.data,\n          { height: spatialHeight, width: spatialWidth },\n          1.5,\n          use3d,\n          new Matrix4(modelMatrix),\n        );\n        setViewState({\n          ...defaultViewState,\n          rotationX: 0,\n          rotationOrbit: 0,\n        });\n      }\n        }\n      disabled={!use3d}\n      style={{\n        padding: 0,\n        marginBottom: 6,\n      }}\n    >\n        Re-Center\n    </Button>\n  </Grid>\n);\n\nconst VolumeOptions = ({\n  handleSlicerSetting,\n  handleRenderingModeChange,\n  renderingMode,\n  xSlice,\n  ySlice,\n  zSlice,\n  use3d,\n  loader,\n  setViewState,\n  spatialHeight,\n  spatialWidth,\n  modelMatrix,\n}) => (\n  <>\n    <RenderingModeSelect\n      handleRenderingModeChange={handleRenderingModeChange}\n      renderingMode={renderingMode}\n      use3d={use3d}\n    />\n    <Slicer\n      xSlice={xSlice}\n      ySlice={ySlice}\n      zSlice={zSlice}\n      handleSlicerSetting={handleSlicerSetting}\n      use3d={use3d}\n      loader={loader}\n    />\n    <ReCenterButton\n      setViewState={setViewState}\n      use3d={use3d}\n      spatialHeight={spatialHeight}\n      spatialWidth={spatialWidth}\n      loader={loader}\n      modelMatrix={modelMatrix}\n    />\n  </>\n);\n\nexport default VolumeOptions;\n", "import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PopperMenu } from '../shared-mui/components';\n\nconst useStyles = makeStyles(() => ({\n  addButton: {\n    marginTop: '10px',\n    marginBottom: '10px',\n    fontWeight: 400,\n  },\n}));\n\nfunction ImageAddIcon() {\n  return (\n    <>\n      <AddIcon />\n      Add Image Layer\n    </>\n  );\n}\n\nfunction ImageAddButton({ imageOptions, handleImageAdd }) {\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n\n  const handleAdd = (imgData) => {\n    setOpen(prev => !prev);\n    handleImageAdd(imgData);\n  };\n\n  if (!imageOptions) return null;\n  return (\n    <PopperMenu\n      open={open}\n      setOpen={setOpen}\n      buttonIcon={<ImageAddIcon />}\n      buttonClassName={classes.addButton}\n    >\n      {imageOptions.map((imgData, i) => (\n        <MenuItem dense key={imgData.name} onClick={() => handleAdd(i)}>\n          <span>{imgData.name}</span>\n        </MenuItem>\n      ))}\n    </PopperMenu>\n  );\n}\n\nexport default ImageAddButton;\n", "import React from 'react';\nimport TitleInfo from '../TitleInfo';\nimport { useReady, useUrls, useGridItemSize } from '../hooks';\nimport HiGlassLazy from './HiGlassLazy';\n\nconst HIGLASS_DATA_TYPES = [];\n\n/**\n * A wrapper around HiGlass (http://higlass.io/).\n * The HiGlassComponent react component is loaded lazily.\n * @prop {object} hgViewConfig A HiGlass viewconfig object to pass\n * to the HiGlassComponent viewConfig prop.\n * @prop {object} hgOptions An optional HiGlass object to pass\n * to the HiGlassComponent hgOptions prop.\n * @prop {function} removeGridComponent A grid component removal handler\n * to pass to the TitleInfo component.\n * @prop {function} onReady A callback function to signal that the component is ready.\n */\nexport default function HiGlassSubscriber(props) {\n  const {\n    coordinationScopes,\n    theme,\n    hgViewConfig,\n    removeGridComponent,\n  } = props;\n\n  // eslint-disable-next-line no-unused-vars\n  const [width, height, containerRef] = useGridItemSize();\n\n  const [\n    isReady,\n    setItemIsReady, // eslint-disable-line no-unused-vars\n    setItemIsNotReady, // eslint-disable-line no-unused-vars\n    resetReadyItems, // eslint-disable-line no-unused-vars\n  ] = useReady(\n    HIGLASS_DATA_TYPES,\n  );\n  // eslint-disable-next-line no-unused-vars\n  const [urls, addUrl, resetUrls] = useUrls();\n\n  return (\n    <div className=\"higlass-title-wrapper\">\n      <TitleInfo\n        title=\"HiGlass\"\n        removeGridComponent={removeGridComponent}\n        theme={theme}\n        isReady={isReady}\n        urls={urls}\n      >\n        <div className=\"higlass-lazy-wrapper\" ref={containerRef}>\n          <HiGlassLazy\n            coordinationScopes={coordinationScopes}\n            theme={theme}\n            hgViewConfig={hgViewConfig}\n            height={height}\n          />\n        </div>\n      </TitleInfo>\n    </div>\n  );\n}\n", "import React, {\n  useMemo, useEffect, useRef, Suspense, useState,\n} from 'react';\nimport ReactDOM from 'react-dom';\nimport dynamicImportPolyfill from 'dynamic-import-polyfill';\nimport register from 'higlass-register';\nimport { ZarrMultivecDataFetcher } from 'higlass-zarr-datafetchers';\nimport packageJson from '../../../package.json';\nimport { createWarningComponent, asEsModule } from '../utils';\nimport { useGridItemSize } from '../hooks';\nimport {\n  useCoordination,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\n\nconst PIXI_BUNDLE_VERSION = packageJson.dependencies['window-pixi'];\nconst HIGLASS_BUNDLE_VERSION = packageJson.dependencies.higlass;\nconst BUNDLE_FILE_EXT = process.env.NODE_ENV === 'development' ? 'js' : 'min.js';\nconst PIXI_BUNDLE_URL = `https://unpkg.com/window-pixi@${PIXI_BUNDLE_VERSION}/dist/pixi.${BUNDLE_FILE_EXT}`;\nconst HIGLASS_BUNDLE_URL = `https://unpkg.com/higlass@${HIGLASS_BUNDLE_VERSION}/dist/hglib.${BUNDLE_FILE_EXT}`;\n\n\n// Initialize the dynamic __import__() function.\ndynamicImportPolyfill.initialize();\n\n// Register the zarr-multivec plugin data fetcher.\n// References:\n// https://github.com/higlass/higlass-register\n// https://github.com/higlass/higlass-zarr-datafetchers\nregister(\n  { dataFetcher: ZarrMultivecDataFetcher, config: ZarrMultivecDataFetcher.config },\n  { pluginType: 'dataFetcher' },\n);\n\n// Lazy load the HiGlass React component,\n// using dynamic imports with absolute URLs.\nconst HiGlassComponent = React.lazy(() => {\n  if (!window.React) {\n    window.React = React;\n  }\n  if (!window.ReactDOM) {\n    window.ReactDOM = ReactDOM;\n  }\n  return new Promise((resolve) => {\n    const handleImportError = (e) => {\n      console.warn(e);\n      resolve(asEsModule(createWarningComponent({\n        title: 'Could not load HiGlass',\n        message: 'The HiGlass scripts could not be dynamically imported.',\n      })));\n    };\n      // eslint-disable-next-line no-undef\n    __import__(PIXI_BUNDLE_URL).then(() => {\n      // eslint-disable-next-line no-undef\n      __import__(HIGLASS_BUNDLE_URL).then(() => {\n        // React.lazy promise must return an ES module with the\n        // component as the default export.\n        resolve(asEsModule(window.hglib.HiGlassComponent));\n      }).catch(handleImportError);\n    }).catch(handleImportError);\n  });\n});\n\n// Use an arbitrary size for normalization of the zoom level.\n// (800 means 800 px width for the full genome)\nconst HG_SIZE = 800;\n\n/**\n   * A wrapper around HiGlass (http://higlass.io/).\n   * The HiGlassComponent react component is loaded lazily.\n   * @prop {object} hgViewConfig A HiGlass viewconfig object to pass\n   * to the HiGlassComponent viewConfig prop.\n   * @prop {object} hgOptions An optional HiGlass object to pass\n   * to the HiGlassComponent hgOptions prop.\n   * @prop {function} removeGridComponent A grid component removal handler\n   * to pass to the TitleInfo component.\n   * @prop {function} onReady A callback function to signal that the component is ready.\n   */\nexport default function HiGlassLazy(props) {\n  const {\n    coordinationScopes,\n    theme,\n    hgViewConfig: hgViewConfigProp,\n    hgOptions: hgOptionsProp,\n    genomeSize,\n    height,\n  } = props;\n\n  // Get \"props\" from the coordination space.\n  const [{\n    genomicZoomX,\n    genomicZoomY,\n    genomicTargetX,\n    genomicTargetY,\n  }, {\n    setGenomicZoomX,\n    setGenomicZoomY,\n    setGenomicTargetX,\n    setGenomicTargetY,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.higlass, coordinationScopes);\n\n  // eslint-disable-next-line no-unused-vars\n  const [width, computedHeight, containerRef] = useGridItemSize();\n  const [hgInstance, setHgInstance] = useState();\n  const isActiveRef = useRef();\n\n  const hgOptions = useMemo(() => ({\n    ...hgOptionsProp,\n    theme,\n  }), [hgOptionsProp, theme]);\n\n  const hgViewConfig = useMemo(() => {\n    // HiGlass needs the start and end absolute genome coordinates\n    const centerX = genomicTargetX;\n    const genomesPerUnitX = genomeSize / (2 ** genomicZoomX);\n    const unitX = width / HG_SIZE;\n    const initialXDomain = [\n      centerX - genomesPerUnitX * unitX / 2,\n      centerX + genomesPerUnitX * unitX / 2,\n    ];\n    const centerY = genomicTargetY;\n    const genomesPerUnitY = genomeSize / (2 ** genomicZoomY);\n    const unitY = height / HG_SIZE;\n    const initialYDomain = [\n      centerY - genomesPerUnitY * unitY / 2,\n      centerY + genomesPerUnitY * unitY / 2,\n    ];\n    return {\n      editable: false,\n      zoomFixed: false,\n      trackSourceServers: [\n        '//higlass.io/api/v1',\n      ],\n      exportViewUrl: '//higlass.io/api/v1/viewconfs',\n      views: [\n        {\n          uid: 'main',\n          ...hgViewConfigProp,\n          initialXDomain,\n          initialYDomain,\n        },\n      ],\n      zoomLocks: {\n        locksByViewUid: {},\n        locksDict: {},\n      },\n      locationLocks: {\n        locksByViewUid: {},\n        locksDict: {},\n      },\n      valueScaleLocks: {\n        locksByViewUid: {},\n        locksDict: {},\n      },\n    };\n  }, [genomicTargetX, genomeSize, genomicZoomX, width, genomicTargetY,\n    genomicZoomY, height, hgViewConfigProp]);\n\n  useEffect(() => {\n    const handleMouseEnter = () => {\n      isActiveRef.current = true;\n    };\n    const handleMouseLeave = () => {\n      isActiveRef.current = false;\n    };\n    const container = containerRef.current;\n    container.addEventListener('mouseenter', handleMouseEnter);\n    container.addEventListener('mouseleave', handleMouseLeave);\n    return () => {\n      container.removeEventListener('mouseenter', handleMouseEnter);\n      container.removeEventListener('mouseenter', handleMouseLeave);\n    };\n  }, [containerRef]);\n\n\n  useEffect(() => {\n    if (!hgInstance) {\n      return () => {};\n    }\n    hgInstance.api.on('viewConfig', (viewConfigString) => {\n      // Only set if the user mouse is over this component (\"is active\").\n      // Otherwise, this could be an initial on viewConfig change callback from a sibling,\n      // which will cause an infinite loop.\n      if (!isActiveRef.current) {\n        return;\n      }\n      const viewConfig = JSON.parse(viewConfigString);\n      const xDomain = viewConfig.views[0].initialXDomain;\n      const yDomain = viewConfig.views[0].initialYDomain;\n\n      const nextGenomicZoomX = Math.log2(\n        genomeSize / ((xDomain[1] - xDomain[0]) * (HG_SIZE / width)),\n      );\n      const nextGenomicZoomY = Math.log2(\n        genomeSize / ((yDomain[1] - yDomain[0]) * (HG_SIZE / height)),\n      );\n      const nextGenomicTargetX = xDomain[0] + (xDomain[1] - xDomain[0]) / 2;\n      const nextGenomicTargetY = yDomain[0] + (yDomain[1] - yDomain[0]) / 2;\n      setGenomicZoomX(nextGenomicZoomX);\n      setGenomicZoomY(nextGenomicZoomY);\n      setGenomicTargetX(nextGenomicTargetX);\n      setGenomicTargetY(nextGenomicTargetY);\n    });\n    return () => hgInstance.api.off('viewConfig');\n  }, [hgInstance, genomeSize, width, height, setGenomicZoomX, setGenomicZoomY,\n    setGenomicTargetX, setGenomicTargetY]);\n\n  return (\n    <div className=\"higlass-wrapper-parent\">\n      <div className=\"higlass-wrapper\" ref={containerRef} style={{ height: `${height}px` }}>\n        <Suspense fallback={<div>Loading...</div>}>\n          <HiGlassComponent\n            ref={setHgInstance}\n            zoomFixed={false}\n            viewConfig={hgViewConfig}\n            options={hgOptions}\n          />\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\nHiGlassLazy.defaultProps = {\n  hgOptions: {\n    bounded: true,\n    pixelPreciseMarginPadding: true,\n    containerPaddingX: 0,\n    containerPaddingY: 0,\n    sizeMode: 'default',\n  },\n  genomeSize: 3100000000,\n};\n", "import React, { useMemo, useEffect } from 'react';\nimport TitleInfo from '../TitleInfo';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { useUrls, useReady, useGridItemSize } from '../hooks';\nimport { mergeCellSets } from '../utils';\nimport { useCellSetsData } from '../data-hooks';\nimport { treeToSetSizesBySetNames } from './cell-set-utils';\nimport CellSetSizesPlot from './CellSetSizesPlot';\n\nconst CELL_SET_SIZES_DATA_TYPES = ['cell-sets'];\n\n/**\n * A subscriber component for `CellSetSizePlot`,\n * which listens for cell sets data updates and\n * `GRID_RESIZE` events.\n * @param {object} props\n * @param {function} props.removeGridComponent The grid component removal function.\n * @param {function} props.onReady The function to call when the subscriptions\n * have been made.\n * @param {string} props.theme The name of the current Vitessce theme.\n * @param {string} props.title The component title.\n */\nexport default function CellSetSizesPlotSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'Cell Set Sizes',\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    cellSetSelection,\n    cellSetColor,\n    additionalCellSets,\n  }, {\n    setCellSetSelection,\n    setCellSetColor,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.cellSetSizes, coordinationScopes);\n\n  const [width, height, containerRef] = useGridItemSize();\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [\n    isReady,\n    setItemIsReady,\n    setItemIsNotReady, // eslint-disable-line no-unused-vars\n    resetReadyItems,\n  ] = useReady(\n    CELL_SET_SIZES_DATA_TYPES,\n  );\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [cellSets] = useCellSetsData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n    { setCellSetSelection, setCellSetColor },\n    { cellSetSelection, cellSetColor },\n  );\n\n  const mergedCellSets = useMemo(\n    () => mergeCellSets(cellSets, additionalCellSets),\n    [cellSets, additionalCellSets],\n  );\n\n  // From the cell sets hierarchy and the list of selected cell sets,\n  // generate the array of set sizes data points for the bar plot.\n  const data = useMemo(() => (mergedCellSets && cellSetSelection && cellSetColor\n    ? treeToSetSizesBySetNames(mergedCellSets, cellSetSelection, cellSetColor, theme)\n    : []\n  ), [mergedCellSets, cellSetSelection, cellSetColor, theme]);\n\n  return (\n    <TitleInfo\n      title={title}\n      removeGridComponent={removeGridComponent}\n      urls={urls}\n      theme={theme}\n      isReady={isReady}\n    >\n      <div ref={containerRef} className=\"vega-container\">\n        <CellSetSizesPlot\n          data={data}\n          theme={theme}\n          width={width}\n          height={height}\n        />\n      </div>\n    </TitleInfo>\n  );\n}\n", "import React from 'react';\nimport clamp from 'lodash/clamp';\nimport { VegaPlot, VEGA_THEMES } from '../vega';\nimport { colorArrayToString } from './utils';\n\n/**\n * Cell set sizes displayed as a bar chart,\n * implemented with the VegaPlot component.\n * @param {object} props\n * @param {object[]} props.data The set size data, an array\n * of objects with properties `name`, `key`, `color`, and `size`.\n * @param {string} props.theme The name of the current Vitessce theme.\n * @param {number} props.width The container width.\n * @param {number} props.height The container height.\n * @param {number} props.marginRight The size of the margin\n * on the right side of the plot, to account for the vega menu button.\n * By default, 90.\n * @param {number} props.marginBottom The size of the margin\n * on the bottom of the plot, to account for long x-axis labels.\n * By default, 120.\n * @param {number} props.keyLength The length of the `key` property of\n * each data point. Assumes all key strings have the same length.\n * By default, 36.\n */\nexport default function CellSetSizesPlot(props) {\n  const {\n    data: rawData,\n    theme,\n    width,\n    height,\n    marginRight = 90,\n    marginBottom = 120,\n    keyLength = 36,\n  } = props;\n\n  // Add a property `keyName` which concatenates the key and the name,\n  // which is both unique and can easily be converted\n  // back to the name by taking a substring.\n  // Add a property `colorString` which contains the `[r, g, b]` color\n  // after converting to a color hex string.\n  const data = rawData.map(d => ({\n    ...d,\n    keyName: d.key + d.name,\n    colorString: colorArrayToString(d.color),\n  }));\n\n  // Manually set the color scale so that Vega-Lite does\n  // not choose the colors automatically.\n  const colors = {\n    domain: data.map(d => d.key),\n    range: data.map(d => d.colorString),\n  };\n\n  // Get an array of keys for sorting purposes.\n  const keys = data.map(d => d.keyName);\n\n  const spec = {\n    mark: { type: 'bar' },\n    encoding: {\n      x: {\n        field: 'keyName',\n        type: 'nominal',\n        axis: { labelExpr: `substring(datum.label, ${keyLength})` },\n        title: 'Cell Set',\n        sort: keys,\n      },\n      y: {\n        field: 'size',\n        type: 'quantitative',\n        title: 'Cell Set Size',\n      },\n      color: {\n        field: 'key',\n        type: 'nominal',\n        scale: colors,\n        legend: null,\n      },\n      tooltip: {\n        field: 'size',\n        type: 'quantitative',\n      },\n    },\n    width: clamp(width - marginRight, 10, Infinity),\n    height: clamp(height - marginBottom, 10, Infinity),\n    config: VEGA_THEMES[theme],\n  };\n\n  return (\n    <VegaPlot\n      data={data}\n      spec={spec}\n    />\n  );\n}\n", "import React, { Suspense, useMemo } from 'react';\nimport { Handler } from 'vega-tooltip';\nimport ReactVega from './ReactVega';\n\n// TODO: React.lazy is not working with Vitessce in the portal-ui.\n// For now, we can work around this by not using React.lazy,\n// but for performance benefits that come with lazy-loading\n// we should eventually try to resolve this issue.\n// const ReactVega = React.lazy(() => import('./ReactVega'));\n\nexport const DATASET_NAME = 'table';\n\nfunction isVega(spec) {\n  return spec.$schema === 'https://vega.github.io/schema/vega/v5.json';\n}\n\n/**\n * A wrapper around the react-vega Vega component.\n * @param {object} props\n * @param {object} spec A vega or vega-lite spec.\n * @param {object[]} data The plot data as an array of objects.\n * @param {object} signalListeners Vega signal listeners. Optional.\n */\nexport default function VegaPlot(props) {\n  const {\n    spec: partialSpec,\n    data,\n    signalListeners,\n  } = props;\n\n  const spec = {\n    ...partialSpec,\n    data: (isVega(partialSpec)\n      ? [\n        { name: DATASET_NAME },\n        ...partialSpec.data,\n      ]\n      : { name: DATASET_NAME }\n    ),\n  };\n\n  const vegaComponent = useMemo(() => (\n    <ReactVega\n      spec={spec}\n      data={{\n        [DATASET_NAME]: data,\n      }}\n      signalListeners={signalListeners}\n      tooltip={new Handler().call}\n      renderer=\"canvas\"\n      scaleFactor={3}\n    />\n  ), [spec, data, signalListeners]);\n\n  return (\n    spec && data && data.length > 0 ? (\n      <Suspense fallback={<div>Loading...</div>}>\n        {vegaComponent}\n      </Suspense>\n    ) : null\n  );\n}\n", "// See https://reactjs.org/docs/code-splitting.html#named-exports\nexport { Vega as default } from 'react-vega';\n", "/**\n * Vega-Lite themes that can be passed to the `config` property\n * of the vega-lite spec.\n */\nexport const VEGA_THEMES = {\n  dark: {\n    // The vega-themes dark theme.\n    // Reference: https://github.com/vega/vega-themes/blob/master/src/theme-dark.ts\n    background: null,\n    title: { color: '#fff' },\n    style: {\n      'guide-label': {\n        fill: '#fff',\n      },\n      'guide-title': {\n        fill: '#fff',\n      },\n    },\n    axis: {\n      domainColor: '#fff',\n      gridColor: '#888',\n      tickColor: '#fff',\n    },\n  },\n  light: {\n    // The default vega theme.\n    background: null,\n  },\n};\n", "import React, {\n  useMemo, useEffect,\n} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { sum } from 'd3-array';\nimport TitleInfo from '../TitleInfo';\nimport { useReady, useUrls, useGridItemSize } from '../hooks';\nimport {\n  useCoordination, useLoaders,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { useGenomicProfilesData } from '../data-hooks';\nimport HiGlassLazy from './HiGlassLazy';\n\nconst GENOMIC_PROFILES_DATA_TYPES = ['genomic-profiles'];\n\nconst REFERENCE_TILESETS = {\n  hg38: {\n    chromosomes: 'NyITQvZsS_mOFNlz5C2LJg',\n    genes: 'P0PLbQMwTYGy-5uPIQid7A',\n  },\n  hg19: {\n    chromosomes: 'N12wVGG9SPiTkk03yUayUw',\n    genes: 'OHJakQICQD6gTD7skx4EWA',\n  },\n  mm9: {\n    chromosomes: 'WAVhNHYxQVueq6KulwgWiQ',\n    genes: 'GUm5aBiLRCyz2PsBea7Yzg',\n  },\n  mm10: {\n    chromosomes: 'EtrWT0VtScixmsmwFSd7zg',\n    genes: 'QDutvmyiSrec5nX4pA5WGQ',\n  },\n};\n\n/**\n * A component for visualization of genomic profiles\n * with genome-wide bar plots.\n * @param {object} props The component props.\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.profileTrackUidKey The key in the genomic profiles row_info that identifies\n * each track. By default, 'path'.\n * @param {string} props.profileTrackNameKey The key in the genomic profiles row_info that\n * gives a name for each track. By default, null. When null is provided, uses the\n * profileTrackUidKey for both UID and name. If UID values are path arrays,\n * they will be converted to name strings.\n * @param {string} props.higlassServer The URL for the higlass server used to retreive\n * reference tilesets for the chromosome and gene annotations.\n * @param {string} props.assembly The genome assembly to use for the reference\n * tilesets for the chromosome and gene annotations.\n * @param {string} props.title The title of the component.\n */\nexport default function GenomicProfilesSubscriber(props) {\n  const {\n    coordinationScopes,\n    theme,\n    removeGridComponent,\n    profileTrackUidKey = 'path',\n    profileTrackNameKey = null,\n    higlassServer = 'https://higlass.io/api/v1',\n    assembly = 'hg38',\n    title = 'Genomic Profiles',\n  } = props;\n\n  // eslint-disable-next-line no-unused-vars\n  const [width, height, containerRef] = useGridItemSize();\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    cellSetColor,\n    cellSetSelection,\n  }] = useCoordination(\n    COMPONENT_COORDINATION_TYPES.genomicProfiles,\n    coordinationScopes,\n  );\n\n  // eslint-disable-next-line no-unused-vars\n  const [\n    isReady,\n    setItemIsReady,\n    setItemIsNotReady, // eslint-disable-line no-unused-vars\n    resetReadyItems,\n  ] = useReady(\n    GENOMIC_PROFILES_DATA_TYPES,\n  );\n    // eslint-disable-next-line no-unused-vars\n  const [urls, addUrl, resetUrls] = useUrls();\n\n  const [genomicProfilesAttrs] = useGenomicProfilesData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n\n  const hgViewConfig = useMemo(() => {\n    if (!genomicProfilesAttrs || urls.length !== 1) {\n      return null;\n    }\n    // Get the URL to the data file from the downloadable URLs array.\n    const { url } = urls[0];\n\n    // Set up the colors to use in the HiGlass view config based on the current theme.\n    const foregroundColor = (theme === 'dark' ? '#C0C0C0' : '#000000');\n    const backgroundColor = (theme === 'dark' ? '#000000' : '#f1f1f1');\n    const dimColor = (theme === 'dark' ? 'dimgray' : 'silver');\n\n    // Define the \"reference tracks\" for chromosome labels and gene annotations.\n    const referenceTracks = [\n      {\n        type: 'horizontal-chromosome-labels',\n        server: higlassServer,\n        tilesetUid: REFERENCE_TILESETS[assembly].chromosomes,\n        uid: 'chromosome-labels',\n        options: {\n          color: foregroundColor,\n          fontSize: 12,\n          fontIsLeftAligned: false,\n          showMousePosition: true,\n          mousePositionColor: foregroundColor,\n        },\n        height: 30,\n      },\n      {\n        type: 'horizontal-gene-annotations',\n        server: higlassServer,\n        tilesetUid: REFERENCE_TILESETS[assembly].genes,\n        uid: 'gene-annotations',\n        options: {\n          name: 'Gene Annotations (hg38)',\n          fontSize: 10,\n          labelPosition: 'hidden',\n          labelLeftMargin: 0,\n          labelRightMargin: 0,\n          labelTopMargin: 0,\n          labelBottomMargin: 0,\n          minHeight: 24,\n          geneAnnotationHeight: 16,\n          geneLabelPosition: 'outside',\n          geneStrandSpacing: 4,\n          showMousePosition: true,\n          mousePositionColor: foregroundColor,\n          plusStrandColor: foregroundColor,\n          minusStrandColor: foregroundColor,\n          labelColor: 'black',\n          labelBackgroundColor: backgroundColor,\n          trackBorderWidth: 0,\n          trackBorderColor: 'black',\n        },\n        height: 70,\n      },\n    ];\n    // Determine the heights of each profile track by subtracting the\n    // reference track heights from the component height, then\n    // dividing by the number of profiles.\n    const referenceTracksHeightSum = sum(referenceTracks.map(t => t.height));\n    const profileTracksHeightSum = height - referenceTracksHeightSum - 10;\n    const profileTrackHeight = profileTracksHeightSum / genomicProfilesAttrs.row_infos.length;\n    const profileTracks = genomicProfilesAttrs.row_infos.map((rowInfo, i) => {\n      // Get the uid for the HiGlass track.\n      const trackUid = rowInfo[profileTrackUidKey];\n      // When profiles correspond to cell sets, the profile UID will be the cell set path array.\n      const isPath = Array.isArray(trackUid);\n      // Get the name for the HiGlass track: try the name key first,\n      // then try the tail of the path, and otherwise the track UID.\n      // eslint-disable-next-line no-nested-ternary\n      const trackName = profileTrackNameKey\n        ? rowInfo[profileTrackNameKey]\n        : (isPath ? trackUid[trackUid.length - 1] : trackUid);\n      // If the uid is a path, then try to get the corresponding cell set's color,\n      // if it is currently selected.\n      const setInSelection = isPath ? cellSetSelection?.find(s => isEqual(s, trackUid)) : false;\n      const setColor = isPath ? cellSetColor?.find(s => isEqual(s.path, trackUid))?.color : null;\n      // Get the track UID as a string before passing to HiGlass.\n      const trackUidString = isPath ? trackUid.join('__') : trackUid;\n      // Create the HiGlass track definition for this profile.\n      const track = {\n        type: 'horizontal-bar',\n        uid: `bar-track-${trackUidString}`,\n        data: {\n          type: 'zarr-multivec',\n          url,\n          row: i,\n        },\n        options: {\n          name: trackName,\n          showMousePosition: true,\n          mousePositionColor: foregroundColor,\n          labelColor: (theme === 'dark' ? 'white' : 'black'),\n          labelBackgroundColor: (theme === 'dark' ? 'black' : 'white'),\n          labelShowAssembly: false,\n        },\n        height: profileTrackHeight,\n      };\n      // Set the track color if it is available.\n      if (setColor && setInSelection) {\n        const c = setColor;\n        track.options.barFillColor = `rgb(${c[0]},${c[1]},${c[2]})`;\n      } else {\n        track.options.barFillColor = dimColor;\n      }\n      return track;\n    });\n\n    // Create the higlass view.\n    // The HiGlassLazy component will fill in the fields 'uid',\n    // 'initialXDomain', and 'initialYDomain'.\n    const hgView = {\n      tracks: {\n        top: [\n          ...referenceTracks,\n          ...profileTracks,\n        ],\n        left: [],\n        center: [],\n        right: [],\n        bottom: [],\n        whole: [],\n        gallery: [],\n      },\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n        static: false,\n      },\n    };\n    return hgView;\n  }, [genomicProfilesAttrs, urls, theme, height, profileTrackUidKey,\n    profileTrackNameKey, cellSetSelection, cellSetColor,\n    higlassServer, assembly]);\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return (\n    <div className=\"higlass-title-wrapper\">\n      <TitleInfo\n        title={title}\n        removeGridComponent={removeGridComponent}\n        theme={theme}\n        isReady={isReady}\n        urls={urls}\n      >\n        <div className=\"higlass-lazy-wrapper\" ref={containerRef}>\n          {hgViewConfig ? (\n            <HiGlassLazy\n              coordinationScopes={coordinationScopes}\n              theme={theme}\n              hgViewConfig={hgViewConfig}\n              height={height}\n            />\n          ) : null}\n        </div>\n      </TitleInfo>\n    </div>\n  );\n}\n", "import React, { useMemo, useEffect } from 'react';\nimport { sum } from 'd3-array';\n\nimport TitleInfo from '../TitleInfo';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { useUrls, useReady, useGridItemSize } from '../hooks';\nimport { useExpressionMatrixData, useGeneSelection } from '../data-hooks';\nimport ExpressionHistogram from './ExpressionHistogram';\n\nconst EXPRESSION_HISTOGRAM_DATA_TYPES = ['expression-matrix'];\n\n/**\n * A subscriber component for `ExpressionHistogram`,\n * which listens for gene selection updates and\n * `GRID_RESIZE` events.\n * @param {object} props\n * @param {function} props.removeGridComponent The grid component removal function.\n * @param {object} props.coordinationScopes An object mapping coordination\n * types to coordination scopes.\n * @param {string} props.theme The name of the current Vitessce theme.\n */\nexport default function ExpressionHistogramSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    geneSelection,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.expressionHistogram, coordinationScopes);\n\n  const [width, height, containerRef] = useGridItemSize();\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [\n    isReady,\n    setItemIsReady,\n    setItemIsNotReady, // eslint-disable-line no-unused-vars\n    resetReadyItems,\n  ] = useReady(\n    EXPRESSION_HISTOGRAM_DATA_TYPES,\n  );\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [expressionMatrix] = useExpressionMatrixData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n  // Get data from loaders using the data hooks.\n  const [expressionData] = useGeneSelection(\n    loaders, dataset, setItemIsReady, false, geneSelection, setItemIsNotReady,\n  );\n\n  const firstGeneSelected = geneSelection && geneSelection.length >= 1\n    ? geneSelection[0]\n    : null;\n\n  // From the expression matrix and the list of selected genes,\n  // generate the array of data points for the histogram.\n  const data = useMemo(() => {\n    if (firstGeneSelected && expressionMatrix && expressionData) {\n      // Create new cellColors map based on the selected gene.\n      return Array.from(expressionData[0]).map((_, index) => {\n        const value = expressionData[0][index];\n        const normValue = value * 100 / 255;\n        return { value: normValue, gene: firstGeneSelected };\n      });\n    }\n    if (expressionMatrix) {\n      const numGenes = expressionMatrix.cols.length;\n      return expressionMatrix.rows.map((cellId, cellIndex) => {\n        const values = expressionMatrix.matrix\n          .subarray(cellIndex * numGenes, (cellIndex + 1) * numGenes);\n        const sumValue = sum(values) * 100 / 255;\n        return { value: sumValue, gene: null };\n      });\n    }\n    return null;\n  }, [expressionMatrix, firstGeneSelected, expressionData]);\n\n  return (\n    <TitleInfo\n      title={`Expression Histogram${(firstGeneSelected ? ` (${firstGeneSelected})` : '')}`}\n      removeGridComponent={removeGridComponent}\n      urls={urls}\n      theme={theme}\n      isReady={isReady}\n    >\n      <div ref={containerRef} className=\"vega-container\">\n        <ExpressionHistogram\n          geneSelection={geneSelection}\n          data={data}\n          theme={theme}\n          width={width}\n          height={height}\n        />\n      </div>\n    </TitleInfo>\n  );\n}\n", "import React from 'react';\nimport clamp from 'lodash/clamp';\nimport { VegaPlot, VEGA_THEMES } from '../vega';\n\n/**\n * Gene expression histogram displayed as a bar chart,\n * implemented with the VegaPlot component.\n * @param {object} props\n * @param {string[]} props.geneSelection The list of genes\n * currently selected.\n * @param {object[]} props.data The expression data, an array\n * of objects with properties `value` and `gene`.\n * @param {string} props.theme The name of the current Vitessce theme.\n * @param {number} props.width The container width.\n * @param {number} props.height The container height.\n * @param {number} props.marginRight The size of the margin\n * on the right side of the plot, to account for the vega menu button.\n * By default, 90.\n * @param {number} props.marginBottom The size of the margin\n * on the bottom of the plot, to account for long x-axis labels.\n * By default, 50.\n */\nexport default function ExpressionHistogram(props) {\n  const {\n    geneSelection,\n    data,\n    theme,\n    width,\n    height,\n    marginRight = 90,\n    marginBottom = 50,\n  } = props;\n\n  const xTitle = geneSelection && geneSelection.length >= 1\n    ? 'Normalized Expression Value'\n    : 'Total Normalized Transcript Count';\n\n  const spec = {\n    mark: { type: 'bar' },\n    encoding: {\n      x: {\n        field: 'value',\n        type: 'quantitative',\n        bin: { maxbins: 50 },\n        title: xTitle,\n      },\n      y: {\n        type: 'quantitative',\n        aggregate: 'count',\n        title: 'Number of Cells',\n      },\n      color: { value: 'gray' },\n    },\n    width: clamp(width - marginRight, 10, Infinity),\n    height: clamp(height - marginBottom, 10, Infinity),\n    config: VEGA_THEMES[theme],\n  };\n\n  return (\n    <VegaPlot\n      data={data}\n      spec={spec}\n    />\n  );\n}\n", "import React, { useEffect, useReducer } from 'react';\nimport TitleInfo from '../TitleInfo';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { useUrls, useReady, useGridItemSize } from '../hooks';\nimport { useGeneSelection, useExpressionAttrs, useCellSetsData } from '../data-hooks';\nimport { useExpressionByCellSet } from './hooks';\nimport CellSetExpressionPlotOptions from './CellSetExpressionPlotOptions';\n\nimport CellSetExpressionPlot from './CellSetExpressionPlot';\n\nconst CELL_SET_EXPRESSION_DATA_TYPES = ['cell-sets', 'expression-matrix'];\n\n/**\n * A subscriber component for `CellSetExpressionPlot`,\n * which listens for gene selection updates and\n * `GRID_RESIZE` events.\n * @param {object} props\n * @param {function} props.removeGridComponent The grid component removal function.\n * @param {object} props.coordinationScopes An object mapping coordination\n * types to coordination scopes.\n * @param {string} props.theme The name of the current Vitessce theme.\n */\nexport default function CellSetExpressionPlotSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    geneSelection,\n    geneExpressionTransform,\n    cellSetSelection,\n    cellSetColor,\n    additionalCellSets,\n  }, {\n    setGeneExpressionTransform,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.cellSetExpression, coordinationScopes);\n\n  const [width, height, containerRef] = useGridItemSize();\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [\n    isReady,\n    setItemIsReady,\n    setItemIsNotReady, // eslint-disable-line no-unused-vars\n    resetReadyItems,\n  ] = useReady(\n    CELL_SET_EXPRESSION_DATA_TYPES,\n  );\n\n  const [useGeneExpressionTransform, toggleGeneExpressionTransform] = useReducer((v) => {\n    const newValue = !v;\n    setGeneExpressionTransform(newValue ? 'log1p' : null);\n    return newValue;\n  }, geneExpressionTransform);\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [expressionData] = useGeneSelection(\n    loaders, dataset, setItemIsReady, false, geneSelection, setItemIsNotReady,\n  );\n  const [attrs] = useExpressionAttrs(\n    loaders, dataset, setItemIsReady, addUrl, false,\n  );\n  const [cellSets] = useCellSetsData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n\n  const [expressionArr, setArr, expressionMax] = useExpressionByCellSet(\n    expressionData, attrs, cellSets, additionalCellSets,\n    geneSelection, cellSetSelection, cellSetColor, useGeneExpressionTransform,\n    theme,\n  );\n\n  const firstGeneSelected = geneSelection && geneSelection.length >= 1\n    ? geneSelection[0]\n    : null;\n  return (\n    <TitleInfo\n      title={`Expression by Cell Set${(firstGeneSelected ? ` (${firstGeneSelected})` : '')}`}\n      removeGridComponent={removeGridComponent}\n      urls={urls}\n      theme={theme}\n      isReady={isReady}\n      options={(\n        <CellSetExpressionPlotOptions\n          useGeneExpressionTransform={useGeneExpressionTransform}\n          toggleGeneExpressionTransform={toggleGeneExpressionTransform}\n        />\n      )}\n    >\n      <div ref={containerRef} className=\"vega-container\">\n        {expressionArr ? (\n          <CellSetExpressionPlot\n            domainMax={expressionMax}\n            colors={setArr}\n            data={expressionArr}\n            theme={theme}\n            width={width}\n            height={height}\n            useGeneExpressionTransform={useGeneExpressionTransform}\n          />\n        ) : (\n          <span>Select a gene.</span>\n        )}\n      </div>\n    </TitleInfo>\n  );\n}\n", "import { useMemo } from 'react';\nimport { mergeCellSets } from '../utils';\nimport { treeToObjectsBySetNames, treeToSetSizesBySetNames } from './cell-set-utils';\n\n/**\n * Get expression data for the cells\n * in the selected cell sets.\n * @param {object} expressionMatrix\n * @param {string[]} expressionMatrix.rows Cell IDs.\n * @param {string[]} expressionMatrix.cols Gene names.\n * @param {Uint8Array} expressionMatrix.matrix The\n * flattened expression matrix as a typed array.\n * @param {object} cellSets The cell sets from the dataset.\n * @param {object} additionalCellSets The user-defined cell sets\n * from the coordination space.\n * @param {array} geneSelection Array of selected genes.\n * @param {array} cellSetSelection Array of selected cell set paths.\n * @param {object[]} cellSetColor Array of objects with properties\n * @param {string} theme \"light\" or \"dark\" for the vitessce theme\n * `path` and `color`.\n */\nexport function useExpressionByCellSet(\n  expressionData, expressionDataAttrs, cellSets, additionalCellSets,\n  geneSelection, cellSetSelection, cellSetColor, useGeneExpressionTransform,\n  theme,\n) {\n  const mergedCellSets = useMemo(\n    () => mergeCellSets(cellSets, additionalCellSets),\n    [cellSets, additionalCellSets],\n  );\n\n  // From the expression matrix and the list of selected genes / cell sets,\n  // generate the array of data points for the plot.\n  const [expressionArr, expressionMax] = useMemo(() => {\n    if (mergedCellSets && cellSetSelection\n        && geneSelection && geneSelection.length >= 1\n        && expressionData\n    ) {\n      const cellObjects = treeToObjectsBySetNames(\n        mergedCellSets, cellSetSelection, cellSetColor, theme,\n      );\n\n      const firstGeneSelected = geneSelection[0];\n      // Create new cellColors map based on the selected gene.\n      let exprMax = -Infinity;\n      const cellIndices = {};\n      for (let i = 0; i < expressionDataAttrs.rows.length; i += 1) {\n        cellIndices[expressionDataAttrs.rows[i]] = i;\n      }\n      const exprValues = cellObjects.map((cell) => {\n        const cellIndex = cellIndices[cell.obsId];\n        const value = expressionData[0][cellIndex];\n        const normValue = value * 100 / 255;\n        const transformedValue = useGeneExpressionTransform ? Math.log(1 + normValue) : normValue;\n        exprMax = Math.max(transformedValue, exprMax);\n        return { value: transformedValue, gene: firstGeneSelected, set: cell.name };\n      });\n      return [exprValues, exprMax];\n    }\n    return [null, null];\n  }, [expressionData, expressionDataAttrs, geneSelection, theme,\n    mergedCellSets, cellSetSelection, cellSetColor, useGeneExpressionTransform]);\n\n  // From the cell sets hierarchy and the list of selected cell sets,\n  // generate the array of set sizes data points for the bar plot.\n  const setArr = useMemo(() => (mergedCellSets && cellSetSelection && cellSetColor\n    ? treeToSetSizesBySetNames(mergedCellSets, cellSetSelection, cellSetColor, theme)\n    : []\n  ), [mergedCellSets, cellSetSelection, cellSetColor, theme]);\n\n  return [expressionArr, setArr, expressionMax];\n}\n", "import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\n\nexport default function CellSetExpressionPlotOptions(props) {\n  const { toggleGeneExpressionTransform, useGeneExpressionTransform } = props;\n  const classes = useStyles();\n\n  function handleGeneExpressionTransformChange() {\n    toggleGeneExpressionTransform();\n  }\n\n  return (\n    <OptionsContainer>\n      <TableRow>\n        <TableCell className={classes.labelCell}>Log Transform</TableCell>\n        <TableCell className={classes.inputCell}>\n          <Checkbox\n            className={classes.checkbox}\n            checked={Boolean(useGeneExpressionTransform)}\n            onChange={handleGeneExpressionTransformChange}\n            name=\"scatterplot-option-cell-set-labels\"\n            color=\"default\"\n          />\n        </TableCell>\n      </TableRow>\n    </OptionsContainer>\n  );\n}\n", "import React from 'react';\nimport clamp from 'lodash/clamp';\nimport { VegaPlot, VEGA_THEMES, DATASET_NAME } from '../vega';\nimport { colorArrayToString } from './utils';\n\n/**\n * Gene expression histogram displayed as a bar chart,\n * implemented with the VegaPlot component.\n * @param {object} props\n * @param {object[]} props.data The expression data, an array\n * of objects with properties `value`, `gene`, and `set`.\n * @param {number} props.domainMax The maximum gene expression value.\n * @param {object[]} props.colors An object for each\n * cell set, with properties `name` and `color`.\n * @param {string} props.theme The name of the current Vitessce theme.\n * @param {number} props.width The container width.\n * @param {number} props.height The container height.\n * @param {number} props.marginRight The size of the margin\n * on the right side of the plot, to account for the vega menu button.\n * By default, 90.\n * @param {number} props.marginBottom The size of the margin\n * on the bottom of the plot, to account for long x-axis labels.\n * Default is allowing the component to automatically determine the margin.\n * @param {boolean} props.useGeneExpressionTransform Boolean representing\n * whether or not the expression values are log-transformed.\n */\nexport default function CellSetExpressionPlot(props) {\n  const {\n    domainMax = 100,\n    colors,\n    data,\n    theme,\n    width,\n    height,\n    marginRight = 90,\n    marginBottom,\n    useGeneExpressionTransform,\n  } = props;\n  // Get the max characters in an axis label for autsizing the bottom margin.\n  const maxCharactersForLabel = data.reduce((acc, val) => {\n    // eslint-disable-next-line no-param-reassign\n    acc = acc === undefined || val.set.length > acc ? val.set.length : acc;\n    return acc;\n  }, 0);\n  // Use a square-root term because the angle of the labels is 45 degrees (see below)\n  // so the perpendicular distance to the bottom of the labels is proportional to the\n  // square root of the length of the labels along the imaginary hypotenuse.\n  // 30 is an estimate of the pixel size of a given character and seems to work well.\n  const autoMarginBottom = marginBottom\n    || 30 + Math.sqrt(maxCharactersForLabel / 2) * 30;\n  // Manually set the color scale so that Vega-Lite does\n  // not choose the colors automatically.\n  const colorScale = {\n    domain: colors.map(d => d.name),\n    range: colors.map(d => colorArrayToString(d.color)),\n  };\n\n  const plotWidth = clamp(width - marginRight, 10, Infinity);\n  const plotHeight = clamp(height - autoMarginBottom, 10, Infinity);\n\n  const numBands = colors.length;\n  const bandWidth = plotWidth / numBands;\n\n  const rectColor = (theme === 'dark' ? 'white' : 'black');\n\n  const spec = {\n    $schema: 'https://vega.github.io/schema/vega/v5.json',\n    description: 'A violin plot showing distributions of expression levels for selected cell sets.',\n    width: plotWidth,\n    height: plotHeight,\n    config: {\n      ...VEGA_THEMES[theme],\n      axisBand: {\n        bandPosition: 1,\n        tickExtra: true,\n        tickOffset: 0,\n      },\n    },\n\n    signals: [\n      { name: 'bandWidth', value: bandWidth },\n      { name: 'width', value: plotWidth },\n      { name: 'height', value: plotHeight },\n      { name: 'trim', value: true },\n    ],\n\n    data: [\n      {\n        name: 'density',\n        source: DATASET_NAME,\n        transform: [\n          {\n            type: 'kde',\n            field: 'value',\n            groupby: ['set'],\n            bandwidth: 0,\n            extent: [0, domainMax],\n          },\n        ],\n      },\n      {\n        name: 'stats',\n        source: DATASET_NAME,\n        transform: [\n          {\n            type: 'aggregate',\n            groupby: ['set'],\n            fields: ['value', 'value', 'value'],\n            ops: ['q1', 'median', 'q3'],\n            as: ['q1', 'median', 'q3'],\n          },\n        ],\n      },\n    ],\n\n    scales: [\n      {\n        name: 'layout',\n        type: 'band',\n        range: 'width',\n        domain: { data: DATASET_NAME, field: 'set' },\n      },\n      {\n        name: 'yscale',\n        type: 'linear',\n        range: 'height',\n        domain: [0, domainMax],\n      },\n      {\n        name: 'wscale',\n        type: 'linear',\n        range: [0, { signal: 'bandWidth' }],\n        domain: { data: 'density', field: 'density' },\n      },\n      {\n        name: 'wscaleReversed',\n        type: 'linear',\n        reverse: true,\n        range: [0, { signal: 'bandWidth' }],\n        domain: { data: 'density', field: 'density' },\n      },\n      {\n        name: 'color',\n        type: 'ordinal',\n        ...colorScale,\n      },\n    ],\n\n    axes: [\n      {\n        orient: 'left',\n        scale: 'yscale',\n        zindex: 1,\n        // title: useGeneExpressionTransform\n        //   ? 'Log-Normalized Expression Values' : 'Normalized Expression Values',\n        title: useGeneExpressionTransform\n          ? ['Log-Transformed', 'Normalized Expression Values']\n          : 'Normalized Expression Values',\n      },\n      {\n        orient: 'bottom',\n        scale: 'layout',\n        tickCount: 5,\n        zindex: 1,\n        title: 'Cell Set',\n        labelAngle: -45,\n        labelAlign: 'right',\n      },\n    ],\n\n    marks: [\n      {\n        type: 'group',\n        from: {\n          facet: {\n            data: 'density',\n            name: 'violin',\n            groupby: 'set',\n          },\n        },\n\n        encode: {\n          enter: {\n            xc: { scale: 'layout', field: 'set', band: 0.5 },\n            width: { signal: 'bandWidth' },\n            height: { signal: 'height' },\n          },\n        },\n\n        data: [\n          {\n            name: 'summary',\n            source: 'stats',\n            transform: [\n              {\n                type: 'filter',\n                expr: 'datum.set === parent.set',\n              },\n            ],\n          },\n        ],\n\n        marks: [\n          {\n            type: 'area',\n            orient: 'vertical',\n            from: { data: 'violin' },\n            encode: {\n              enter: {\n                fill: { scale: 'color', field: { parent: 'set' } },\n              },\n              update: {\n                width: { scale: 'wscale', field: 'density' },\n                xc: { signal: 'bandWidth / 2' },\n                y2: { scale: 'yscale', field: 'value' },\n                y: { scale: 'yscale', value: 0 },\n              },\n            },\n          },\n          {\n            type: 'area',\n            orient: 'vertical',\n            from: { data: 'violin' },\n            encode: {\n              enter: {\n                fill: { scale: 'color', field: { parent: 'set' } },\n              },\n              update: {\n                width: { scale: 'wscaleReversed', field: 'density' },\n                xc: { signal: 'bandWidth' },\n                y2: { scale: 'yscale', field: 'value' },\n                y: { scale: 'yscale', value: 0 },\n              },\n            },\n          },\n          {\n            type: 'rect',\n            from: { data: 'summary' },\n            encode: {\n              enter: {\n                fill: { value: rectColor },\n                width: { value: 2 },\n              },\n              update: {\n                y: { scale: 'yscale', field: 'q1' },\n                y2: { scale: 'yscale', field: 'q3' },\n                xc: { signal: 'bandWidth / 2' },\n              },\n            },\n          },\n          {\n            type: 'rect',\n            from: { data: 'summary' },\n            encode: {\n              enter: {\n                fill: { value: rectColor },\n                height: { value: 2 },\n                width: { value: 8 },\n              },\n              update: {\n                y: { scale: 'yscale', field: 'median' },\n                xc: { signal: 'bandWidth / 2' },\n              },\n            },\n          },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <VegaPlot\n      data={data}\n      spec={spec}\n    />\n  );\n}\n", "import DescriptionSubscriber from '../components/description/DescriptionSubscriber';\nimport StatusSubscriber from '../components/status/StatusSubscriber';\nimport GenesSubscriber from '../components/genes/GenesSubscriber';\nimport CellSetsManagerSubscriber from '../components/sets/CellSetsManagerSubscriber';\nimport ScatterplotSubscriber from '../components/scatterplot/ScatterplotSubscriber';\nimport SpatialSubscriber from '../components/spatial/SpatialSubscriber';\nimport HeatmapSubscriber from '../components/heatmap/HeatmapSubscriber';\nimport LayerControllerSubscriber from '../components/layer-controller/LayerControllerSubscriber';\nimport HiGlassSubscriber from '../components/higlass/HiGlassSubscriber';\nimport CellSetSizesPlotSubscriber from '../components/sets/CellSetSizesPlotSubscriber';\nimport GenomicProfilesSubscriber from '../components/higlass/GenomicProfilesSubscriber';\nimport ExpressionHistogramSubscriber from '../components/genes/ExpressionHistogramSubscriber';\nimport CellSetExpressionPlotSubscriber from '../components/sets/CellSetExpressionPlotSubscriber';\n\nconst registry = {\n  description: DescriptionSubscriber,\n  status: StatusSubscriber,\n  genes: GenesSubscriber,\n  cellSets: CellSetsManagerSubscriber,\n  scatterplot: ScatterplotSubscriber,\n  spatial: SpatialSubscriber,\n  heatmap: HeatmapSubscriber,\n  layerController: LayerControllerSubscriber,\n  cellSetSizes: CellSetSizesPlotSubscriber,\n  expressionHistogram: ExpressionHistogramSubscriber,\n  genomicProfiles: GenomicProfilesSubscriber,\n  cellSetExpression: CellSetExpressionPlotSubscriber,\n  // The plain higlass component does not abstract away the HiGlass view config,\n  // so we probably want to avoid documenting it, only use it for development purposes.\n  higlass: HiGlassSubscriber,\n};\n\nexport function getComponent(name) {\n  const component = registry[name];\n  if (component === undefined) {\n    throw new Error(`Could not find definition for \"${name}\" in registry.`);\n  }\n  return registry[name];\n}\n", "/* eslint-disable no-plusplus */\nimport packageJson from '../../package.json';\nimport { getNextScope } from '../utils';\nimport {\n  COORDINATION_TYPES,\n  DEFAULT_COORDINATION_VALUES,\n  COMPONENT_COORDINATION_TYPES,\n  AUTO_INDEPENDENT_COORDINATION_TYPES,\n} from './state/coordination';\nimport { SCHEMA_HANDLERS } from './view-config-versions';\n\n/**\n * Get a list of all unique scope names for a\n * particular coordination type, which exist in\n * a particular view config.\n * @param {object} config A view config object.\n * @param {string} coordinationType A coordination type,\n * for example 'spatialZoom' or 'dataset'.\n * @returns {string[]} Array of existing coordination scope names.\n */\nexport function getExistingScopesForCoordinationType(config, coordinationType) {\n  const spaceScopes = Object.keys(config?.coordinationSpace?.[coordinationType] || {});\n  const componentScopes = config.layout.map(c => c.coordinationScopes?.[coordinationType]);\n  return Array.from(new Set([...spaceScopes, ...componentScopes]));\n}\n\n/**\n * Give each component the same scope name for this coordination type.\n * @param {object} config A view config object.\n * @param {string} coordinationType A coordination type,\n * for example 'spatialZoom' or 'dataset'.\n * @param {*} scopeValue The initial value for the coordination scope,\n * to set in the coordination space.\n * @returns {object} The new view config.\n */\nfunction coordinateComponentsTogether(config, coordinationType, scopeValue) {\n  const scopeName = getNextScope(getExistingScopesForCoordinationType(config, coordinationType));\n  const newConfig = {\n    ...config,\n    coordinationSpace: {\n      ...config.coordinationSpace,\n      [coordinationType]: {\n        ...config?.coordinationSpace?.[coordinationType],\n        // Add the new scope name and value to the coordination space.\n        [scopeName]: scopeValue,\n      },\n    },\n    layout: config.layout.map(component => ({\n      ...component,\n      coordinationScopes: {\n        ...component.coordinationScopes,\n        // Only set the coordination scope if this component uses this coordination type,\n        // and the component is missing a coordination scope for this coordination type.\n        ...((\n          COMPONENT_COORDINATION_TYPES[component.component].includes(coordinationType)\n          && !component.coordinationScopes?.[coordinationType]\n        ) ? {\n          // Only set the new scope name if the scope name\n          // for this component and coordination type is currently undefined.\n            [coordinationType]: scopeName,\n          } : {}),\n      },\n    })),\n  };\n  return newConfig;\n}\n\n/**\n * Give each component a different scope name for this coordination type.\n * @param {object} config A view config object.\n * @param {string} coordinationType A coordination type,\n * for example 'spatialZoom' or 'dataset'.\n * @param {*} scopeValue The initial value for the coordination scope,\n * to set in the coordination space.\n * @returns {object} The new view config.\n */\nfunction coordinateComponentsIndependent(config, coordinationType, scopeValue) {\n  const newConfig = {\n    ...config,\n    layout: [...config.layout],\n  };\n  const newScopes = {};\n  newConfig.layout.forEach((component, i) => {\n    // Only set the coordination scope if this component uses this coordination type,\n    // and the component is missing a coordination scope for this coordination type.\n    if (COMPONENT_COORDINATION_TYPES[component.component].includes(coordinationType)\n      && !component.coordinationScopes?.[coordinationType]\n    ) {\n      const scopeName = getNextScope([\n        ...getExistingScopesForCoordinationType(config, coordinationType),\n        ...Object.keys(newScopes),\n      ]);\n      newScopes[scopeName] = scopeValue;\n      newConfig.layout[i] = {\n        ...component,\n        coordinationScopes: {\n          ...component.coordinationScopes,\n          [coordinationType]: scopeName,\n        },\n      };\n    }\n  });\n  newConfig.coordinationSpace = {\n    ...newConfig.coordinationSpace,\n    [coordinationType]: {\n      ...newConfig.coordinationSpace[coordinationType],\n      // Add the new scope name and value to the coordination space.\n      ...newScopes,\n    },\n  };\n  return newConfig;\n}\n\nfunction initializeAuto(config) {\n  let newConfig = config;\n  const { layout, datasets } = newConfig;\n\n  // For each coordination type, check whether it requires initialization.\n  Object.values(COORDINATION_TYPES).forEach((coordinationType) => {\n    // A coordination type requires coordination if at least one component is missing\n    // a (coordination type, coordination scope) tuple.\n    // Components may only use a subset of all coordination types.\n    const requiresCoordination = !layout\n      .every(c => (\n        !COMPONENT_COORDINATION_TYPES[c.component].includes(coordinationType)\n                || c.coordinationScopes?.[coordinationType]\n      ));\n    if (requiresCoordination) {\n      // Note that the default value may be undefined.\n      let defaultValue = DEFAULT_COORDINATION_VALUES[coordinationType];\n      // Check whether this is the special 'dataset' coordination type.\n      if (coordinationType === 'dataset' && datasets.length >= 1) {\n        // Use the first dataset ID as the default\n        // if there is at least one dataset.\n        defaultValue = datasets[0].uid;\n      }\n      // Use the list of \"independent\" coordination types\n      // to determine whether a particular coordination type\n      // should be initialized to\n      // a unique scope for every component (\"independent\")\n      // vs. the same scope for every component (\"together\").\n      if (AUTO_INDEPENDENT_COORDINATION_TYPES.includes(coordinationType)) {\n        newConfig = coordinateComponentsIndependent(newConfig, coordinationType, defaultValue);\n      } else {\n        newConfig = coordinateComponentsTogether(newConfig, coordinationType, defaultValue);\n      }\n    }\n  });\n\n  return newConfig;\n}\n\n\n/**\n * Initialize the view config:\n * - Fill in missing coordination objects with default values.\n * - Fill in missing component coordination scope mappings.\n *   based on the `initStrategy` specified in the view config.\n * Should be \"stable\": if run on the same view config twice, the return value the second\n * time should be identical to the return value the first time.\n * @param {object} config The view config prop.\n */\nexport function initialize(config) {\n  if (config.initStrategy === 'auto') {\n    return initializeAuto(config);\n  }\n  return config;\n}\n\nexport function upgradeAndValidate(oldConfig) {\n  // oldConfig object must have a `version` property.\n  let nextConfig = oldConfig;\n  let fromVersion;\n  let upgradeFunction; let\n    validateFunction;\n\n  do {\n    fromVersion = nextConfig.version;\n\n    if (!Object.keys(SCHEMA_HANDLERS).includes(fromVersion)) {\n      return [{\n        title: 'Config validation failed',\n        preformatted: 'Unknown config version.',\n      }, false];\n    }\n\n    [validateFunction, upgradeFunction] = SCHEMA_HANDLERS[fromVersion];\n\n    // Validate under the legacy schema before upgrading.\n    const validLegacy = validateFunction(nextConfig);\n    if (!validLegacy) {\n      const failureReason = JSON.stringify(validateFunction.errors, null, 2);\n      return [{\n        title: 'Config validation failed',\n        preformatted: failureReason,\n      }, false];\n    }\n\n    if (upgradeFunction) {\n      nextConfig = upgradeFunction(nextConfig);\n    }\n  } while (upgradeFunction);\n\n  // NOTE: Remove when a view config viewer/editor is available in UI.\n  console.groupCollapsed(`\uD83D\uDE84 Vitessce (${packageJson.version}) view configuration`);\n  console.info(`data:,${JSON.stringify(nextConfig)}`);\n  console.info(JSON.stringify(nextConfig, null, 2));\n  console.groupEnd();\n\n  return [nextConfig, true];\n}\n", "import Bowser from 'bowser';\nimport { compressToEncodedURIComponent, decompressFromEncodedURIComponent } from 'lz-string';\n\nconst CURRENT_VERSION = '0.0.1';\nconst VITESSCE_CONF_QUERY_STRING = 'vitessce_conf';\nconst VERSION_QUERY_STRING = 'vitessce_conf_version';\nconst LENGTH_QUERY_STRING = 'vitessce_conf_length';\n\nfunction sniffBrowser() {\n  const { browser } = Bowser.parse(window.navigator.userAgent);\n  return browser.name;\n}\n\n// https://stackoverflow.com/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers\nconst MAX_BROWSER_URL_LENGTHS = {\n  Chrome: 32779,\n  'Internet Explorer': 2047,\n  Edge: 2047,\n  Safari: 65000,\n  Firefox: 65000,\n};\n\nexport default class CompressedConfLengthError {\n  constructor(message) {\n    this.message = message;\n  }\n}\n\n/**\n * Encode a configuration as url params with a version and an lz-compressed conf.\n * @param {Object} params\n * @param {Object} params.conf Previous scope names.\n * @param {function} params.onOverMaximumUrlLength Callback for when new url\n * is over max length for your browser - takes two arguments: { message, willWorkOn }\n * for the error message and the browsers for which the url will work (optional).\n * @returns {string} The new params like\n * vitessce_conf_length=10&vitessce_conf_version=0.0.1&vitessce_conf=fksdfasdfjkl\n */\nexport function encodeConfInUrl({\n  conf,\n  onOverMaximumUrlLength = () => { },\n}) {\n  const compressedConf = compressToEncodedURIComponent(JSON.stringify(conf));\n  const newParams = `${LENGTH_QUERY_STRING}=${compressedConf.length}&${VERSION_QUERY_STRING}=${CURRENT_VERSION}&${VITESSCE_CONF_QUERY_STRING}=${compressedConf}`;\n  const browser = sniffBrowser();\n  const maxLength = MAX_BROWSER_URL_LENGTHS[browser];\n  if (newParams.length > maxLength) {\n    const willWorkOn = Object.entries(MAX_BROWSER_URL_LENGTHS)\n      .filter(entry => entry[1] > newParams.length)\n      .map(entry => entry[0]);\n    const message = `Configuration is ${compressedConf.length} characters; max URL for ${browser} is ${maxLength}: it will work on ${willWorkOn.join(', ') || 'no browser'}.`;\n    console.error(message);\n    onOverMaximumUrlLength({ message, willWorkOn });\n  }\n  return newParams;\n}\n\n/**\n * Decode URL params to a Vitessce configuration.\n * The URL params must have version and vitessce_conf params,\n * like vitessce_conf_length=10&vitessce_conf_version=0.0.1&vitessce_conf=fksdfasdfjkl.\n * @param {Object} queryString The URL params,\n * like vitessce_conf_length=10&vitessce_conf_version=0.0.1&vitessce_conf=fksdfasdfjkl.\n * @returns {string} A vitessce configuration.\n */\nexport function decodeURLParamsToConf(queryString) {\n  const params = new URLSearchParams(queryString.replace('#', '&'));\n  const compressedConfString = params.get(VITESSCE_CONF_QUERY_STRING);\n  const expectedConfLength = Number(params.get(LENGTH_QUERY_STRING));\n  if (expectedConfLength !== compressedConfString.length) {\n    throw new CompressedConfLengthError(`Compressed conf length (${compressedConfString.length}) != expected (${expectedConfLength}). URL truncated?`);\n  }\n  const version = params.get(VERSION_QUERY_STRING);\n  if (version === CURRENT_VERSION) {\n    const conf = JSON.parse(decompressFromEncodedURIComponent(compressedConfString));\n    return conf;\n  }\n  throw new Error('Unrecognized URL Param Version');\n}\n", "import { getNextScope, fromEntries } from '../utils';\nimport { COORDINATION_TYPES } from '../app/state/coordination';\n\n\n/**\n * Class representing a file within a Vitessce config dataset.\n */\nexport class VitessceConfigDatasetFile {\n  /**\n   * Construct a new file definition instance.\n   * @param {string} url The URL to the file.\n   * @param {string} dataType The type of data contained in the file.\n   * @param {string} fileType The file type.\n   */\n  constructor(url, dataType, fileType) {\n    this.file = {\n      url,\n      type: dataType,\n      fileType,\n    };\n  }\n\n  /**\n   * @returns {object} This dataset file as a JSON object.\n   */\n  toJSON() {\n    return this.file;\n  }\n}\n\n/**\n * Class representing a dataset within a Vitessce config.\n */\nexport class VitessceConfigDataset {\n  /**\n   * Construct a new dataset definition instance.\n   * @param {string} uid The unique ID for the dataset.\n   * @param {string} name The name of the dataset.\n   * @param {string} description A description for the dataset.\n   */\n  constructor(uid, name, description) {\n    this.dataset = {\n      uid,\n      name,\n      description,\n      files: [],\n    };\n  }\n\n  /**\n   * Add a file definition to the dataset.\n   * @param {string} url The URL to the file.\n   * @param {string} dataType The type of data contained in the file.\n   * @param {string} fileType The file type.\n   * @returns {VitessceConfigDataset} This, to allow chaining.\n   */\n  addFile(url, dataType, fileType) {\n    this.dataset.files.push(new VitessceConfigDatasetFile(url, dataType, fileType));\n    return this;\n  }\n\n  /**\n   * @returns {object} This dataset as a JSON object.\n   */\n  toJSON() {\n    return {\n      ...this.dataset,\n      files: this.dataset.files.map(f => f.toJSON()),\n    };\n  }\n}\n\n/**\n * Class representing a view within a Vitessce layout.\n */\nexport class VitessceConfigView {\n  /**\n   * Construct a new view instance.\n   * @param {string} component The name of the Vitessce component type.\n   * @param {object} coordinationScopes A mapping from coordination type\n   * names to coordination scope names.\n   * @param {number} x The x-coordinate of the view in the layout.\n   * @param {number} y The y-coordinate of the view in the layout.\n   * @param {number} w The width of the view in the layout.\n   * @param {number} h The height of the view in the layout.\n   */\n  constructor(component, coordinationScopes, x, y, w, h) {\n    this.view = {\n      component,\n      coordinationScopes,\n      x,\n      y,\n      w,\n      h,\n    };\n  }\n\n  /**\n   * Attach coordination scopes to this view.\n   * @param  {...VitessceConfigCoordinationScope} args A variable number of\n   * coordination scope instances.\n   * @returns {VitessceConfigView} This, to allow chaining.\n   */\n  useCoordination(...args) {\n    const cScopes = args;\n    cScopes.forEach((cScope) => {\n      this.view.coordinationScopes[cScope.cType] = cScope.cScope;\n    });\n    return this;\n  }\n\n  /**\n    * Set the x, y, w, h values for this view.\n    * @param {number} x The x-coordinate of the view in the layout.\n    * @param {number} y The y-coordinate of the view in the layout.\n    * @param {number} w The width of the view in the layout.\n    * @param {number} h The height of the view in the layout.\n    */\n  setXYWH(x, y, w, h) {\n    this.view.x = x;\n    this.view.y = y;\n    this.view.w = w;\n    this.view.h = h;\n  }\n\n  /**\n   * @returns {object} This view as a JSON object.\n   */\n  toJSON() {\n    return this.view;\n  }\n}\n\n/**\n * Class representing a horizontal concatenation of views.\n */\nexport class VitessceConfigViewHConcat {\n  constructor(views) {\n    this.views = views;\n  }\n}\n\n/**\n * Class representing a vertical concatenation of views.\n */\nexport class VitessceConfigViewVConcat {\n  constructor(views) {\n    this.views = views;\n  }\n}\n\n/**\n * A helper function to create a horizontal concatenation of views.\n * @param  {...(VitessceConfigView|VitessceConfigViewHConcat|VitessceConfigViewVConcat)} views A\n * variable number of views or view concatenations.\n * @returns {VitessceConfigViewHConcat} A new horizontal view concatenation instance.\n */\nexport function hconcat(...views) {\n  const vcvhc = new VitessceConfigViewHConcat(views);\n  return vcvhc;\n}\n\n/**\n * A helper function to create a vertical concatenation of views.\n * @param  {...(VitessceConfigView|VitessceConfigViewHConcat|VitessceConfigViewVConcat)} views A\n * variable number of views or view concatenations.\n * @returns {VitessceConfigViewVConcat} A new vertical view concatenation instance.\n */\nexport function vconcat(...views) {\n  const vcvvc = new VitessceConfigViewVConcat(views);\n  return vcvvc;\n}\n\n/**\n * Class representing a coordination scope in the coordination space.\n */\nexport class VitessceConfigCoordinationScope {\n  /**\n   * Construct a new coordination scope instance.\n   * @param {string} cType The coordination type for this coordination scope.\n   * @param {string} cScope The name of the coordination scope.\n   */\n  constructor(cType, cScope) {\n    this.cType = cType;\n    this.cScope = cScope;\n    this.cValue = null;\n  }\n\n  /**\n   * Set the coordination value of the coordination scope.\n   * @param {any} cValue The value to set.\n   * @returns {VitessceConfigCoordinationScope} This, to allow chaining.\n   */\n  setValue(cValue) {\n    this.cValue = cValue;\n    return this;\n  }\n}\n\n/**\n * Class representing a Vitessce view config.\n */\nexport class VitessceConfig {\n  /**\n   * Construct a new view config instance.\n   * @param {string} name A name for the config. Optional.\n   * @param {string} description A description for the config. Optional.\n   */\n  constructor(name = undefined, description = undefined) {\n    this.config = {\n      version: '1.0.0',\n      name,\n      description,\n      datasets: [],\n      coordinationSpace: {},\n      layout: [],\n      initStrategy: 'auto',\n    };\n  }\n\n  /**\n   * Add a new dataset to the config.\n   * @param {string} name A name for the dataset. Optional.\n   * @param {string} description A description for the dataset. Optional.\n   * @param {object} options Extra parameters to be used internally. Optional.\n   * @param {string} options.uid Override the automatically-generated dataset ID.\n   * Intended for internal usage by the VitessceConfig.fromJSON code.\n   * @returns {VitessceConfigDataset} A new dataset instance.\n   */\n  addDataset(name = undefined, description = undefined, options = undefined) {\n    const { uid } = options || {};\n    const prevDatasetUids = this.config.datasets.map(d => d.dataset.uid);\n    const nextUid = (uid || getNextScope(prevDatasetUids));\n    const newDataset = new VitessceConfigDataset(nextUid, name, description);\n    this.config.datasets.push(newDataset);\n    const [newScope] = this.addCoordination(COORDINATION_TYPES.DATASET);\n    newScope.setValue(nextUid);\n    return newDataset;\n  }\n\n  /**\n   * Add a new view to the config.\n   * @param {VitessceConfigDataset} dataset The dataset instance which defines the data\n   * that will be displayed in the view.\n   * @param {string} component A component name, such as \"scatterplot\" or \"spatial\".\n   * @param {object} options Extra options for the component.\n   * @param {number} options.x The x-coordinate for the view in the grid layout.\n   * @param {number} options.y The y-coordinate for the view in the grid layout.\n   * @param {number} options.w The width for the view in the grid layout.\n   * @param {number} options.h The height for the view in the grid layout.\n   * @param {number} options.mapping A convenience parameter for setting the EMBEDDING_TYPE\n   * coordination value. Only applicable if the component is \"scatterplot\".\n   * @returns {VitessceConfigView} A new view instance.\n   */\n  addView(dataset, component, options) {\n    const {\n      x = 0,\n      y = 0,\n      w = 1,\n      h = 1,\n      mapping = null,\n    } = options || {};\n    const datasetMatches = (\n      this.config.coordinationSpace[COORDINATION_TYPES.DATASET]\n        ? Object.entries(this.config.coordinationSpace[COORDINATION_TYPES.DATASET])\n        // eslint-disable-next-line no-unused-vars\n          .filter(([scopeName, datasetScope]) => datasetScope.cValue === dataset.dataset.uid)\n          .map(([scopeName]) => scopeName)\n        : []\n    );\n    let datasetScope;\n    if (datasetMatches.length === 1) {\n      [datasetScope] = datasetMatches;\n    } else {\n      throw new Error('No coordination scope matching the dataset parameter could be found in the coordination space.');\n    }\n    const coordinationScopes = {\n      [COORDINATION_TYPES.DATASET]: datasetScope,\n    };\n    const newView = new VitessceConfigView(component, coordinationScopes, x, y, w, h);\n    if (mapping) {\n      const [etScope] = this.addCoordination(COORDINATION_TYPES.EMBEDDING_TYPE);\n      etScope.setValue(mapping);\n      newView.useCoordination(etScope);\n    }\n    this.config.layout.push(newView);\n    return newView;\n  }\n\n  /**\n   * Get an array of new coordination scope instances corresponding to coordination types\n   * of interest.\n   * @param {...string} args A variable number of coordination type names.\n   * @returns {VitessceConfigCoordinationScope[]} An array of coordination scope instances.\n   */\n  addCoordination(...args) {\n    const cTypes = args;\n    const result = [];\n    cTypes.forEach((cType) => {\n      const prevScopes = (\n        this.config.coordinationSpace[cType]\n          ? Object.keys(this.config.coordinationSpace[cType])\n          : []\n      );\n      const scope = new VitessceConfigCoordinationScope(cType, getNextScope(prevScopes));\n      if (!this.config.coordinationSpace[scope.cType]) {\n        this.config.coordinationSpace[scope.cType] = {};\n      }\n      this.config.coordinationSpace[scope.cType][scope.cScope] = scope;\n      result.push(scope);\n    });\n    return result;\n  }\n\n  /**\n   * A convenience function for setting up new coordination scopes across a set of views.\n   * @param {VitessceConfigView[]} views An array of view objects to link together.\n   * @param {string[]} cTypes The coordination types on which to coordinate the views.\n   * @param {any[]} cValues Initial values corresponding to each coordination type.\n   * Should have the same length as the cTypes array. Optional.\n   * @returns {VitessceConfig} This, to allow chaining.\n   */\n  linkViews(views, cTypes, cValues = null) {\n    const cScopes = this.addCoordination(...cTypes);\n    views.forEach((view) => {\n      cScopes.forEach((cScope) => {\n        view.useCoordination(cScope);\n      });\n    });\n    if (Array.isArray(cValues) && cValues.length === cTypes.length) {\n      cScopes.forEach((cScope, i) => {\n        cScope.setValue(cValues[i]);\n      });\n    }\n    return this;\n  }\n\n  /**\n   * Set the layout of views.\n   * @param {VitessceConfigView|VitessceConfigViewHConcat|VitessceConfigViewVConcat} viewConcat A\n   * view or a concatenation of views.\n   * @returns {VitessceConfig} This, to allow chaining.\n   */\n  layout(viewConcat) {\n    function layoutAux(obj, xMin, xMax, yMin, yMax) {\n      const w = xMax - xMin;\n      const h = yMax - yMin;\n      if (obj instanceof VitessceConfigView) {\n        obj.setXYWH(xMin, yMin, w, h);\n      } else if (obj instanceof VitessceConfigViewHConcat) {\n        const { views } = obj;\n        const numViews = views.length;\n        views.forEach((view, i) => {\n          layoutAux(view, xMin + (w / numViews) * i, xMin + (w / numViews) * (i + 1), yMin, yMax);\n        });\n      } else if (obj instanceof VitessceConfigViewVConcat) {\n        const { views } = obj;\n        const numViews = views.length;\n        views.forEach((view, i) => {\n          layoutAux(view, xMin, xMax, yMin + (h / numViews) * i, yMin + (h / numViews) * (i + 1));\n        });\n      }\n    }\n\n    layoutAux(viewConcat, 0, 12, 0, 12);\n\n    return this;\n  }\n\n  /**\n   * Convert this instance to a JSON object that can be passed to the Vitessce component.\n   * @returns {object} The view config as a JSON object.\n   */\n  toJSON() {\n    return {\n      ...this.config,\n      datasets: this.config.datasets.map(d => d.toJSON()),\n      coordinationSpace: fromEntries(\n        Object.entries(this.config.coordinationSpace).map(([cType, cScopes]) => ([\n          cType,\n          fromEntries(\n            Object.entries(cScopes).map(([cScopeName, cScope]) => ([\n              cScopeName,\n              cScope.cValue,\n            ])),\n          ),\n        ])),\n      ),\n      layout: this.config.layout.map(c => c.toJSON()),\n    };\n  }\n\n  /**\n   * Create a VitessceConfig instance from an existing view config, to enable\n   * manipulation with the JavaScript API.\n   * @param {object} config An existing Vitessce view config as a JSON object.\n   * @returns {VitessceConfig} A new config instance, with values set to match\n   * the config parameter.\n   */\n  static fromJSON(config) {\n    const { name, description } = config;\n    const vc = new VitessceConfig(name, description);\n    config.datasets.forEach((d) => {\n      const newDataset = vc.addDataset(d.name, d.description, { uid: d.uid });\n      d.files.forEach((f) => {\n        newDataset.addFile(\n          f.url,\n          f.type,\n          f.fileType,\n        );\n      });\n    });\n    Object.keys(config.coordinationSpace).forEach((cType) => {\n      if (cType !== COORDINATION_TYPES.DATASET) {\n        const cObj = config.coordinationSpace[cType];\n        vc.config.coordinationSpace[cType] = {};\n        Object.entries(cObj).forEach(([cScopeName, cScopeValue]) => {\n          const scope = new VitessceConfigCoordinationScope(cType, cScopeName);\n          scope.setValue(cScopeValue);\n          vc.config.coordinationSpace[cType][cScopeName] = scope;\n        });\n      }\n    });\n    config.layout.forEach((c) => {\n      const newView = new VitessceConfigView(c.component, c.coordinationScopes, c.x, c.y, c.w, c.h);\n      vc.config.layout.push(newView);\n    });\n    return vc;\n  }\n}\n"],
  "mappings": "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,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA;AAAA,EAErB,SAAS;AAAA,IACP,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA;AAAA,EAErB,SAAS;AAAA,IACP,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,mBAAmB;AAAA;AAAA,EAErB,UAAU;AAAA,IACR,mBAAm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J;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAAM;AAAA,cACJ;AAAA,cACA;AAAA;AAAA,YAEF,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAAA;AAAA,UAGJ;AAAA,YACE,MAA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",
  "names": []
}
